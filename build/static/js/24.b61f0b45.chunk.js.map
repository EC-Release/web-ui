{"version":3,"sources":["assets/images/user_icon.svg","Header/Header.js"],"names":["module","exports","Header","e","window","confirm","localStorage","clear","logOut","location","origin","pathname","replace","console","log","href","className","this","props","user","src","GeLogo","EcIcon","width","height","type","id","data-toggle","aria-haspopup","aria-expanded","profileData","name","split","UserIcon","aria-labelledby","isFullScreenModal","onClick","fullScreenModal","bind","medModal","maxMinModal","handleUser","clickEve","event","logout","React","Component"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,uC,kLCMtBC,E,4JAOnB,SAAOC,GAEL,GADUC,OAAOC,QAAQ,oCAChB,CACPC,aAAaC,QACb,IAAIC,EACFJ,OAAOK,SAASC,OAChBN,OAAOK,SAASE,SAASC,QAAQ,OAAQ,IACzC,UACFC,QAAQC,IAAIN,GACZJ,OAAOK,SAASM,KAAOP,K,oBAK3B,WAAU,IAAD,OAEP,OACE,4BACEQ,UACsB,aAApBC,KAAKC,MAAMC,KAAsB,eAAiB,eAGpD,yBAAKH,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKI,IAAKC,MACV,yBACED,IAAKE,IACLC,MAAM,MACNC,OAAO,QAGX,yBAAKR,UAAU,2BAcb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YAAf,QACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,yBACEA,UAAU,mBACVS,KAAK,SACLC,GAAG,qBACHC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SANhB,WAQWZ,KAAKC,MAAMY,YAAYC,KAAKC,MAAM,KAAK,GARlD,SAUE,8BACE,yBACEZ,IAAKa,IACLT,OAAO,SAIb,yBACER,UAAU,gBACVkB,kBAAgB,sBAEhB,uBAAGlB,UAAU,gCACVC,KAAKC,MAAMiB,kBAAoB,KAC9B,0BAAMC,QAASnB,KAAKC,MAAMmB,gBAAgBC,KAAKrB,OAA/C,eAKJ,uBAAGD,UAAU,gCACVC,KAAKC,MAAMiB,kBACV,0BAAMC,QAASnB,KAAKC,MAAMqB,SAASD,KAAKrB,OAAxC,YAIA,0BAAMmB,QAASnB,KAAKC,MAAMsB,YAAYF,KAAKrB,OAA3C,aAKJ,uBACED,UAAU,+BACVoB,QAAS,WACP,EAAKlB,MAAMuB,WAAW,EAAKvB,MAAMC,QAHrC,aAMaF,KAAKC,MAAMC,MAExB,uBACEH,UAAU,+BACVoB,QAAS,WACP,EAAKlB,MAAMwB,SAAS,iBAHxB,cAQA,uBACE1B,UAAU,+BACVoB,QAAS,SAACO,GACR,EAAKC,OAAOD,KAHhB,sB,GAhHcE,IAAMC","file":"static/js/24.b61f0b45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user_icon.cd0d4143.svg\";","import React from \"react\";\n\nimport GeLogo from '../assets/images/GE_logo.svg';\nimport EcIcon from '../assets/images/ec-icon.png';\nimport UserIcon from '../assets/images/user_icon.svg';\n\nexport default class Header extends React.Component {\n  /* istanbul ignore next */\n  /* constructor(props) {\n    super(props);\n  } */\n\n  /* istanbul ignore next */\n  logout(e) {\n    let cnf = window.confirm(\"Are you sure you want to logout?\");\n    if (cnf) {\n      localStorage.clear();\n      let logOut =\n        window.location.origin +\n        window.location.pathname.replace(\"/ops\", \"\") +\n        \"/logout\";\n      console.log(logOut);\n      window.location.href = logOut;\n    }\n  }\n\n  /* istanbul ignore next */\n  render() {\n    /* jshint ignore:start */\n    return (\n      <header\n        className={\n          this.props.user !== \"OpsAdmin\" ? \"admin-header\" : \"user-header\"\n        }\n      >\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 ge-logo\">\n              <img src={GeLogo} />\n              <img\n                src={EcIcon}\n                width=\"150\"\n                height=\"70\"\n              />\n            </div>\n            <div className=\"col-lg-6 header-profile\">\n              {/*    <span>\n                                <span className=\"name\"> Hello {this.props.profileData.name.split(\" \")[1]}!</span>\n                            </span>\n                            <span>\n                                <img src=\"assets/static/images/user_icon.svg\" height=\"30\" />\n                            </span>\n                            <span className=\"vl\"></span>\n                            <span>\n                                <img src=\"assets/static/images/notifications_icon.svg\" />\n                            </span>\n                            <span>\n                                <img src=\"assets/static/images/logout_icon.svg\" alt=\"logout\" title=\"Logout\" className=\"cursor-pointer\" onClick={(event)=>{this.logout(event)}} />\n                            </span> */}\n              <div className=\"row\">\n                <div className=\"col-sm-8\">&nbsp;</div>\n                <div className=\"col-sm-4\">\n                  <div className=\"dropdown\">\n                    <div\n                      className=\" dropdown-toggle\"\n                      type=\"button\"\n                      id=\"dropdownMenuButton\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                    >\n                      Welcome {this.props.profileData.name.split(\" \")[1]}!\n                      &nbsp;\n                      <span>\n                        <img\n                          src={UserIcon}\n                          height=\"30\"\n                        />\n                      </span>\n                    </div>\n                    <div\n                      className=\"dropdown-menu\"\n                      aria-labelledby=\"dropdownMenuButton\"\n                    >\n                      <a className=\"dropdown-item cursor-pointer\">\n                        {this.props.isFullScreenModal ? null : (\n                          <span onClick={this.props.fullScreenModal.bind(this)}>\n                            FullScreen\n                          </span>\n                        )}\n                      </a>\n                      <a className=\"dropdown-item cursor-pointer\">\n                        {this.props.isFullScreenModal ? (\n                          <span onClick={this.props.medModal.bind(this)}>\n                            Minimize\n                          </span>\n                        ) : (\n                          <span onClick={this.props.maxMinModal.bind(this)}>\n                            Minimize\n                          </span>\n                        )}\n                      </a>\n                      <a\n                        className=\"dropdown-item cursor-pointer\"\n                        onClick={() => {\n                          this.props.handleUser(this.props.user);\n                        }}\n                      >\n                        Switch to {this.props.user}\n                      </a>\n                      <a\n                        className=\"dropdown-item cursor-pointer\"\n                        onClick={() => {\n                          this.props.clickEve(\"UserProfile\");\n                        }}\n                      >\n                        My Profile\n                      </a>\n                      <a\n                        className=\"dropdown-item cursor-pointer\"\n                        onClick={(event) => {\n                          this.logout(event);\n                        }}\n                      >\n                        Logout\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n    /* jshint ignore:end */\n  }\n}\n"],"sourceRoot":""}