{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","assets/images/icon_greensortingdown.svg","assets/images/icondelete_tablemaintainmonitor.svg","assets/images/iconedit_tablemaintainmonitor.svg","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Settings/WebHooks.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_createForOfIteratorHelper","Symbol","iterator","isArray","F","s","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","module","exports","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","byteToHex","push","substr","stringify","offset","arguments","undefined","toLowerCase","v4","options","buf","rnds","random","WebHooks","props","state","formData","dirtyState","eventType","endpoint","secret","type","errorsForm","formIsValid","showForm","WebHookList","edit","editKey","showTableInit","newTableData","this","fetchData","tableId","preserveState","tableWidth","$","offsetWidth","DataTable","dom","bSort","scrollX","language","paginate","previous","createdRow","row","data","dataIndex","css","pageLength","destroy","fnDrawCallback","oSettings","aiDisplay","hide","show","addClass","webhooks","sessionStorage","getItem","respData","JSON","parse","allData","keys","forEach","key","individualData","parent","generateTableStructure","setState","showGlobalMessage","setTimeout","hideGlobalMessage","technicalTableData","tableData","dataObj","newDataObj","webhookname","initTable","fieldName","target","updatedValue","checked","currentForm","assign","handleFormValidation","currentFormData","nameValue","nameDirtyState","endpointValue","endpointDirtyState","eventTypeValue","eventTypeDirtyState","secretValue","secretDirtyState","errors","trim","prepareData","myuuid","uuidv4","btoa","unescape","encodeURIComponent","currentMethod","currentApi","baseUrl","fetch","method","headers","Accept","Authorization","authToken","body","then","response","localStorage","setItem","status","snapshotUpdate","json","errorStatus","statusMsg","catch","console","log","rowIndex","remove","draw","tbodyVal","window","confirm","removeDataTableRow","that","currentHook","currentData","decodeURIComponent","escape","atob","currentKey","className","id","alt","src","IconGreenSortingDown","onChange","event","handleFormData","onClick","showHideField","title","autoComplete","disabled","createWebHook","addWebHook","map","tbodyIndex","IconEdit","editWebhook","deleteWebhook","IconDelete","role","Rolling","React","Component"],"mappings":"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","file":"static/js/8.ca9e7126.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","module.exports = __webpack_public_path__ + \"static/media/icon_greensortingdown.7d91f50e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icondelete_tablemaintainmonitor.ba23f6b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconedit_tablemaintainmonitor.f1791879.svg\";","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport $ from \"jquery\";\n\nimport  IconGreenSortingDown from '../assets/images/icon_greensortingdown.svg';\nimport IconEdit from '../assets/images/iconedit_tablemaintainmonitor.svg';\nimport IconDelete from '../assets/images/icondelete_tablemaintainmonitor.svg';\nimport Rolling from '../assets/images/rolling.svg';\n\nexport default class WebHooks extends React.Component {\n  /* istanbul ignore next */\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {\n        name: { value: \"\", dirtyState: false },\n        eventType: { value: \"\", dirtyState: false },\n        endpoint: { value: \"\", dirtyState: false },\n        secret: { value: \"\", dirtyState: false, type: \"password\" },\n      },\n      errorsForm: {},\n      formIsValid: false,\n      showForm: false,\n      WebHookList: [\n        {\n          name: \"\",\n          eventType: \"\",\n          endpoint: \"\",\n        },\n      ],\n      edit: false,\n      editKey: \"\",\n      showTableInit: false,\n      newTableData: [],\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  /* istanbul ignore next */\n  initTable(tableId, preserveState) {\n    var pageLength = 5;\n    let tableWidth = 0;\n      tableWidth = $(\"#\" + tableId + \"Div\")[0].offsetWidth - 200;\n      $(\"#\" + tableId).DataTable({\n        dom: 'rt<\"bottom\"lp>',\n        bSort: true,\n        scrollX: true,\n        language: {\n          paginate: {\n            previous: \"<\",\n            next: \">\",\n          },\n        },\n        createdRow: function (row, data, dataIndex) {\n          for (let i = 0; i < data.length; i++) {\n            $(\"td:eq(\" + i + \")\", row).css(\n              \"min-width\",\n              tableWidth / data.length + \"px\"\n            );\n          }\n        },\n        pageLength: pageLength,\n        destroy: true,\n        fnDrawCallback: function (oSettings) {\n          if (oSettings.aiDisplay.length <= pageLength) {\n            $(\".dataTables_paginate\").hide();\n          } else {\n            $(\".dataTables_paginate\").show();\n          }\n        },\n      });\n    \n    $(\".bottom\").addClass(\"row\");\n    $(\".dataTables_length\").addClass(\"col-sm-6\");\n    $(\".dataTables_paginate\").addClass(\"col-sm-6\");\n  }\n\n  fetchData() {\n    let webhooks = [];\n    if (sessionStorage.getItem(\"snapshotData\") !== null) {\n      let respData = JSON.parse(sessionStorage.getItem(\"snapshotData\"));\n      let allData = [];\n      Object.keys(respData).forEach((key) => {\n        allData.push(respData[key]);\n      });\n      for (let individualData of allData) {\n        if (individualData.parent) {\n          if (\n            individualData.parent === \"5e69f043-966d-438f-9421-83fb18272a7d\"\n          ) {\n            webhooks.push(individualData);\n          }\n        }\n      }\n      this.generateTableStructure(webhooks, false);\n      this.setState({\n        WebHookList: webhooks,\n      });\n    } else {\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please try after sometime\",\n        \"custom-danger\"\n      );\n      this.setState({\n        WebHookList: [\n          {\n            name: \"\",\n            eventType: \"\",\n            endpoint: \"\",\n          },\n        ],\n      });\n      setTimeout(() => {\n        this.props.hideGlobalMessage();\n      }, 2000);\n    }\n  }\n\n  /* istanbul ignore next */\n  generateTableStructure(technicalTableData, preserveState) {\n    let tableData = technicalTableData;\n    let newTableData = [];\n    for (let dataObj of tableData) {\n      let newDataObj = {};\n      newDataObj.webhookname = dataObj.webhookname;\n      newDataObj.eventType = dataObj.eventType;\n      newDataObj.endpoint = dataObj.endpoint;\n      newDataObj.secret = dataObj.secret;\n      newDataObj.key = dataObj.key;\n      newTableData.push(newDataObj);\n    }\n\n    this.setState({\n      newTableData: newTableData,\n      showTableInit: true,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"webhookTable\", true);\n    }, 100);\n    /* if (preserveState === true) {\n      setTimeout(function () {\n        this.initTable(\"webhookTable\", true);\n      }, 100);\n    } else {\n      setTimeout(() => {\n        this.initTable(\"webhookTable\", false);\n      }, 100);\n    } */\n  }\n\n  /* istanbul ignore next */\n  handleFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentForm = Object.assign({}, this.state.formData);\n\n    if (fieldName === \"eventType\") {\n      currentForm.eventType.value = updatedValue;\n      currentForm.eventType.dirtyState = true;\n    } else if (fieldName === \"endpoint\") {\n      currentForm.endpoint.value = updatedValue;\n      currentForm.endpoint.dirtyState = true;\n    } else if (fieldName === \"name\") {\n      currentForm.name.value = updatedValue;\n      currentForm.name.dirtyState = true;\n    } else if (fieldName === \"secret\") {\n      currentForm.secret.value = updatedValue;\n      currentForm.secret.dirtyState = true;\n    }\n\n    this.setState({\n      formData: currentForm,\n    });\n    this.handleFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleFormValidation() {\n    let currentFormData = this.state.formData;\n    let nameValue = currentFormData.name.value;\n    let nameDirtyState = currentFormData.name.dirtyState;\n    let endpointValue = currentFormData.endpoint.value;\n    let endpointDirtyState = currentFormData.endpoint.dirtyState;\n    let eventTypeValue = currentFormData.eventType.value;\n    let eventTypeDirtyState = currentFormData.eventType.dirtyState;\n    let secretValue = currentFormData.secret.value;\n    let secretDirtyState = currentFormData.secret.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n\n    if (nameValue.trim() === \"\") {\n      if (nameDirtyState) errors.name = \"Please enter Name\";\n      formIsValid = false;\n    }\n\n    if (endpointValue.trim() === \"\") {\n      if (endpointDirtyState) errors.endpoint = \"Please enter Api Endpoint\";\n      formIsValid = false;\n    }\n\n    if (eventTypeValue.trim() === \"\") {\n      if (eventTypeDirtyState) errors.eventType = \"Please enter Event Type\";\n      formIsValid = false;\n    }\n\n    if (secretValue.trim() === \"\") {\n      if (secretDirtyState) errors.secret = \"Please enter Secret\";\n      formIsValid = false;\n    }\n\n    this.setState({\n      formIsValid: formIsValid,\n      errorsForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  /*   createNotification() {\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Record saving initiated. Please check after some time.\",\n      \"custom-success\"\n    );\n    let currentForm = Object.assign({}, this.state.formData);\n    let prepareData = {};\n    prepareData.name = currentForm.name.value;\n    prepareData.eventType = currentForm.eventType.value;\n    prepareData.endpoint = currentForm.endpoint.value;\n    console.log(prepareData);\n    this.props.hideGlobalMessage();\n    this.setState({\n      showForm: false,\n    });\n  } */\n\n  /* istanbul ignore next */\n  showHideField(e, fieldName) {\n    let currentForm = {};\n    currentForm = Object.assign({}, this.state.formData);\n\n    if (currentForm[fieldName].type === \"password\") {\n      currentForm[fieldName].type = \"text\";\n    } else {\n      currentForm[fieldName].type = \"password\";\n    }\n\n    this.setState({\n      formData: currentForm,\n    });\n  }\n\n  /* istanbul ignore next */\n  createWebHook() {\n    this.props.showGlobalMessage(\n      true,\n      true,\n      \"Please wait...\",\n      \"custom-success\"\n    );\n    let currentForm = Object.assign({}, this.state.formData);\n    let prepareData = {};\n    let myuuid = uuidv4();\n    prepareData.webhookname = currentForm.name.value;\n    prepareData.eventType = currentForm.eventType.value;\n    prepareData.endpoint = currentForm.endpoint.value;\n    prepareData.secret = btoa(\n      unescape(encodeURIComponent(currentForm.secret.value))\n    );\n\n    prepareData.parent = \"5e69f043-966d-438f-9421-83fb18272a7d\";\n    prepareData.name = \"webHook\";\n    let currentMethod = this.state.edit ? \"PUT\" : \"POST\";\n    let currentApi = this.state.edit\n      ? `${this.props.baseUrl}webhook-${this.state.editKey}`\n      : `${this.props.baseUrl}webhook-${myuuid}`;\n    // fetch(this.props.baseUrl + '/createSubscription', {\n    fetch(currentApi, {\n      method: currentMethod,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.authToken,\n      },\n      body: JSON.stringify(prepareData),\n    })\n      .then((response) => {\n        localStorage.setItem(\"prepareData\", JSON.stringify(prepareData));\n\n        if (response.status === 200) {\n          this.snapshotUpdate();\n          response.json().then((respData) => {\n            respData = {\n              errorStatus: {\n                status: \"ok\",\n              },\n            };\n            if (respData.errorStatus.status === \"ok\") {\n              this.props.showGlobalMessage(\n                false,\n                true,\n                \"Record saved successfully\",\n                \"custom-success\"\n              );\n\n              if (!this.state.edit) {\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                  let formData = {\n                    name: { value: \"\", dirtyState: false },\n                    eventType: { value: \"\", dirtyState: false },\n                    endpoint: { value: \"\", dirtyState: false },\n                    secret: { value: \"\", dirtyState: false, type: \"password\" },\n                  };\n                  this.setState({\n                    formData: formData,\n                    formIsValid: false,\n                  });\n                }, 2000);\n              }\n            } else {\n              this.props.showGlobalMessage(\n                true,\n                true,\n                respData.errorStatus.statusMsg,\n                \"custom-danger\"\n              );\n              setTimeout(() => {\n                this.props.hideGlobalMessage();\n              }, 2000);\n            }\n          });\n        } else {\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.props.showGlobalMessage(\n          true,\n          true,\n          \"Please try after sometime\",\n          \"custom-danger\"\n        );\n        setTimeout(() => {\n          this.props.hideGlobalMessage();\n        }, 2000);\n      });\n  }\n\n  /* istanbul ignore next */\n  snapshotUpdate() {\n    fetch(this.props.baseUrl + \"snapshot\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.authToken,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then((respData) => {\n          sessionStorage.setItem(\"snapshotData\", JSON.stringify(respData));\n          this.fetchData();\n        });\n      }\n    });\n  }\n\n  removeDataTableRow(tableId, rowIndex) {\n    var table = $(\"#\" + tableId).DataTable();\n    table\n      .row(\"#\" + tableId + \"TbodyTr_\" + rowIndex)\n      .remove()\n      .draw(false);\n  }\n\n  /* istanbul ignore next */\n  deleteWebhook(tbodyVal, rowIndex) {\n    let cnf = window.confirm(\"Are you sure you want to delete\");\n    if (cnf) {\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please Wait....\",\n        \"custom-success\"\n      );\n      fetch(this.props.baseUrl + tbodyVal.key, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /*    if (respData.errorStatus.status === 'ok') { */\n              this.props.showGlobalMessage(\n                false,\n                true,\n                \"Record deleted successfuly\",\n                \"custom-success\"\n              );\n              this.removeDataTableRow(\"webhookTable\", rowIndex);\n              let that = this;\n              setTimeout(function () {\n                that.props.hideGlobalMessage();\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            let that = this;\n            setTimeout(function () {\n              that.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  editWebhook(currentHook) {\n    let currentData = { ...this.state.formData };\n    currentData.name.value = currentHook.webhookname;\n    currentData.eventType.value = currentHook.eventType;\n    currentData.endpoint.value = currentHook.endpoint;\n    currentData.secret.value = decodeURIComponent(\n      escape(atob(currentHook.secret))\n    );\n    let currentKey = currentHook.key;\n    this.setState({\n      formData: currentData,\n      edit: true,\n      showForm: true,\n      editKey: currentKey,\n    });\n  }\n\n  addWebHook() {\n    let currentData = { ...this.state.formData };\n    currentData.name.value = \"\";\n    currentData.eventType.value = \"\";\n    currentData.endpoint.value = \"\";\n    currentData.secret.value = \"\";\n    this.setState({\n      formData: currentData,\n      edit: false,\n      showForm: true,\n      editKey: \"\",\n    });\n  }\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div className=\"row web-hook\">\n        {this.state.showForm ? (\n          <div className=\"col-md-12 mt-2\">\n            <div className=\"centered-div\">\n              <div className=\"centered-div-header\">\n                <div className=\"row WebHooks-header\">\n                  <div className=\"col-md-12\">\n                    <h6 id=\"WebHooks-title text-blue\">\n                      Web Hooks /\n                      <span className=\"text-black\"> Add webhook</span>\n                    </h6>\n                  </div>\n                </div>\n                <hr></hr>\n                <div className=\"changeable-form group-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"col-sm-12 label required\">\n                        NAME\n                        <img\n                          alt=\"down-arrow\"\n                          src={IconGreenSortingDown}\n                        />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"name\"\n                          value={this.state.formData.name.value}\n                          onChange={(event) => {\n                            this.handleFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsForm[\"name\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"col-sm-12 label required\">\n                        EVENT TYPE\n                        <img\n                          alt=\"down-arrow\"\n                          src={IconGreenSortingDown}\n                        />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"eventType\"\n                          value={this.state.formData.eventType.value}\n                          onChange={(event) => {\n                            this.handleFormData(event);\n                          }}\n                        >\n                          <option value=\"\">Choose a event </option>\n                          <option value=\"Client Agent Restart\">\n                            Client Agent Restart{\" \"}\n                          </option>\n                          <option value=\"Server Agent Restart\">\n                            Server Agent Restart\n                          </option>\n                          <option value=\"Gateway Agent Restart\">\n                            Gateway Agent Restart\n                          </option>\n                          <option value=\"Connection Establish\">\n                            Connection Establish\n                          </option>\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsForm[\"eventType\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"col-sm-12 label required\">\n                        SECRET\n                        <img\n                          alt=\"down-arrow\"\n                          src={IconGreenSortingDown}\n                        />\n                        {this.state.formData.secret.type === \"password\" ? (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(event, \"secret\");\n                            }}\n                            className=\"fa fa-eye cursor-pointer\"\n                            title=\"Show\"\n                          ></i>\n                        ) : (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(event, \"secret\");\n                            }}\n                            className=\"fa fa-eye-slash cursor-pointer\"\n                            title=\"Hide\"\n                          ></i>\n                        )}\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type={this.state.formData.secret.type}\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"secret\"\n                          value={this.state.formData.secret.value}\n                          onChange={(event) => {\n                            this.handleFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsForm[\"secret\"]}\n                        </small>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-6\">\n                      <div className=\"col-sm-12 label required\">\n                        TARGET ENDPOINT\n                        <img\n                          alt=\"down-arrow\"\n                          src={IconGreenSortingDown}\n                        />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className={\n                            this.state.formData.endpoint.value === \"\"\n                              ? \"blur form-control form-control-sm\"\n                              : \"form-control form-control-sm\"\n                          }\n                          name=\"endpoint\"\n                          value={\n                            this.state.formData.endpoint.value === \"\"\n                              ? \"https://\"\n                              : this.state.formData.endpoint.value\n                          }\n                          onChange={(event) => {\n                            this.handleFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsForm[\"endpoint\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <br />\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\"></div>\n                    <div className=\"col-sm-2 mb-2 text-right\">\n                      <button\n                        id=\"create-group-btn\"\n                        disabled={!this.state.formIsValid}\n                        onClick={this.createWebHook.bind(this)}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        {this.state.edit ? \"UPDATE WEBHOOK\" : \"CREATE WEBHOOKS\"}\n                      </button>{\" \"}\n                    </div>\n                    <div className=\"col-sm-2 mb-2 text-left\">\n                      <button\n                        id=\"create-group-btn\"\n                        onClick={() => this.setState({ showForm: false })}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        BACK\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"row\">\n            <div className=\"col-md-12 mt-2\">\n              <div className=\"centered-div\">\n                <div className=\"centered-div-header\">\n                  <div className=\"row mt-2 mb-2 WebHooks-header\">\n                    <div className=\"col-md-8\">\n                      <h6 id=\"WebHooks-title\">\n                        Web Hooks\n                        <small> Creating Parameters.</small>\n                      </h6>\n                    </div>\n                    <div className=\"col-md-4 text-right\">\n                      <button\n                        onClick={() => this.addWebHook()}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        Add Webhooks\n                      </button>\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row\">\n                    <div className=\"col-sm-12 text-center\" id=\"webhookTableDiv\">\n                      {this.state.showTableInit ? (\n                        this.state.newTableData.length > 0 ? (\n                          <table id=\"webhookTable\" className=\"table\">\n                            <thead>\n                              <tr>\n                                <th>Name</th>\n                                <th>Event Type</th>\n                                <th>Target Endpoint</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {this.state.newTableData.map(\n                                (tbodyVal, tbodyIndex) => {\n                                  return (\n                                    <tr\n                                      id={\"webhookTableTbodyTr_\" + tbodyIndex}\n                                      key={\"webhookTableTbodyTr_\" + tbodyIndex}\n                                    >\n                                      <td>{tbodyVal.webhookname} </td>\n                                      <td>{tbodyVal.eventType} </td>\n                                      <td> {tbodyVal.endpoint}</td>\n                                      <td>\n                                        <span className=\"action-img\">\n                                          <img\n                                            alt=\"edit-icon\"\n                                            title=\"Edit\"\n                                            src={IconEdit}\n                                            onClick={() =>\n                                              this.editWebhook(tbodyVal)\n                                            }\n                                          />\n                                          <img\n                                            onClick={() =>\n                                              this.deleteWebhook(\n                                                tbodyVal,\n                                                tbodyIndex\n                                              )\n                                            }\n                                            alt=\"delete-icon\"\n                                            title=\"Delete\"\n                                            src={IconDelete}\n                                          />\n                                        </span>\n                                      </td>\n                                    </tr>\n                                  );\n                                }\n                              )}\n                            </tbody>\n                          </table>\n                        ) : (\n                          <div className=\"row mt-2\">\n                            <div className=\"col-md-12\">\n                              <div className=\"alert alert-success\" role=\"alert\">\n                                No record found!\n                              </div>\n                            </div>\n                          </div>\n                        )\n                      ) : (\n                        <p className=\"text-center loader-icon\">\n                          <img\n                            alt=\"loading\"\n                            src={Rolling}\n                          />\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n"],"sourceRoot":""}