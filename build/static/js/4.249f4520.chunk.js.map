{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images/icon_greensortingdown.svg","assets/images/icondelete_tablemaintainmonitor.svg","assets/images/iconedit_tablemaintainmonitor.svg","assets/images/info.svg","Maintain/LicenseEdit.js","Maintain/LicenseUpgrade.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_createForOfIteratorHelper","Symbol","iterator","isArray","F","s","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","_toConsumableArray","arrayLikeToArray","iter","unsupportedIterableToArray","module","exports","LicenseEdit","props","state","subscriptionForm","licenseId","dirtyState","emailAddress","sso","date","desc","username","key","parent","errorsSubscriptionForm","subscriptionFormIsValid","confidentialities","id","environments","optInoptOuts","preserves","setTimeout","$","popover","formData","assign","this","editItemData","setState","enableToolTip","that","handleFormValidation","showGlobalMessage","currentForm","prepareData","console","log","fetch","baseUrl","method","headers","authToken","body","JSON","stringify","then","response","status","json","respData","handleDataTable","hideGlobalMessage","localData","parse","sessionStorage","getItem","allData","keys","forEach","push","item","index","setItem","catch","currentFormData","emailAddressDirtyState","usernameDirtyState","expdate","expdateDirtyState","formIsValid","errors","trim","fieldName","target","updatedValue","type","checked","formName","className","isViewOnly","alt","src","IconGreenSortingDown","IconInfo","data-toggle","data-trigger","data-placement","data-content","helpText","readOnly","disabled","onChange","event","handleFormData","onClick","editSubscription","bind","changeView","React","Component","LicenseUpgrade","tableData","newTableData","viewTable","searchString","showTableInit","preserveState","technicalTableData","individualData","generateTableStructure","tableId","tableWidth","offsetWidth","DataTable","dom","bSort","scrollX","language","paginate","previous","createdRow","row","data","dataIndex","css","pageLength","stateSave","destroy","fnDrawCallback","oSettings","aiDisplay","hide","show","addClass","dataObj","newDataObj","initTable","objectIndex","copiedObjectToChange","tempValue","subscriptionId","subscriptionIdHidden","subscriptionIdHiddenFlag","serviceUri","serviceUriHidden","serviceUriHiddenFlag","subscriptionName","subscriptionNameHidden","subscriptionNameHiddenFlag","uaaUrl","uaaUrlHidden","uaaUrlHiddenFlag","myArray","string","retArr","toLowerCase","includes","destroyDataTable","searchStr","searchStrWithSp","wholeData","filteredData","filterByValue","editItem","rowIndex","remove","draw","tbodyVal","window","confirm","Accept","Authorization","removeDataTableRow","snapshotUpdate","filterData","map","tbodyIndex","permissions","accesses","maintain","subMenus","subscriptions","edit","title","IconEdit","delete","deleteData","IconDelete","role","Rolling","userId"],"mappings":"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","file":"static/js/4.249f4520.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/icon_greensortingdown.7d91f50e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icondelete_tablemaintainmonitor.ba23f6b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconedit_tablemaintainmonitor.f1791879.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.dffb9c37.svg\";","import React from \"react\";\nimport $ from 'jquery';\n\nimport  IconGreenSortingDown from '../assets/images/icon_greensortingdown.svg';\nimport IconInfo from '../assets/images/info.svg';\n\nexport default class LicenseEdit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptionForm:{\n                licenseId: { value: \"\", dirtyState: false },\n                emailAddress: { value: \"\", dirtyState: false },\n                sso: { value: \"\", dirtyState: false },\n                date: { value: \"\", dirtyState: false },\n                desc: { value: \"\", dirtyState: false },\n                username: { value: \"\", dirtyState: false },\n                key:\"\",\n\t\tparent:\"\",\n\t\tname:\"\"\n            },\n            errorsSubscriptionForm: {},\n            subscriptionFormIsValid: false,\n            confidentialities: [\n                { name: 'True', id: 'true' },\n                { name: 'False', id: 'false' }\n            ],\n            environments: [\n                { name: 'DEV', id: 'DEV' },\n                { name: 'TEST', id: 'TEST' },\n                { name: 'STAGE', id: 'STAGE' },\n                { name: 'PROD', id: 'PROD' }\n            ],\n            optInoptOuts: [\n                { name: 'True', id: 'true' },\n                { name: 'False', id: 'false' }\n            ],\n            preserves: [\n                { name: 'True', id: 'true' },\n                { name: 'False', id: 'false' }\n            ],\n        };\n    }\n\n    enableToolTip() {\n      setTimeout(() => {\n        $('[data-toggle=\"popover\"]').popover(); // For tooltips\n      }, 1000);\n    }\n\n    /* istanbul ignore next */\n    componentDidMount() {\n        let formData = Object.assign({}, this.props.editItemData);\n        let subscriptionForm = {\n            date: { value: formData.date, dirtyState: false },\n            licenseId: { value: formData.licenseId, dirtyState: false },\n            emailAddress: { value: formData.emailAddress, dirtyState: false },\n            desc: { value:  formData.desc, dirtyState: false },\n            username: { value:  formData.username, dirtyState: false },\n            sso: { value: formData.sso, dirtyState: false },\n            key : formData.key,\n            parent : formData.parent,\n            name : formData.name\n        };\n\n        this.setState({\n            subscriptionForm: subscriptionForm,\n        });\n        this.enableToolTip();\n\n        let that = this;\n        setTimeout(function () {\n            that.handleFormValidation();\n        }, 1000);\n    }\n\n    /* istanbul ignore next */\n    editSubscription(){\n        this.props.showGlobalMessage(true, true, 'Please wait...', 'custom-success');\n        let currentForm =  Object.assign({}, this.state.subscriptionForm);\n        let prepareData = {};\n        prepareData.licenseId = currentForm.licenseId.value;\n        prepareData.emailAddress = currentForm.emailAddress.value;\n        prepareData.username = currentForm.username.value;\n        prepareData.desc = currentForm.desc.value;\n        prepareData.sso = currentForm.sso.value;\n        prepareData.date = currentForm.date.value;\n        prepareData.parent = currentForm.parent;\n        prepareData.name = currentForm.name;\n\tconsole.log(prepareData);\n\n        fetch(this.props.baseUrl+ currentForm.key, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+this.props.authToken\n            },\n            body: JSON.stringify(prepareData)\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                response.json().then((respData) => {\n                    /* if(respData.errorStatus.status == 'ok'){ */\n                        this.props.showGlobalMessage(false, true, 'Record saved successfully', 'custom-success');\n                        this.props.handleDataTable(true);\n                        setTimeout(()=> {\n                            this.props.hideGlobalMessage();\n                        }, 2000);\n                 \n                        let localData =  JSON.parse(sessionStorage.getItem(\"snapshotData\"))\n                        let allData =[]\n                          Object.keys(localData).forEach((key)=> {\n                              allData.push(localData[key])\n                          });\n                         \n                          allData.forEach((item,index)=>{\n                            if(item.parent){\n                              if(item.key === currentForm.key){\n                                item.licenseId = currentForm.licenseId.value;\n                                item.emailAddress = currentForm.emailAddress.value;\n                                item.username = currentForm.username.value;\n                                item.desc = currentForm.desc.value;\n                                item.sso = currentForm.sso.value;\n                                item.date = currentForm.date.value;\n                                item.parent = currentForm.parent;\n                                item.name = currentForm.name;\n                              }}\n                          })\n                sessionStorage.setItem(\"snapshotData\", JSON.stringify(allData))\n                });\n            }\n            else{\n                this.props.showGlobalMessage(true, true, 'Please try after sometime', 'custom-danger');\n                setTimeout(()=> {\n                    this.props.hideGlobalMessage();\n                }, 2000);\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            this.props.showGlobalMessage(true, true, 'Please try after sometime', 'custom-danger');\n            setTimeout(()=> {\n                this.props.hideGlobalMessage();\n            }, 2000);\n        });\n    }\n\n    /* istanbul ignore next */\n    handleFormValidation(){\n\n        let currentFormData = this.state.subscriptionForm;\n        //let licenseId = currentFormData.licenseId.value;\n        //let licenseIdDirtyState = currentFormData.licenseId.dirtyState;\n        let emailAddress = currentFormData.emailAddress.value;\n        let emailAddressDirtyState = currentFormData.emailAddress.dirtyState;\n        let username = currentFormData.username.value;\n        let usernameDirtyState = currentFormData.username.dirtyState;\n        let expdate = currentFormData.date.value;\n        let expdateDirtyState = currentFormData.date.dirtyState;\n\n        let formIsValid = true;\n        let errors = {};\n        //let urlRegExp =  /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n      \n          if (emailAddress.trim() === \"\") {\n            if (emailAddressDirtyState) {\n              errors.emailAddress = \"Please enter Email Address\";\n            }\n            formIsValid = false;\n          }\n\n          if (username.trim() === \"\") {\n            if (usernameDirtyState) {\n              errors.username = \"Please enter Username\";\n            }\n            formIsValid = false;\n          }\n      \n          if (expdate.trim() === \"\") {\n            if (expdateDirtyState) {\n              errors.date = \"Please enter Expiry Date\";\n            }\n            formIsValid = false;\n          }\n\n        this.setState({\n\t\t\tsubscriptionFormIsValid: formIsValid,\n\t\t\terrorsSubscriptionForm: errors\n\t\t});\n    }\n\n    /* istanbul ignore next */\n    handleFormData(e){\n        let fieldName = e.target.name;\n        let updatedValue = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        let currentForm =  Object.assign({}, this.state.subscriptionForm);\n\n         if (fieldName === \"licenseId\") {\n            currentForm.licenseId.value = updatedValue;\n            currentForm.licenseId.dirtyState = true;\n          } else if (fieldName === \"emailAddress\") {\n            currentForm.emailAddress.value = updatedValue;\n            currentForm.emailAddress.dirtyState = true;\n          } else if (fieldName === \"sso\") {\n            currentForm.sso.value = updatedValue;\n            currentForm.sso.dirtyState = true;\n          } else if (fieldName === \"date\") {\n            currentForm.date.value = updatedValue;\n            currentForm.date.dirtyState = true;\n          }else if (fieldName === \"desc\") {\n            currentForm.desc.value = updatedValue;\n            currentForm.desc.dirtyState = true;\n          }else if (fieldName === \"username\") {\n            currentForm.username.value = updatedValue;\n            currentForm.username.dirtyState = true;\n          }\n        this.setState({\n            subscriptionForm: currentForm\n        });\n        this.handleFormValidation();\n    }\n\n    /* istanbul ignore next */\n    showHideField(e, formName, fieldName){\n        let currentForm = Object.assign({}, this.state.subscriptionForm);\n\n        if(currentForm[fieldName].type === 'password'){\n            currentForm[fieldName].type = 'text'; \n        }\n        else{\n            currentForm[fieldName].type = 'password';\n        }\n        \n        this.setState({\n            subscriptionForm: currentForm\n        });\n    }\n\n    render() {\n        /* jshint ignore:start */\n        /* istanbul ignore next */\n        return (\n            <div className=\"row Subscriptioncreate\">\n                <div className=\"col-md-12 mt-2\">\n                    <div className=\"centered-div\">\n                        <div className=\"centered-div-header\">\n                            <div className=\"row maintainagentcreate-header\">\n                                <div className=\"col-md-12\">\n                                      {this.props.isViewOnly ? \n                                      <h6 id=\"maintainsubscriptioncreate-title\">View Subscription <small>View parameters.</small></h6> :\n                                      <h6 id=\"maintainsubscriptioncreate-title\">Edit Subscription <small>Creating parameters.</small></h6> }\n                                </div>\n                            </div>\n                            <hr></hr>\n                            <div className=\"changeable-form subscription-form\">\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <div className=\"col-sm-12 label required\">\n                      License ID\n                      <img\n                        alt=\"down-arrow\"\n                        src={IconGreenSortingDown}\n                      />\n                      <span className=\"float-right help-text\">\n                        <img\n                          alt=\"info\"\n                          src={IconInfo}\n                          data-toggle=\"popover\"\n                          data-trigger=\"hover\"\n                          data-placement=\"top\"\n                          data-content={this.props.helpText.licenseId}\n                        />\n                      </span>\n                    </div>\n                    <div className=\"col-sm-12 mb-2\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control form-control-sm\"\n                        name=\"licenseId\"\n                        readOnly={true}\n                        value={this.state.subscriptionForm.licenseId.value}\n                       /* onChange={(event) => {\n                          this.handleFormData(event);\n                        }}  */\n                      />\n                      <small className=\"text-danger\">\n                        {this.state.errorsSubscriptionForm[\"licenseId\"]}\n                      </small>\n                    </div>\n                  </div>\n                 \n\n                  <div className=\"col-sm-6\">\n                    <div className=\"col-sm-12 label required\">\n                      Expiry Date/Time\n                      <img\n                        alt=\"down-arrow\"\n                        src={IconGreenSortingDown}\n                      />\n                      <span className=\"float-right help-text\">\n                        <img\n                          alt=\"info\"\n                          src={IconInfo}\n                          data-toggle=\"popover\"\n                          data-trigger=\"hover\"\n                          data-placement=\"top\"\n                          data-content={this.props.helpText.expdate}\n                        />\n                      </span>\n                    </div>\n                    <div className=\"col-sm-12 mb-2\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control form-control-sm\"\n                        name=\"date\"\n                        disabled={this.props.isViewOnly}\n                        value={this.state.subscriptionForm.date.value}\n                        onChange={(event) => {\n                          this.handleFormData(event);\n                        }}\n                      />\n                      <small className=\"text-danger\">\n                        {this.state.errorsSubscriptionForm[\"date\"]}\n                      </small>\n                    </div>\n                  </div>\n\n                </div>\n\n                <div className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"col-sm-12 label required\">\n                      Email Address\n                      <img\n                        alt=\"down-arrow\"\n                        src={IconGreenSortingDown}\n                      />\n                      <span className=\"float-right help-text\">\n                        <img\n                          alt=\"info\"\n                          src={IconInfo}\n                          data-toggle=\"popover\"\n                          data-trigger=\"hover\"\n                          data-placement=\"top\"\n                          data-content={this.props.helpText.emailAddress}\n                        />\n                      </span>\n                    </div>\n                    <div className=\"col-sm-12 mb-2\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control form-control-sm\"\n                        name=\"emailAddress\"\n                        disabled={this.props.isViewOnly}\n                        value={this.state.subscriptionForm.emailAddress.value}\n                        onChange={(event) => {\n                          this.handleFormData(event);\n                        }}\n                      />\n                      <small className=\"text-danger\">\n                        {this.state.errorsSubscriptionForm[\"emailAddress\"]}\n                      </small>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"col-sm-12 label required\">\n                      SSO\n                      <img\n                        alt=\"down-arrow\"\n                        src={IconGreenSortingDown}\n                      />\n                      <span className=\"float-right help-text\">\n                        <img\n                          alt=\"info\"\n                          src={IconInfo}\n                          data-toggle=\"popover\"\n                          data-trigger=\"hover\"\n                          data-placement=\"top\"\n                          data-content={this.props.helpText.sso}\n                        />\n                      </span>\n                    </div>\n                    <div className=\"col-sm-12 mb-2\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control form-control-sm\"\n                        name=\"sso\"\n                        disabled={this.props.isViewOnly}\n                        value={this.state.subscriptionForm.sso.value}\n                        onChange={(event) => {\n                          this.handleFormData(event);\n                        }}\n                      />\n                      <small className=\"text-danger\">\n                        {this.state.errorsSubscriptionForm[\"sso\"]}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"col-sm-12 label required\">\n                     User Fullname\n                      <img\n                        alt=\"down-arrow\"\n                        src={IconGreenSortingDown}\n                      />\n                      <span className=\"float-right help-text\">\n                        <img\n                          alt=\"info\"\n                          src={IconInfo}\n                          data-toggle=\"popover\"\n                          data-trigger=\"hover\"\n                          data-placement=\"top\"\n                          data-content={this.props.helpText.username}\n                        />\n                      </span>\n                    </div>\n                    <div className=\"col-sm-12 mb-2\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control form-control-sm\"\n                        name=\"username\"\n                        disabled={this.props.isViewOnly}\n                        value={this.state.subscriptionForm.username.value}\n                        onChange={(event) => {\n                          this.handleFormData(event);\n                        }}\n                      />\n                      <small className=\"text-danger\">\n                        {this.state.errorsSubscriptionForm[\"username\"]}\n                      </small>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"col-sm-12 label required\">\n                      Description\n                      <img\n                        alt=\"down-arrow\"\n                        src={IconGreenSortingDown}\n                      />\n                      <span className=\"float-right help-text\">\n                        <img\n                          alt=\"info\"\n                          src={IconInfo}\n                          data-toggle=\"popover\"\n                          data-trigger=\"hover\"\n                          data-placement=\"top\"\n                          data-content={this.props.helpText.desc}\n                        />\n                      </span>\n                    </div>\n                    <div className=\"col-sm-12 mb-2\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control form-control-sm\"\n                        name=\"desc\"\n                        disabled={this.props.isViewOnly}\n                        value={this.state.subscriptionForm.desc.value}\n                        onChange={(event) => {\n                          this.handleFormData(event);\n                        }}\n                      />\n                      <small className=\"text-danger\">\n                        {this.state.errorsSubscriptionForm[\"desc\"]}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-12 mb-2 text-center\">\n                    {!this.props.isViewOnly ? (\n                      <button\n                        id=\"create-subscription-btn\"\n                        disabled={!this.state.subscriptionFormIsValid}\n                        onClick={this.editSubscription.bind(this)}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        EDIT LICENSE\n                      </button>\n                    ) : null}\n                    <button\n                      onClick={this.props.changeView.bind(this)}\n                      className=\"btn btn-sm customize-view-btn ml-2\"\n                    >\n                      BACK\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n                            </div>\n                    </div>\n                </div>\n            </div>\n        )\n        /* jshint ignore:end */\n    }\n}\n","import React from \"react\";\nimport $ from \"jquery\";\nimport LicenseEdit from \"./LicenseEdit.js\";\n\nimport IconEdit from \"../assets/images/iconedit_tablemaintainmonitor.svg\";\nimport IconDelete from \"../assets/images/icondelete_tablemaintainmonitor.svg\";\nimport Rolling from \"../assets/images/rolling.svg\";\n\nexport default class LicenseUpgrade extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: [],\n      newTableData: [],\n      viewTable: true,\n      editItemData: {},\n      searchString: \"\",\n      showTableInit: false,\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    this.handleDataTable(false);\n  }\n\n  /* istanbul ignore next */\n  handleDataTable(preserveState) {\n    let technicalTableData = [];\n    if (sessionStorage.getItem(\"snapshotData\") !== null) {\n      let respData = JSON.parse(sessionStorage.getItem(\"snapshotData\"));\n      let allData = [];\n      Object.keys(respData).forEach((key) => {\n        allData.push(respData[key]);\n      });\n      for (let individualData of allData) {\n        if (individualData.parent) {\n          if (\n            individualData.parent === \"ab2a2691-a563-486c-9883-5111ff36ba9b\"\n          ) {\n            technicalTableData.push(individualData);\n          }\n        }\n      }\n      this.generateTableStructure(technicalTableData, preserveState);\n      this.setState({\n        tableData: technicalTableData,\n      });\n    } else {\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please try after sometime\",\n        \"custom-danger\"\n      );\n      setTimeout(() => {\n        this.props.hideGlobalMessage();\n      }, 2000);\n    }\n  }\n\n  initTable(tableId, preserveState) {\n    var pageLength = 5;\n    let tableWidth = 0;\n    tableWidth = $(\"#subscriptionupgradeTableDiv\")[0].offsetWidth - 200;\n    $(\"#\" + tableId).DataTable({\n      dom: 'rt<\"bottom\"lp>',\n      bSort: true,\n      scrollX: true,\n      language: {\n        paginate: {\n          previous: \"<\",\n          next: \">\",\n        },\n      },\n      createdRow: function (row, data, dataIndex) {\n        for (let i = 0; i < data.length; i++) {\n          $(\"td:eq(\" + i + \")\", row).css(\n            \"min-width\",\n            tableWidth / data.length + \"px\"\n          );\n        }\n      },\n      pageLength: pageLength,\n      stateSave: preserveState,\n      destroy: true,\n      fnDrawCallback: function (oSettings) {\n        if (oSettings.aiDisplay.length <= pageLength) {\n          $(\".dataTables_paginate\").hide();\n        } else {\n          $(\".dataTables_paginate\").show();\n        }\n      },\n    });\n\n    $(\".bottom\").addClass(\"row\");\n    $(\".dataTables_length\").addClass(\"col-sm-6\");\n    $(\".dataTables_paginate\").addClass(\"col-sm-6\");\n  }\n\n  /* istanbul ignore next */\n  generateTableStructure(technicalTableData, preserveState) {\n    let tableData = technicalTableData;\n    let newTableData = [];\n    for (let dataObj of tableData) {\n      let newDataObj = {};\n      newDataObj.licenseId = dataObj.licenseId;\n      newDataObj.emailAddress = dataObj.emailAddress;\n      newDataObj.date = dataObj.date;\n      newDataObj.sso = dataObj.sso;\n      newDataObj.desc = dataObj.desc;\n      newDataObj.username = dataObj.username;\n      newDataObj.key = dataObj.key;\n      newDataObj.parent = dataObj.parent;\n      newDataObj.name = dataObj.name;\n      newTableData.push(newDataObj);\n    }\n\n    this.setState({\n      newTableData: newTableData,\n      showTableInit: true,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"subscriptionupgradeTable\", preserveState);\n    }, 100);\n  }\n\n  /* istanbul ignore next */\n  showHideTableTdData(objectIndex, fieldName) {\n    let newTableData = [...this.state.newTableData];\n    let copiedObjectToChange = Object.assign({}, newTableData[objectIndex]);\n    if (fieldName === \"subscriptionId\") {\n      let tempValue = copiedObjectToChange.subscriptionId;\n      copiedObjectToChange.subscriptionId =\n        copiedObjectToChange.subscriptionIdHidden;\n      copiedObjectToChange.subscriptionIdHidden = tempValue;\n      copiedObjectToChange.subscriptionIdHiddenFlag =\n        !copiedObjectToChange.subscriptionIdHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"serviceUri\") {\n      let tempValue = copiedObjectToChange.serviceUri;\n      copiedObjectToChange.serviceUri = copiedObjectToChange.serviceUriHidden;\n      copiedObjectToChange.serviceUriHidden = tempValue;\n      copiedObjectToChange.serviceUriHiddenFlag =\n        !copiedObjectToChange.serviceUriHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"subscriptionName\") {\n      let tempValue = copiedObjectToChange.subscriptionName;\n      copiedObjectToChange.subscriptionName =\n        copiedObjectToChange.subscriptionNameHidden;\n      copiedObjectToChange.subscriptionNameHidden = tempValue;\n      copiedObjectToChange.subscriptionNameHiddenFlag =\n        !copiedObjectToChange.subscriptionNameHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"uaaUrl\") {\n      let tempValue = copiedObjectToChange.uaaUrl;\n      copiedObjectToChange.uaaUrl = copiedObjectToChange.uaaUrlHidden;\n      copiedObjectToChange.uaaUrlHidden = tempValue;\n      copiedObjectToChange.uaaUrlHiddenFlag =\n        !copiedObjectToChange.uaaUrlHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    }\n\n    this.setState({\n      newTableData: newTableData,\n    });\n  }\n\n  /* istanbul ignore next */\n  filterByValue(myArray, string) {\n    let retArr = [];\n    for (var i = 0; i < myArray.length; i++) {\n      if (\n        myArray[i].licenseId.toLowerCase().includes(string.toLowerCase()) ||\n        myArray[i].emailAddress.toLowerCase().includes(string.toLowerCase()) ||\n        myArray[i].date.includes(string) ||\n        myArray[i].sso.includes(string) ||\n        myArray[i].username.includes(string)\n      ) {\n        retArr.push(myArray[i]);\n      }\n    }\n    return retArr;\n  }\n\n  destroyDataTable(tableId) {\n    var table = $(\"#\" + tableId).DataTable();\n    table.destroy();\n  }\n\n  /* istanbul ignore next */\n  filterData(e) {\n    this.destroyDataTable(\"subscriptionupgradeTable\");\n    let searchStr = e.target.value.trim();\n    let searchStrWithSp = e.target.value;\n    let wholeData = [...this.state.tableData];\n    let filteredData = [];\n    let newTableData = [];\n    if (searchStr !== \"\") {\n      filteredData = this.filterByValue(wholeData, searchStr);\n      //console.log(filteredData);\n    } else {\n      filteredData = wholeData;\n    }\n\n    for (let dataObj of filteredData) {\n      let newDataObj = {};\n      newDataObj.licenseId = dataObj.licenseId;\n      newDataObj.emailAddress = dataObj.emailAddress;\n      newDataObj.date = dataObj.date;\n      newDataObj.sso = dataObj.sso;\n      newDataObj.desc = dataObj.desc;\n      newDataObj.username = dataObj.username;\n\n      newTableData.push(newDataObj);\n    }\n\n    this.setState({\n      newTableData: newTableData,\n      searchString: searchStrWithSp,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"subscriptionupgradeTable\", false);\n    }, 0);\n  }\n\n  /* istanbul ignore next */\n  edit(item) {\n    let editItem = Object.assign({}, item);\n    this.destroyDataTable(\"subscriptionupgradeTable\");\n    this.setState({\n      editItemData: editItem,\n      viewTable: false,\n    });\n  }\n  removeDataTableRow(tableId, rowIndex) {\n    var table = $(\"#\" + tableId).DataTable();\n    table\n      .row(\"#\" + tableId + \"TbodyTr_\" + rowIndex)\n      .remove()\n      .draw(false);\n  }\n\n  /* istanbul ignore next */\n  deleteData(tbodyVal, rowIndex) {\n    let cnf = window.confirm(\"Are you sure you want to delete\");\n    if (cnf) {\n      /* let subscripnId = tbodyVal.subscriptionId;\n      if (tbodyVal.subscriptionIdHiddenFlag) {\n        subscripnId = tbodyVal.subscriptionIdHidden;\n      } */\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please Wait....\",\n        \"custom-success\"\n      );\n      fetch(this.props.baseUrl + tbodyVal.key, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /*    if (respData.errorStatus.status === 'ok') { */\n              this.props.showGlobalMessage(\n                false,\n                true,\n                \"Record deleted successfuly\",\n                \"custom-success\"\n              );\n              this.removeDataTableRow(\"subscriptionupgradeTable\", rowIndex);\n              let that = this;\n              setTimeout(function () {\n                that.props.hideGlobalMessage();\n              }, 2000);\n              that.snapshotUpdate();\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            let that = this;\n            setTimeout(function () {\n              that.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  /* istanbul ignore next */\n  snapshotUpdate() {\n    fetch(this.props.baseUrl + \"snapshot\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.authToken,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then((respData) => {\n          sessionStorage.setItem(\"snapshotData\", JSON.stringify(respData));\n        });\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  changeView() {\n    this.handleDataTable(false);\n    this.setState({\n      viewTable: true,\n    });\n    setTimeout(() => {\n      this.initTable(\"subscriptionupgradeTable\", true);\n    }, 0);\n  } // jshint ignore:line\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div>\n        {this.state.viewTable ? (\n          <div className=\"row Subscriptionupgrade\">\n            <div className=\"col-md-12\">\n              <div className=\"row mt-2\">\n                <div className=\"col-sm-6 text-left\">\n                  <div className=\"d-inline\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-outline-secondary disabled\"\n                    >\n                      <i className=\"fa fa-filter\"></i>\n                      FILTER\n                    </button>\n                  </div>\n                  <div className=\"d-inline p-2\">\n                    <input\n                      type=\"text\"\n                      value={this.state.searchString}\n                      className=\"d-inline form-control form-control-sm search-field\"\n                      onChange={(event) => {\n                        this.filterData(event);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"centered-div\">\n                <div id=\"subscriptionupgradeTableDiv\">\n                  {this.state.showTableInit ? (\n                    this.state.newTableData.length > 0 ? (\n                      <table\n                        id=\"subscriptionupgradeTable\"\n                        className=\"table text-center\"\n                      >\n                        <thead>\n                          <tr>\n                            <th>License ID</th>\n                            <th>Email Address</th>\n                            <th>Expiry Date</th>\n                            <th>SSO</th>\n                            <th>Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.newTableData.map(\n                            (tbodyVal, tbodyIndex) => {\n                              return (\n                                <tr\n                                  id={\n                                    \"subscriptionupgradeTableTbodyTr_\" +\n                                    tbodyIndex\n                                  }\n                                  key={\n                                    \"subscriptionupgradeTableTbodyTr_\" +\n                                    tbodyIndex\n                                  }\n                                >\n                                  <td>{tbodyVal.licenseId}</td>\n                                  <td>{tbodyVal.emailAddress}</td>\n                                  <td>{tbodyVal.date}</td>\n                                  <td>{tbodyVal.sso}</td>\n                                  <td>\n                                    <span className=\"action-img\">\n                                      {this.props.permissions.accesses.maintain\n                                        .subMenus.subscriptions.edit ? (\n                                        <img\n                                          onClick={this.edit.bind(\n                                            this,\n                                            tbodyVal\n                                          )}\n                                          alt=\"edit-icon\"\n                                          title=\"Edit\"\n                                          src={IconEdit}\n                                        />\n                                      ) : null}\n                                      {this.props.permissions.accesses.maintain\n                                        .subMenus.subscriptions.delete ? (\n                                        <img\n                                          alt=\"delete-icon\"\n                                          onClick={this.deleteData.bind(\n                                            this,\n                                            tbodyVal,\n                                            tbodyIndex\n                                          )}\n                                          title=\"Delete\"\n                                          src={IconDelete}\n                                        />\n                                      ) : null}\n                                    </span>\n                                  </td>\n                                </tr>\n                              );\n                            }\n                          )}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <div className=\"row mt-2\">\n                        <div className=\"col-md-12\">\n                          <div className=\"alert alert-success\" role=\"alert\">\n                            No record found!\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  ) : (\n                    <p className=\"text-center loader-icon\">\n                      <img alt=\"loading\" src={Rolling} />\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <LicenseEdit\n            authToken={this.props.authToken}\n            helpText={this.props.helpText}\n            handleDataTable={this.handleDataTable.bind(this)}\n            baseUrl={this.props.baseUrl}\n            userId={this.props.userId}\n            showGlobalMessage={this.props.showGlobalMessage.bind(this)}\n            hideGlobalMessage={this.props.hideGlobalMessage.bind(this)}\n            changeView={this.changeView.bind(this)}\n            editItemData={this.state.editItemData}\n            isViewOnly={false}\n          ></LicenseEdit>\n        )}\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n"],"sourceRoot":""}