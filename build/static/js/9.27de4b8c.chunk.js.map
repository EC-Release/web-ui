{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images/icondelete_tablemaintainmonitor.svg","assets/images/iconedit_tablemaintainmonitor.svg","Maintain/Groupupgrade.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_createForOfIteratorHelper","Symbol","iterator","isArray","F","s","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","_toConsumableArray","arrayLikeToArray","iter","unsupportedIterableToArray","module","exports","Groupupgrade","props","state","tableData","newTableData","selectedSubscriptionId","showTableInit","subscriptions","filterValue","groupForm","subscriptionId","dirtyState","groupId","changeForm","errorsGroupForm","groupFormIsValid","subscriptionData","technicalTableData","sessionStorage","getItem","respData","JSON","parse","allData","keys","forEach","key","push","individualData","parent","this","generateTableStructure","setState","console","log","showGlobalMessage","setTimeout","hideGlobalMessage","clearInterval","timerForSubscriptionList","fetch","baseUrl","method","headers","Accept","Authorization","authToken","then","response","status","json","errorStatus","data","localStorage","setItem","stringify","catch","tableId","preserveState","tableWidth","$","offsetWidth","DataTable","dom","bSort","scrollX","language","paginate","previous","createdRow","row","dataIndex","css","pageLength","stateSave","destroy","fnDrawCallback","oSettings","aiDisplay","hide","show","addClass","dataObj","newDataObj","initTable","target","destroyDataTable","newlyCreatedGroupsofSubscriptions","findIndex","x","allNewlyCreatedGroupsData","createdData","dataToAppendAsPending","pendingData","ids","aid","tid","statusMsg","myArray","string","retArr","toLowerCase","includes","searchStr","trim","wholeDataUnstructured","wholeData","undefined","filteredData","filter","rowIndex","remove","draw","tbodyVal","window","confirm","removeDataTableRow","that","groupVal","groupData","currentKey","selectpicker","prepareData","body","oldNewlyCreatedGroupsofSubscriptions","findGroupIndex","splice","fieldName","updatedValue","type","checked","currentForm","assign","selectedOptions","option","handleFormValidation","currentFormData","subscriptionIdValue","groupIdValue","groupIdDirtyState","formIsValid","errors","subscriptionIdFound","Fragment","className","onChange","event","handleFormData","multiple","data-live-search","map","subscription","subscriptionIndex","licenseId","id","disabled","onClick","updategroup","bind","changeFormHandler","filterData","permissions","accesses","maintain","subMenus","groups","delete","edit","tbodyIndex","alt","editData","title","src","IconEdit","deleteData","IconDelete","role","Rolling","React","Component"],"mappings":"0HAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,EAPT,mC,gCCAA,8CACe,SAASE,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBJ,MAAMY,KAAKR,GACxC,cAANA,GAAqB,2CAA2CS,KAAKT,GAAW,YAAiBF,EAAGC,QAAxG,K,gCCPF,8CACe,SAASW,EAA2BZ,GACjD,GAAsB,qBAAXa,QAAgD,MAAtBb,EAAEa,OAAOC,UAAmB,CAC/D,GAAIhB,MAAMiB,QAAQf,KAAOA,EAAI,YAA2BA,IAAK,CAC3D,IAAIJ,EAAI,EAEJoB,EAAI,aAER,MAAO,CACLC,EAAGD,EACHd,EAAG,WACD,OAAIN,GAAKI,EAAEL,OAAe,CACxBuB,MAAM,GAED,CACLA,MAAM,EACNC,MAAOnB,EAAEJ,OAGbwB,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGN,GAIP,MAAM,IAAIO,UAAU,yIAGtB,IAAIC,EAGAC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLV,EAAG,WACDO,EAAKxB,EAAEa,OAAOC,aAEhBZ,EAAG,WACD,IAAI0B,EAAOJ,EAAGK,OAEd,OADAH,EAAmBE,EAAKV,KACjBU,GAETR,EAAG,SAAWU,GACZH,GAAS,EACTF,EAAMK,GAERR,EAAG,WACD,IACOI,GAAoC,MAAhBF,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIG,EAAQ,MAAMF,O,0FC9CX,SAASM,EAAmBtC,GACzC,OCJa,SAA4BA,GACzC,GAAIK,MAAMiB,QAAQtB,GAAM,OAAO,OAAAuC,EAAA,GAAiBvC,GDGzC,CAAkBA,IELZ,SAA0BwC,GACvC,GAAsB,qBAAXpB,QAA0BA,OAAOC,YAAYX,OAAO8B,GAAO,OAAOnC,MAAMY,KAAKuB,GFIvD,CAAgBxC,IAAQ,OAAAyC,EAAA,GAA2BzC,IGLvE,WACb,MAAM,IAAI8B,UAAU,wIHIwE,K,mBIL9FY,EAAOC,QAAU,IAA0B,6D,mBCA3CD,EAAOC,QAAU,IAA0B,2D,wNCOtBC,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,GACXC,aAAc,GACdC,uBAAwB,GACxBC,eAAe,EACfC,cAAe,GACfC,YAAa,GACbC,UAAW,CACTC,eAAgB,CAAE5B,MAAO,GAAI6B,YAAY,GACzCC,QAAS,CAAE9B,MAAO,GAAI6B,YAAY,IAEpCE,YAAY,EACZC,gBAAiB,GACjBC,kBAAkB,GAfH,E,qDAoBnB,WAAqB,IAAD,OACdC,EAAmB,GACnBC,EAAqB,GACzB,GAA+C,OAA3CC,eAAeC,QAAQ,gBAA0B,CACnD,IAAIC,EAAWC,KAAKC,MAAMJ,eAAeC,QAAQ,iBAC7CI,EAAU,GACdzD,OAAO0D,KAAKJ,GAAUK,SAAQ,SAACC,GAC7BH,EAAQI,KAAKP,EAASM,OAExB,cAA2BH,EAA3B,eAAoC,CAA/B,IAAIK,EAAc,KACjBA,EAAeC,SAEW,yCAA1BD,EAAeC,QAEfZ,EAAmBU,KAAKC,GAGE,yCAA1BA,EAAeC,QAEfb,EAAiBW,KAAKC,IAI5BE,KAAKC,uBAAuBd,GAC5Ba,KAAKE,SAAS,CACZ7B,UAAWc,EACXV,cAAeS,IAGjBiB,QAAQC,IAAIjB,GACsB,IAA9BA,EAAmB3D,SACrBwE,KAAK7B,MAAMkC,mBACT,GACA,EACA,mBACA,iBAEFC,YAAW,WACT,EAAKnC,MAAMoC,sBACV,WAGLP,KAAK7B,MAAMkC,mBACT,GACA,EACA,4BACA,iBAEFC,YAAW,WACT,EAAKnC,MAAMoC,sBACV,O,kCAKP,WACEC,cAAcR,KAAKS,0BACnBT,KAAKS,yBAA2B,O,iCAIlC,WACEC,MAAMV,KAAK7B,MAAMwC,QAAU,qBAAsB,CAC/CC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYf,KAAK7B,MAAM6C,aAGvCC,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXD,EAASE,OAAOH,MAAK,SAAC3B,GACpB,GAAoC,OAAhCA,EAAS+B,YAAYF,OAAiB,CACxC,IAAI1C,EAAgBa,EAASgC,KAC7BC,aAAaC,QACX,gBACAjC,KAAKkC,UAAUhD,SAGjB0B,QAAQC,IAAI,gDAKnBsB,OAAM,SAACpE,GACN6C,QAAQC,IAAI9C,GACZ6C,QAAQC,IAAI,+C,uBAIlB,SAAUuB,EAASC,GACjB,IACIC,EACJA,EAAaC,IAAE,yBAAyB,GAAGC,YAAc,IACzDD,IAAE,IAAMH,GAASK,UAAU,CACzBC,IAAK,iBACLC,OAAO,EACPC,SAAS,EACTC,SAAU,CACRC,SAAU,CACRC,SAAU,IACV5E,KAAM,MAGV6E,WAAY,SAAUC,EAAKlB,EAAMmB,GAC/B,IAAK,IAAIhH,EAAI,EAAGA,EAAI6F,EAAK9F,OAAQC,IAC/BqG,IAAE,SAAWrG,EAAI,IAAK+G,GAAKE,IACzB,YACAb,EAAaP,EAAK9F,OAAS,OAIjCmH,WArBe,EAsBfC,UAAWhB,EACXiB,SAAS,EACTC,eAAgB,SAAUC,GACpBA,EAAUC,UAAUxH,QAzBX,EA0BXsG,IAAE,wBAAwBmB,OAE1BnB,IAAE,wBAAwBoB,UAKhCpB,IAAE,WAAWqB,SAAS,OACtBrB,IAAE,sBAAsBqB,SAAS,YACjCrB,IAAE,wBAAwBqB,SAAS,c,oCAIrC,SAAuB9E,GAAY,IAAD,SAC5BC,EAAe,GADa,cAEZD,GAFY,IAEhC,2BAA+B,CAAC,IAAvB+E,EAAsB,QACzBC,EAAa,GACjBA,EAAWvE,QAAUsE,EAAQtE,QAC7BuE,EAAWzE,eAAiBwE,EAAQxE,eACpCyE,EAAWzD,IAAMwD,EAAQxD,IACzBtB,EAAauB,KAAKwD,IAPY,8BAUhCrD,KAAKE,SAAS,CACZ7B,UAAWC,EACXA,aAAcA,EACdE,eAAe,IAGjB8B,YAAW,WACT,EAAKgD,UAAU,uBACd,O,8BAIL,SAAiB3B,GACHG,IAAE,IAAMH,GAASK,YACvBa,Y,6BAER,SAAgB5F,GAAI,IAAD,OACbsB,EAAyBtB,EAAEsG,OAAOvG,MACtCgD,KAAKwD,iBAAiB,qBACtBxD,KAAKE,SAAS,CACZ3B,uBAAwBA,EACxBC,eAAe,IAGc,KAA3BD,GACFyB,KAAKE,SAAS,CACZ7B,UAAW,KAEb2B,KAAKC,uBAAuB,KAG5BS,MAAM,gCAAiC,CACrCE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYf,KAAK7B,MAAM6C,aAGvCC,MAAK,SAACC,GACmB,MAApBA,EAASC,OACXD,EAASE,OAAOH,MAAK,SAAC3B,GACpB,IAAIgC,EAAOhC,EAASgC,KAOpB,GAAoC,QANpChC,EAAW,CACT+B,YAAa,CACXF,OAAQ,QAICE,YAAYF,OAAiB,CAExC,IAAIsC,EACFlE,KAAKC,MAAM+B,aAAalC,QAAQ,wBAA0B,GACxDqE,EAAYD,EAAkCC,WAChD,SAACC,GAAD,OAAOA,EAAE/E,iBAAmBL,KAE9B,IAAmB,IAAfmF,EAAkB,CACpB,IAAIE,EAAyB,YACxBH,EAAkCC,GAAWG,aAElD,GAAID,EAA0BpI,OAAS,EAAG,CAAC,IAAD,gBACNoI,GADM,IACxC,2BAA6D,CAAC,IAArDE,EAAoD,QACvDC,EAAc,CAChBjF,QAASgF,EAAsBhF,QAC/BkF,IAAK,CACHC,IAAKH,EAAsBG,IAC3BC,IAAKJ,EAAsBI,MAG/B5C,EAAKzB,KAAKkE,IAT4B,gCAa5C,EAAK7D,SAAS,CACZ7B,UAAWiD,IAEb,EAAKrB,uBAAuBqB,QAE5B,EAAKnD,MAAMkC,mBACT,GACA,EACAf,EAAS+B,YAAY8C,UACrB,iBAEF7D,YAAW,WACT,EAAKnC,MAAMoC,sBACV,SAIP,EAAKpC,MAAMkC,mBACT,GACA,EACA,4BACA,iBAEFC,YAAW,WACT,EAAKnC,MAAMoC,sBACV,SAGNmB,OAAM,SAACpE,GACN6C,QAAQC,IAAI9C,GACZ,EAAKa,MAAMkC,mBACT,GACA,EACA,4BACA,iBAEFC,YAAW,WACT,EAAKnC,MAAMoC,sBACV,U,2BAMX,SAAc6D,EAASC,GAErB,IADA,IAAIC,EAAS,GACJ7I,EAAI,EAAGA,EAAI2I,EAAQ5I,OAAQC,IAC9B2I,EAAQ3I,GAAGqD,QAAQyF,cAAcC,SAASH,EAAOE,gBACnDD,EAAOzE,KAAKuE,EAAQ3I,IAGxB,OAAO6I,I,wBAIT,SAAWrH,GAAI,IAAD,OACZ+C,KAAKwD,iBAAiB,qBACtB,IAFY,EAERiB,EAAYxH,EAAEsG,OAAOvG,MAAM0H,OAC3BC,EAAqB,YAAO3E,KAAK5B,MAAMC,WACvCuG,EAAY,GAJJ,cAKQD,GALR,IAKZ,2BAA2C,CAAC,IAAnCvB,EAAkC,QACrCC,EAAa,QACOwB,IAApBzB,EAAQtE,UACVuE,EAAWvE,QAAUsE,EAAQtE,QAC7B8F,EAAU/E,KAAKwD,KATP,8BAYZ,IAAIyB,EAAe,GAEjBA,EADgB,KAAdL,EACaG,EAAUG,QAAO,SAAAjG,GAAO,OAAKA,EAAQA,QAAQyF,cAAcC,SAASC,EAAUF,kBAE9EK,EAGjB5E,KAAKE,SAAS,CACZxB,YAAa+F,EACbnG,aAAcwG,IAGhBxE,YAAW,WACT,EAAKgD,UAAU,uBACd,K,gCAIL,SAAmB3B,EAASqD,GACdlD,IAAE,IAAMH,GAASK,YAE1BQ,IAAI,IAAMb,EAAU,WAAaqD,GACjCC,SACAC,MAAK,K,wBAGV,SAAWC,EAAUH,GAAW,IAAD,OACnBI,OAAOC,QAAQ,qCAGvBrF,KAAK7B,MAAMkC,mBACT,GACA,EACA,kBACA,kBAEFK,MAAMV,KAAK7B,MAAMwC,QAAUwE,EAASvF,IAAK,CAEvCgB,OAAQ,SACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYf,KAAK7B,MAAM6C,aAGvCC,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACXD,EAASE,OAAOH,MAAK,SAAC3B,GACpB,EAAKnB,MAAMkC,mBACT,GACA,EACA,6BACA,kBAEF,EAAKiF,mBAAmB,oBAAqBN,GAC7C,IAAIO,EAAO,EACXjF,YAAW,WACTiF,EAAKpH,MAAMoC,sBACV,YAEA,CACL,EAAKpC,MAAMkC,mBACT,GACA,EACA,4BACA,iBAEF,IAAIkF,EAAO,EACXjF,YAAW,WACTiF,EAAKpH,MAAMoC,sBACV,SAGNmB,OAAM,SAACpE,GACN6C,QAAQC,IAAI9C,GACZ,EAAKa,MAAMkC,mBACT,GACA,EACA,4BACA,iBAEFC,YAAW,WACT,EAAKnC,MAAMoC,sBACV,W,sBAMX,SAASiF,GAAW,IAAD,OACbC,EAAS,eAAQzF,KAAK5B,MAAMO,WAChC8G,EAAU3G,QAAQ9B,MAAQwI,EAAS1G,QACnC2G,EAAU7G,eAAe5B,MAAQwI,EAAS5G,eAC1CoB,KAAKE,SAAS,CACZvB,UAAW8G,EACXC,WAAYF,EAAS5F,MAEvBU,YAAW,WACT,EAAKJ,SAAS,CACZnB,YAAY,OAGhBuB,YAAW,WACTwB,IAAE,UAAU6D,iBACX,O,yBAIL,WAAe,IAAD,OACZ3F,KAAK7B,MAAMkC,mBACT,GACA,EACA,yDACA,kBAEF,IAAIuF,EAAc,GAClBA,EAAYhH,eAAiBoB,KAAK5B,MAAMO,UAAUF,cAAczB,MAChE4I,EAAY9G,QAAUkB,KAAK5B,MAAMO,UAAUG,QAAQ9B,MACnD4I,EAAY7F,OAAS,uCACrB6F,EAAYtJ,KAAO,YAEnBoE,MAAMV,KAAK7B,MAAMwC,QAAUX,KAAK5B,MAAMsH,WAAY,CAEhD9E,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYf,KAAK7B,MAAM6C,WAExC6E,KAAMtG,KAAKkC,UAAUmE,KAEpB3E,MAAK,SAACC,GACmB,MAApBA,EAASC,OACXD,EAASE,OAAOH,MAAK,SAAC3B,GACpB,EAAKnB,MAAMkC,mBACT,GACA,EACAf,EAAS+B,YAAY8C,UACrB,iBAEF7D,YAAW,WACT,EAAKnC,MAAMoC,sBACV,KACH,IAAIuF,EAAuCvG,KAAKC,MAC9CJ,eAAeC,QAAQ,uBAErBqE,EAAYoC,EAAqCpC,WACnD,SAACC,GAAD,OAAOA,EAAE/E,iBAAmBgH,EAAYhH,kBAEtCgF,EAAyB,YACxBkC,EAAqCpC,GAAWG,aAEjDkC,EAAiBnC,EAA0BF,WAC7C,SAACC,GAAD,OAAOA,EAAE7E,UAAY8G,EAAY9G,WAEnC8E,EAA0BoC,OAAOD,EAAgB,GACjDD,EAAqCpC,GAAWG,YAC9CD,EACFxE,eAAeoC,QACb,qBACAjC,KAAKkC,UAAUqE,QAInB,EAAK3H,MAAMkC,mBACT,GACA,EACA,4BACA,iBAEFC,YAAW,WACT,EAAKnC,MAAMoC,sBACV,SAGNmB,OAAM,SAACpE,GACN6C,QAAQC,IAAI9C,GACZ,EAAKa,MAAMkC,mBACT,GACA,EACA,4BACA,iBAEFC,YAAW,WACT,EAAKnC,MAAMoC,sBACV,U,4BAKT,SAAetD,GACb,IAAIgJ,EAAYhJ,EAAEsG,OAAOjH,KACrB4J,EACgB,aAAlBjJ,EAAEsG,OAAO4C,KAAsBlJ,EAAEsG,OAAO6C,QAAUnJ,EAAEsG,OAAOvG,MACzDqJ,EAAcrK,OAAOsK,OAAO,GAAItG,KAAK5B,MAAMO,WAK/C,GAAkB,mBAAdsH,EAAgC,CAClC,IAAIjJ,EAAQrB,MAAMY,KAChBU,EAAEsG,OAAOgD,iBACT,SAACC,GAAD,OAAYA,EAAOxJ,SAErBqJ,EAAYzH,eAAe5B,MAAQA,EACnCqJ,EAAYzH,eAAeC,YAAa,MACjB,YAAdoH,IACTI,EAAYvH,QAAQ9B,MAAQkJ,EAC5BG,EAAYvH,QAAQD,YAAa,GAEnCmB,KAAKE,SAAS,CACZvB,UAAW0H,IAGbrG,KAAKyG,yB,kCAIP,WACE,IADqB,EACjBC,EAAkB1G,KAAK5B,MAAMO,UAC7BgI,EAAsBD,EAAgB9H,eAAe5B,MAErD4J,EAAeF,EAAgB5H,QAAQ9B,MACvC6J,EAAoBH,EAAgB5H,QAAQD,WAC5CiI,GAAc,EACdC,EAAS,GAETC,GAAsB,EATL,cAUML,GAVN,IAUrB,2BAAgD,CAChB,KADgB,QAC3BjC,SACjBsC,GAAsB,IAZL,8BAehBA,IACHD,EAAOnI,eAAiB,gCACxBkI,GAAc,GAGY,KAAxBF,EAAalC,SACXmC,IAAmBE,EAAOjI,QAAU,yBACxCgI,GAAc,GAGhB9G,KAAKE,SAAS,CACZjB,iBAAkB6H,EAClB9H,gBAAiB+H,M,+BAIrB,WAAqB,IAAD,OAClBzG,YAAW,WACT,EAAKJ,SAAS,CAAEnB,YAAY,EAAOL,YAAa,OAC/C,GACHsB,KAAKC,uBAAuBD,KAAK5B,MAAMC,a,oBAKzC,WAAU,IAAD,OACP,OACE,kBAAC,IAAM4I,SAAP,KACGjH,KAAK5B,MAAMW,WACV,yBAAKmI,UAAU,oBACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,6BAAf,YACA,yBAAKA,UAAU,kBACb,2BACEf,KAAK,OACLe,UAAU,+BACV5K,KAAK,UACL6K,SAAU,SAACC,GACT,EAAKC,eAAeD,IAEtBpK,MAAOgD,KAAK5B,MAAMO,UAAUG,QAAQ9B,QAEtC,2BAAOkK,UAAU,eACdlH,KAAK5B,MAAMY,gBAAX,WAIP,yBAAKkI,UAAU,wBACb,yBAAKA,UAAU,mBAAf,iBACA,4BACEA,UAAU,6CACVI,UAAU,EACVC,mBAAiB,OACjBjL,KAAK,iBACLU,MAAOgD,KAAK5B,MAAMO,UAAUC,eAAe5B,MAC3CmK,SAAU,SAACC,GACT,EAAKC,eAAeD,KAGrBpH,KAAK5B,MAAMK,cAAc+I,KACxB,SAACC,EAAcC,GACb,OACE,4BACE9H,IAAK,sBAAwB8H,EAC7B1K,MAAOyK,EAAaE,WAEnBF,EAAaE,eAMxB,2BAAOT,UAAU,eACdlH,KAAK5B,MAAMY,gBAAX,kBAIP,yBAAKkI,UAAU,OACb,yBAAKA,UAAU,8BACb,4BACEU,GAAG,mBACHC,UAAW7H,KAAK5B,MAAMa,iBACtB6I,QAAS9H,KAAK+H,YAAYC,KAAKhI,MAC/BkH,UAAU,sCAJZ,gBAQA,4BACEY,QAAS,kBAAM,EAAKG,qBACpBf,UAAU,iCAFZ,YAWR,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,YACb,4BACEf,KAAK,SACLe,UAAU,6CAEV,uBAAGA,UAAU,iBAJf,WAQF,yBAAKA,UAAU,gBACb,2BACEf,KAAK,OACLe,UAAU,qDACVC,SAAU,SAACC,GACT,EAAKc,WAAWd,IAElBpK,MAAOgD,KAAK5B,MAAMM,iBAK1B,yBAAKwI,UAAU,OAAf,IAAuB,KAAvB,KACA,yBAAKA,UAAU,gBACb,yBAAKU,GAAG,wBACL5H,KAAK5B,MAAMI,cACVwB,KAAK5B,MAAME,aAAa9C,OAAS,EAC/B,2BACEoM,GAAG,oBACHV,UAAU,qBAEV,+BACE,4BACE,wCACClH,KAAK7B,MAAMgK,YAAYC,SAASC,SAASC,SACvCC,OAAOC,QACVxI,KAAK7B,MAAMgK,YAAYC,SAASC,SAASC,SACtCC,OAAOE,KACR,sCACE,OAGR,+BACGzI,KAAK5B,MAAME,aAAakJ,KACvB,SAACrC,EAAUuD,GACT,OACE,wBACE9I,IAAK,4BAA8B8I,EACnCd,GAAI,4BAA8Bc,GAElC,4BAAKvD,EAASrG,SACd,4BACE,0BAAMoI,UAAU,cACb,EAAK/I,MAAMgK,YAAYC,SAASC,SAC9BC,SAASC,OAAOE,KACjB,yBACEE,IAAI,cACJb,QAAS,EAAKc,SAASZ,KACrB,EACA7C,EACAuD,GAEFG,MAAM,OACNC,IAAKC,MAEL,KACH,EAAK5K,MAAMgK,YAAYC,SAASC,SAC9BC,SAASC,OAAOC,OACjB,yBACEG,IAAI,cACJb,QAAS,EAAKkB,WAAWhB,KACvB,EACA7C,EACAuD,GAEFG,MAAM,SACNC,IAAKG,MAEL,aAUpB,yBAAK/B,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sBAAsBgC,KAAK,SAA1C,sBAON,uBAAGhC,UAAU,2BACX,yBAAKyB,IAAI,UAAUG,IAAKK,gB,GAjuBJC,IAAMC","file":"static/js/9.27de4b8c.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/icondelete_tablemaintainmonitor.ba23f6b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconedit_tablemaintainmonitor.f1791879.svg\";","import React from \"react\";\nimport $ from \"jquery\";\n\nimport IconEdit from \"../assets/images/iconedit_tablemaintainmonitor.svg\";\nimport IconDelete from \"../assets/images/icondelete_tablemaintainmonitor.svg\";\nimport Rolling from \"../assets/images/rolling.svg\";\n\nexport default class Groupupgrade extends React.Component {\n  /* istanbul ignore next */\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: [],\n      newTableData: [],\n      selectedSubscriptionId: \"\",\n      showTableInit: false,\n      subscriptions: [],\n      filterValue: \"\",\n      groupForm: {\n        subscriptionId: { value: [], dirtyState: false },\n        groupId: { value: \"\", dirtyState: false },\n      },\n      changeForm: false,\n      errorsGroupForm: {},\n      groupFormIsValid: false,\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    let subscriptionData = [];\n    let technicalTableData = [];\n    if (sessionStorage.getItem(\"snapshotData\") !== null) {\n      let respData = JSON.parse(sessionStorage.getItem(\"snapshotData\"));\n      let allData = [];\n      Object.keys(respData).forEach((key) => {\n        allData.push(respData[key]);\n      });\n      for (let individualData of allData) {\n        if (individualData.parent) {\n          if (\n            individualData.parent === \"f894e5a8-0f9b-46ca-8b74-57e94610d731\"\n          ) {\n            technicalTableData.push(individualData);\n          }\n          if (\n            individualData.parent === \"ab2a2691-a563-486c-9883-5111ff36ba9b\"\n          ) {\n            subscriptionData.push(individualData);\n          }\n        }\n      }\n      this.generateTableStructure(technicalTableData);\n      this.setState({\n        tableData: technicalTableData,\n        subscriptions: subscriptionData,\n      });\n\n      console.log(technicalTableData);\n      if (technicalTableData.length === 0) {\n        this.props.showGlobalMessage(\n          true,\n          true,\n          \"There is no Data\",\n          \"custom-danger\"\n        );\n        setTimeout(() => {\n          this.props.hideGlobalMessage();\n        }, 2000);\n      }\n    } else {\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please try after sometime\",\n        \"custom-danger\"\n      );\n      setTimeout(() => {\n        this.props.hideGlobalMessage();\n      }, 2000);\n    }\n  }\n\n  /* istanbul ignore next */\n  componentWillUnmount() {\n    clearInterval(this.timerForSubscriptionList);\n    this.timerForSubscriptionList = null;\n  }\n\n  /* istanbul ignore next */\n  getSubscriptionList() {\n    fetch(this.props.baseUrl + \"/listSubscriptions\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.authToken,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          response.json().then((respData) => {\n            if (respData.errorStatus.status === \"ok\") {\n              let subscriptions = respData.data;\n              localStorage.setItem(\n                \"subscriptions\",\n                JSON.stringify(subscriptions)\n              );\n            } else {\n              console.log(\"Subscription list backgroung api error\");\n            }\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        console.log(\"Subscription list backgroung api error\");\n      });\n  }\n\n  initTable(tableId, preserveState) {\n    var pageLength = 5;\n    let tableWidth = 0;\n    tableWidth = $(\"#groupupgradeTableDiv\")[0].offsetWidth - 200;\n    $(\"#\" + tableId).DataTable({\n      dom: 'rt<\"bottom\"lp>',\n      bSort: true,\n      scrollX: true,\n      language: {\n        paginate: {\n          previous: \"<\",\n          next: \">\",\n        },\n      },\n      createdRow: function (row, data, dataIndex) {\n        for (let i = 0; i < data.length; i++) {\n          $(\"td:eq(\" + i + \")\", row).css(\n            \"min-width\",\n            tableWidth / data.length + \"px\"\n          );\n        }\n      },\n      pageLength: pageLength,\n      stateSave: preserveState,\n      destroy: true,\n      fnDrawCallback: function (oSettings) {\n        if (oSettings.aiDisplay.length <= pageLength) {\n          $(\".dataTables_paginate\").hide();\n        } else {\n          $(\".dataTables_paginate\").show();\n        }\n      },\n    });\n\n    $(\".bottom\").addClass(\"row\");\n    $(\".dataTables_length\").addClass(\"col-sm-6\");\n    $(\".dataTables_paginate\").addClass(\"col-sm-6\");\n  }\n\n  /* istanbul ignore next */\n  generateTableStructure(tableData) {\n    let newTableData = [];\n    for (let dataObj of tableData) {\n      let newDataObj = {};\n      newDataObj.groupId = dataObj.groupId;\n      newDataObj.subscriptionId = dataObj.subscriptionId;\n      newDataObj.key = dataObj.key;\n      newTableData.push(newDataObj);\n    }\n\n    this.setState({\n      tableData: newTableData,\n      newTableData: newTableData,\n      showTableInit: true,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"groupupgradeTable\");\n    }, 100);\n  }\n\n  /* istanbul ignore next */\n  destroyDataTable(tableId) {\n    var table = $(\"#\" + tableId).DataTable();\n    table.destroy();\n  }\n  getDataOnChange(e) {\n    let selectedSubscriptionId = e.target.value;\n    this.destroyDataTable(\"groupupgradeTable\");\n    this.setState({\n      selectedSubscriptionId: selectedSubscriptionId,\n      showTableInit: false,\n    });\n\n    if (selectedSubscriptionId === \"\") {\n      this.setState({\n        tableData: [],\n      });\n      this.generateTableStructure([]);\n    } else {\n      // fetch(this.props.baseUrl + '/groupList?subscriptionID='+selectedSubscriptionId, { //this.props.baseUrl + '/groupList?subscriptionID='+selectedSubscriptionId\n      fetch(\"https://reqres.in/api/users/2\", {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              let data = respData.data;\n              respData = {\n                errorStatus: {\n                  status: \"ok\",\n                },\n              };\n\n              if (respData.errorStatus.status === \"ok\") {\n                // check selectedSubscriptionId in createGroup localStorage and append it to data here\n                let newlyCreatedGroupsofSubscriptions =\n                  JSON.parse(localStorage.getItem(\"newlyCreatedGroups\")) || [];\n                let findIndex = newlyCreatedGroupsofSubscriptions.findIndex(\n                  (x) => x.subscriptionId === selectedSubscriptionId\n                );\n                if (findIndex !== -1) {\n                  let allNewlyCreatedGroupsData = [\n                    ...newlyCreatedGroupsofSubscriptions[findIndex].createdData,\n                  ];\n                  if (allNewlyCreatedGroupsData.length > 0) {\n                    for (let dataToAppendAsPending of allNewlyCreatedGroupsData) {\n                      let pendingData = {\n                        groupId: dataToAppendAsPending.groupId,\n                        ids: {\n                          aid: dataToAppendAsPending.aid,\n                          tid: dataToAppendAsPending.tid,\n                        },\n                      };\n                      data.push(pendingData);\n                    }\n                  }\n                }\n                this.setState({\n                  tableData: data,\n                });\n                this.generateTableStructure(data);\n              } else {\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  respData.errorStatus.statusMsg,\n                  \"custom-danger\"\n                );\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              }\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  /* istanbul ignore next */\n  filterByValue(myArray, string) {\n    let retArr = [];\n    for (var i = 0; i < myArray.length; i++) {\n      if (myArray[i].groupId.toLowerCase().includes(string.toLowerCase())) {\n        retArr.push(myArray[i]);\n      }\n    }\n    return retArr;\n  }\n\n  /* istanbul ignore next */\n  filterData(e) {\n    this.destroyDataTable(\"groupupgradeTable\");\n    let searchStr = e.target.value.trim();\n    let wholeDataUnstructured = [...this.state.tableData];\n    let wholeData = [];\n    for (let dataObj of wholeDataUnstructured) {\n      let newDataObj = {};\n      if (dataObj.groupId !== undefined) {\n        newDataObj.groupId = dataObj.groupId;\n        wholeData.push(newDataObj);\n      }\n    }\n    let filteredData = [];\n    if (searchStr !== \"\") {\n      filteredData = wholeData.filter(groupId =>  groupId.groupId.toLowerCase().includes(searchStr.toLowerCase()));\n    } else {\n      filteredData = wholeData;\n    }\n\n    this.setState({\n      filterValue: searchStr,\n      newTableData: filteredData,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"groupupgradeTable\");\n    }, 0);\n  }\n\n  /* istanbul ignore next */\n  removeDataTableRow(tableId, rowIndex) {\n    var table = $(\"#\" + tableId).DataTable();\n    table\n      .row(\"#\" + tableId + \"TbodyTr_\" + rowIndex)\n      .remove()\n      .draw(false);\n  }\n\n  deleteData(tbodyVal, rowIndex) {\n    let cnf = window.confirm(\"Are you sure you want to delete\");\n    if (cnf) {\n      //let groupId = tbodyVal.groupId;\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please Wait....\",\n        \"custom-success\"\n      );\n      fetch(this.props.baseUrl + tbodyVal.key, {\n        //this.props.baseUrl + '/deleteGroup?groupID='+groupId+'&subscriptionID='+this.state.selectedSubscriptionId , {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              this.props.showGlobalMessage(\n                false,\n                true,\n                \"Record deleted successfuly\",\n                \"custom-success\"\n              );\n              this.removeDataTableRow(\"groupupgradeTable\", rowIndex);\n              let that = this;\n              setTimeout(function () {\n                that.props.hideGlobalMessage();\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            let that = this;\n            setTimeout(function () {\n              that.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  /* istanbul ignore next */\n  editData(groupVal) {\n    let groupData = { ...this.state.groupForm };\n    groupData.groupId.value = groupVal.groupId;\n    groupData.subscriptionId.value = groupVal.subscriptionId;\n    this.setState({\n      groupForm: groupData,\n      currentKey: groupVal.key,\n    });\n    setTimeout(() => {\n      this.setState({\n        changeForm: true,\n      });\n    });\n    setTimeout(() => {\n      $(\"select\").selectpicker();\n    }, 500);\n  }\n\n  /* istanbul ignore next */\n  updategroup() {\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Record update initiated. Please check after some time.\",\n      \"custom-success\"\n    );\n    let prepareData = {};\n    prepareData.subscriptionId = this.state.groupForm.subscriptions.value;\n    prepareData.groupId = this.state.groupForm.groupId.value;\n    prepareData.parent = \"f894e5a8-0f9b-46ca-8b74-57e94610d731\";\n    prepareData.name = \"GroupName\";\n\n    fetch(this.props.baseUrl + this.state.currentKey, {\n      //this.props.baseUrl + '/createGroup'\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.authToken,\n      },\n      body: JSON.stringify(prepareData),\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          response.json().then((respData) => {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              respData.errorStatus.statusMsg,\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n            let oldNewlyCreatedGroupsofSubscriptions = JSON.parse(\n              sessionStorage.getItem(\"newlyCreatedGroups\")\n            );\n            let findIndex = oldNewlyCreatedGroupsofSubscriptions.findIndex(\n              (x) => x.subscriptionId === prepareData.subscriptionId\n            );\n            let allNewlyCreatedGroupsData = [\n              ...oldNewlyCreatedGroupsofSubscriptions[findIndex].createdData,\n            ];\n            let findGroupIndex = allNewlyCreatedGroupsData.findIndex(\n              (x) => x.groupId === prepareData.groupId\n            );\n            allNewlyCreatedGroupsData.splice(findGroupIndex, 1);\n            oldNewlyCreatedGroupsofSubscriptions[findIndex].createdData =\n              allNewlyCreatedGroupsData;\n            sessionStorage.setItem(\n              \"newlyCreatedGroups\",\n              JSON.stringify(oldNewlyCreatedGroupsofSubscriptions)\n            );\n          });\n        } else {\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.props.showGlobalMessage(\n          true,\n          true,\n          \"Please try after sometime\",\n          \"custom-danger\"\n        );\n        setTimeout(() => {\n          this.props.hideGlobalMessage();\n        }, 2000);\n      });\n  }\n\n  /* istanbul ignore next */\n  handleFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentForm = Object.assign({}, this.state.groupForm);\n    /* let newvalue = Array.from(\n      e.target.selectedOptions,\n      (option) => option.value\n    ); */\n    if (fieldName === \"subscriptionId\") {\n      let value = Array.from(\n        e.target.selectedOptions,\n        (option) => option.value\n      );\n      currentForm.subscriptionId.value = value;\n      currentForm.subscriptionId.dirtyState = true;\n    } else if (fieldName === \"groupId\") {\n      currentForm.groupId.value = updatedValue;\n      currentForm.groupId.dirtyState = true;\n    }\n    this.setState({\n      groupForm: currentForm,\n    });\n\n    this.handleFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleFormValidation() {\n    let currentFormData = this.state.groupForm;\n    let subscriptionIdValue = currentFormData.subscriptionId.value;\n    //let subscriptionIdDirtyState = currentFormData.subscriptionId.dirtyState;\n    let groupIdValue = currentFormData.groupId.value;\n    let groupIdDirtyState = currentFormData.groupId.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n\n    let subscriptionIdFound = false;\n    for (let subscriptionId of subscriptionIdValue) {\n      if (subscriptionId.trim() !== \"\") {\n        subscriptionIdFound = true;\n      }\n    }\n    if (!subscriptionIdFound) {\n      errors.subscriptionId = \"Please select Subscription ID\";\n      formIsValid = false;\n    }\n\n    if (groupIdValue.trim() === \"\") {\n      if (groupIdDirtyState) errors.groupId = \"Please enter Group ID\";\n      formIsValid = false;\n    }\n\n    this.setState({\n      groupFormIsValid: formIsValid,\n      errorsGroupForm: errors,\n    });\n  }\n\n  changeFormHandler() {\n    setTimeout(() => {\n      this.setState({ changeForm: false, filterValue: \"\" });\n    }, 0);\n    this.generateTableStructure(this.state.tableData);\n  }\n\n  /* jshint ignore:start */\n  /* istanbul ignore next */\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.changeForm ? (\n          <div className=\"row Groupupgrade\">\n            <div className=\"col-md-12 centered-div\">\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <div className=\"col-sm-12 label text-left\">Group Id</div>\n                  <div className=\"col-sm-12 mb-2\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-sm\"\n                      name=\"groupId\"\n                      onChange={(event) => {\n                        this.handleFormData(event);\n                      }}\n                      value={this.state.groupForm.groupId.value}\n                    />\n                    <small className=\"text-danger\">\n                      {this.state.errorsGroupForm[\"groupId\"]}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"col-sm-6 text-center\">\n                  <div className=\"col-sm-12 label\">Subscriptions</div>\n                  <select\n                    className=\"selectpicker form-control form-control-sm \"\n                    multiple={true}\n                    data-live-search=\"true\"\n                    name=\"subscriptionId\"\n                    value={this.state.groupForm.subscriptionId.value}\n                    onChange={(event) => {\n                      this.handleFormData(event);\n                    }}\n                  >\n                    {this.state.subscriptions.map(\n                      (subscription, subscriptionIndex) => {\n                        return (\n                          <option\n                            key={\"subscriptionOption_\" + subscriptionIndex}\n                            value={subscription.licenseId}\n                          >\n                            {subscription.licenseId}\n                          </option>\n                        );\n                      }\n                    )}\n                  </select>\n                  <small className=\"text-danger\">\n                    {this.state.errorsGroupForm[\"subscriptionId\"]}\n                  </small>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-12 mb-2 text-center\">\n                  <button\n                    id=\"update-group-btn\"\n                    disabled={!this.state.groupFormIsValid}\n                    onClick={this.updategroup.bind(this)}\n                    className=\"btn btn-sm customize-view-btn mr-2\"\n                  >\n                    UPDATE GROUP\n                  </button>\n                  <button\n                    onClick={() => this.changeFormHandler()}\n                    className=\"btn btn-sm customize-view-btn\"\n                  >\n                    Back\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"row Groupupgrade\">\n            <div className=\"col-md-12\">\n              <div className=\"row mt-2\">\n                <div className=\"col-sm-6 text-left\">\n                  <div className=\"d-inline\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-outline-secondary disabled\"\n                    >\n                      <i className=\"fa fa-filter\"></i>\n                      FILTER\n                    </button>\n                  </div>\n                  <div className=\"d-inline p-2\">\n                    <input\n                      type=\"text\"\n                      className=\"d-inline form-control form-control-sm search-field\"\n                      onChange={(event) => {\n                        this.filterData(event);\n                      }}\n                      value={this.state.filterValue}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\"> {null} </div>\n              <div className=\"centered-div\">\n                <div id=\"groupupgradeTableDiv\">\n                  {this.state.showTableInit ? (\n                    this.state.newTableData.length > 0 ? (\n                      <table\n                        id=\"groupupgradeTable\"\n                        className=\"table text-center\"\n                      >\n                        <thead>\n                          <tr>\n                            <th>Group ID</th>\n                            {this.props.permissions.accesses.maintain.subMenus\n                              .groups.delete ||\n                            this.props.permissions.accesses.maintain.subMenus\n                              .groups.edit ? (\n                              <th>Action</th>\n                            ) : null}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.newTableData.map(\n                            (tbodyVal, tbodyIndex) => {\n                              return (\n                                <tr\n                                  key={\"groupupgradeTableTbodyTr_\" + tbodyIndex}\n                                  id={\"groupupgradeTableTbodyTr_\" + tbodyIndex}\n                                >\n                                  <td>{tbodyVal.groupId}</td>\n                                  <td>\n                                    <span className=\"action-img\">\n                                      {this.props.permissions.accesses.maintain\n                                        .subMenus.groups.edit ? (\n                                        <img\n                                          alt=\"delete-icon\"\n                                          onClick={this.editData.bind(\n                                            this,\n                                            tbodyVal,\n                                            tbodyIndex\n                                          )}\n                                          title=\"edit\"\n                                          src={IconEdit}\n                                        />\n                                      ) : null}\n                                      {this.props.permissions.accesses.maintain\n                                        .subMenus.groups.delete ? (\n                                        <img\n                                          alt=\"delete-icon\"\n                                          onClick={this.deleteData.bind(\n                                            this,\n                                            tbodyVal,\n                                            tbodyIndex\n                                          )}\n                                          title=\"Delete\"\n                                          src={IconDelete}\n                                        />\n                                      ) : null}\n                                    </span>\n                                  </td>\n                                </tr>\n                              );\n                            }\n                          )}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <div className=\"row mt-2\">\n                        <div className=\"col-md-12\">\n                          <div className=\"alert alert-success\" role=\"alert\">\n                            No record found!\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  ) : (\n                    <p className=\"text-center loader-icon\">\n                      <img alt=\"loading\" src={Rolling} />\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n    /* jshint ignore:end */\n  }\n}\n"],"sourceRoot":""}