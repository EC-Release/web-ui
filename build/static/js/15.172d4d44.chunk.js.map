{"version":3,"sources":["assets/images/icon_greensortingdown.svg","assets/images/icondelete_tablemaintainmonitor.svg","assets/images/iconedit_tablemaintainmonitor.svg","assets/images/icon_tablemaintainmonitor.svg","assets/images/plus.svg","Settings/UserManagement.js"],"names":["module","exports","UserManagement","props","state","formData","name","value","dirtyState","sso","email","makerSso","type","errorsForm","formIsValid","showForm","Users","fetch","method","then","response","status","json","user","makersso","setState","console","log","users","e","fieldName","target","updatedValue","checked","currentForm","Object","assign","this","handleFormValidation","currentFormData","nameValue","nameDirtyState","emailValue","emailDirtyState","ssoValue","ssoDirtyState","makerSsoValue","makerSsoDirtyState","errors","trim","showGlobalMessage","prepareData","hideGlobalMessage","className","id","alt","src","IconGreenSortingDown","onChange","event","handleFormData","disabled","onClick","createUser","bind","map","key","title","IconPlus","IconEdit","IconTable","IconDelete","React","Component"],"mappings":"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","file":"static/js/15.172d4d44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon_greensortingdown.7d91f50e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icondelete_tablemaintainmonitor.ba23f6b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconedit_tablemaintainmonitor.f1791879.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_tablemaintainmonitor.cef7106b.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.07e521be.svg\";","import React from \"react\";\nimport  IconGreenSortingDown from '../assets/images/icon_greensortingdown.svg';\nimport IconEdit from '../assets/images/iconedit_tablemaintainmonitor.svg';\nimport IconDelete from '../assets/images/icondelete_tablemaintainmonitor.svg';\nimport IconTable from '../assets/images/icon_tablemaintainmonitor.svg';\nimport IconPlus from '../assets/images/plus.svg';\n\nexport default class UserManagement extends React.Component {\n  /* istanbul ignore next */\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {\n        name: { value: \"\", dirtyState: false },\n        sso: { value: \"\", dirtyState: false },\n        email: { value: \"\", dirtyState: false },\n        makerSso: { value: \"\", dirtyState: false, type: \"password\" },\n      },\n      errorsForm: {},\n      formIsValid: false,\n      showForm: false,\n      Users: [],\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\", {\n      // Get gateways\n      method: \"GET\",\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then((user) => {\n          user = [\n            {\n              name: \"Adam johnson\",\n              sso: \"312042341\",\n              email: \"adam.Johnson@ge.com\",\n              makersso: \"31232341\",\n            },\n            {\n              name: \"Mark Wood\",\n              sso: \"21312341\",\n              email: \"mark.wood@ge.com\",\n              makersso: \"31232341\",\n            },\n            {\n              name: \"Mary Lou\",\n              sso: \"50213012\",\n              email: \"mary.lou@ge.com\",\n              makersso: \"31232341\",\n            },\n          ];\n          this.setState({\n            Users: user,\n          });\n          console.log(this.state.users);\n        });\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  handleFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentForm = Object.assign({}, this.state.formData);\n\n    if (fieldName === \"sso\") {\n      currentForm.sso.value = updatedValue;\n      currentForm.sso.dirtyState = true;\n    } else if (fieldName === \"email\") {\n      currentForm.email.value = updatedValue;\n      currentForm.email.dirtyState = true;\n    } else if (fieldName === \"name\") {\n      currentForm.name.value = updatedValue;\n      currentForm.name.dirtyState = true;\n    } else if (fieldName === \"makerSso\") {\n      currentForm.makerSso.value = updatedValue;\n      currentForm.makerSso.dirtyState = true;\n    }\n\n    this.setState({\n      formData: currentForm,\n    });\n    this.handleFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleFormValidation() {\n    let currentFormData = this.state.formData;\n    let nameValue = currentFormData.name.value;\n    let nameDirtyState = currentFormData.name.dirtyState;\n    let emailValue = currentFormData.email.value;\n    let emailDirtyState = currentFormData.email.dirtyState;\n    let ssoValue = currentFormData.sso.value;\n    let ssoDirtyState = currentFormData.sso.dirtyState;\n    let makerSsoValue = currentFormData.makerSso.value;\n    let makerSsoDirtyState = currentFormData.makerSso.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n\n    if (nameValue.trim() === \"\") {\n      if (nameDirtyState) errors.name = \"Please enter Name\";\n      formIsValid = false;\n    }\n\n    if (emailValue.trim() === \"\") {\n      if (emailDirtyState) errors.email = \"Please enter a valid Email Address \";\n      formIsValid = false;\n    }\n\n    if (ssoValue.trim() === \"\") {\n      if (ssoDirtyState) errors.sso = \"Please enter User SSO\";\n      formIsValid = false;\n    }\n\n    if (makerSsoValue.trim() === \"\") {\n      if (makerSsoDirtyState) errors.makerSso = \"Please enter Maker SSO\";\n      formIsValid = false;\n    }\n\n    this.setState({\n      formIsValid: formIsValid,\n      errorsForm: errors,\n    });\n  }\n  /* istanbul ignore next */\n  createUser() {\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Record saving initiated. Please check after some time.\",\n      \"custom-success\"\n    );\n    let currentForm = Object.assign({}, this.state.formData);\n    let prepareData = {};\n    prepareData.name = currentForm.name.value;\n    prepareData.sso = currentForm.sso.value;\n    prepareData.email = currentForm.email.value;\n    console.log(prepareData);\n    this.props.hideGlobalMessage();\n    this.setState({\n      showForm: false,\n    });\n  }\n\n  /* istanbul ignore next */\n  showHideField(e, fieldName) {\n    let currentForm = {};\n    currentForm = Object.assign({}, this.state.formData);\n\n    if (currentForm[fieldName].type === \"password\") {\n      currentForm[fieldName].type = \"text\";\n    } else {\n      currentForm[fieldName].type = \"password\";\n    }\n\n    this.setState({\n      formData: currentForm,\n    });\n  }\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div className=\"row web-hook\">\n        {this.state.showForm ? (\n          <div className=\"col-md-12 mt-2\">\n            <div className=\"centered-div\">\n              <div className=\"centered-div-header\">\n                <div className=\"row WebHooks-header\">\n                  <div className=\"col-md-12\">\n                    <h6 id=\"WebHooks-title text-blue\">\n                      User Management\n                      <span className=\"text-black\"> Add Users</span>\n                    </h6>\n                  </div>\n                </div>\n                <hr></hr>\n                <div className=\"changeable-form group-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"col-sm-12 label required\">\n                        NAME\n                        <img\n                          alt=\"down-arrow\"\n                          src={IconGreenSortingDown}\n                        />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"name\"\n                          value={this.state.formData.name.value}\n                          onChange={(event) => {\n                            this.handleFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsForm[\"name\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <div className=\"col-sm-12 label required\">\n                        USER SSO\n                        <img\n                          alt=\"down-arrow\"\n                          src={IconGreenSortingDown}\n                        />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"sso\"\n                          value={this.state.formData.sso.value}\n                          onChange={(event) => {\n                            this.handleFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsForm[\"sso\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <div className=\"col-sm-12 label required\">\n                        Email Address\n                        <img\n                          alt=\"down-arrow\"\n                          src={IconGreenSortingDown}\n                        />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"email\"\n                          value={this.state.formData.email.value}\n                          onChange={(event) => {\n                            this.handleFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsForm[\"email\"]}\n                        </small>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-6\">\n                      <div className=\"col-sm-12 label required\">\n                        Maker SSO\n                        <img\n                          alt=\"down-arrow\"\n                          src={IconGreenSortingDown}\n                        />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"makerSso\"\n                          value={this.state.formData.makerSso.value}\n                          onChange={(event) => {\n                            this.handleFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsForm[\"makerSso\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-12 mb-2 text-center\">\n                      <button\n                        id=\"create-group-btn\"\n                        disabled={!this.state.formIsValid}\n                        onClick={this.createUser.bind(this)}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        ADD USER\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"row\">\n            <div className=\"col-md-12 mt-2\">\n              <div className=\"centered-div\">\n                <div className=\"centered-div-header\">\n                  <div className=\"row mt-2 mb-2 WebHooks-header\">\n                    <div className=\"col-md-8\">\n                      <h6 id=\"WebHooks-title\">User Management</h6>\n                    </div>\n                    <div className=\"col-md-4 text-right\">\n                      <button\n                        onClick={() => this.setState({ showForm: true })}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        Add User\n                      </button>\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row small\">\n                    <div className=\"col-sm-12 text-center\">\n                      <table className=\"table \">\n                        <thead>\n                          <tr>\n                            <th>Name</th>\n                            <th>SSO</th>\n                            <th>Email Address</th>\n                            <th>Maker SSO</th>\n                            <th>Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.Users.map((user, key) => {\n                            return (\n                              <tr key={\"user\" + key}>\n                                <td>{user.name} </td>\n                                <td>{user.sso} </td>\n                                <td> {user.email}</td>\n                                <td>{user.makersso} </td>\n                                <td>\n                                  <span className=\"action-img\">\n                                    <img\n                                      alt=\"plus-icon\"\n                                      title=\"\"\n                                      src={IconPlus}\n                                    />\n                                    <img\n                                      alt=\"edit-icon\"\n                                      title=\"Edit\"\n                                      src={IconEdit}\n                                    />\n                                    <img\n                                      alt=\"-icon\"\n                                      title=\"\"\n                                      src={IconTable}\n                                    />\n                                    <img\n                                      alt=\"delete-icon\"\n                                      title=\"Delete\"\n                                      src={IconDelete}\n                                    />\n                                  </span>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n"],"sourceRoot":""}