{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/images/icon_greensortingdown.svg","assets/images/icondelete_tablemaintainmonitor.svg","assets/images/iconedit_tablemaintainmonitor.svg","assets/images/icon_arrowmore.svg","assets/images/copy.svg","Maintain/Maintainagentedit.js","Maintain/Maintainagentupgrade.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_createForOfIteratorHelper","Symbol","iterator","isArray","F","s","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","_toConsumableArray","arrayLikeToArray","iter","unsupportedIterableToArray","module","exports","Maintainagentedit","props","state","agentForm","agentMode","dirtyState","gateway","businessId","businessName","requestor","requestedDate","customerEmail","bucAnd","vpc","debugMode","errorsAgentForm","agentFormIsValid","serverForm","mode","agentId","group","clientId","clientSecret","duration","OAuth2","host","zone","serviceUrl","remoteHost","remotePort","proxy","allowPlugIn","plugIn","errorsServerForm","serverFormIsValid","clientForm","uaaClientId","localPort","targetId","errorsClientForm","clientFormIsValid","xclientForm","errorsXClientForm","xclientFormIsValid","xserverForm","errorsXServerForm","xserverFormIsValid","executeScriptForm","ecVersion","ecSubVersion","osType","username","password","scriptPath","agentModeButtons","text","gateways","id","businesses","ecVersions","ecSubVersions","ecVersionId","osTypes","plugIns","apiEndPoints","baseUrl","environments","formData","assign","this","editItemData","parseInt","gatewayId","agent_id","uaaClientSecret","oauth_provider","hostUrl","serverId","userId","remote_host","remote_port","setState","that","setTimeout","handleServerFormValidation","handleClientFormValidation","handleXClientFormValidation","handleXServerFormValidation","newAgentMode","currentAgentForm","currentServerForm","currentClientForm","showGlobalMessage","hideGlobalMessage","type","prepareData","agentFormData","serverFormData","mod","dbg","aid","grp","cid","csc","dur","oa2","hst","zon","cps","sst","rht","rpt","plg","statePlugIn","indexOf","fetch","method","headers","Accept","Authorization","authToken","body","JSON","stringify","then","response","status","json","respData","errorStatus","handleDataTable","data","toLowerCase","vln","tls","blob","Blob","window","navigator","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","statusMsg","catch","console","log","parent","sessionStorage","setItem","selectedHost","xClientFormData","XClientForm","clientFormData","tid","lpt","fieldName","target","updatedValue","checked","durationAfterValidityCheck","validity","valid","localPortAfterValidityCheck","options","l","selected","push","currentFormData","agentIdValue","agentIdDirtyState","groupValue","groupDirtyState","clientIdValue","clientIdDirtyState","clientSecretValue","clientSecretDirtyState","durationValue","durationDirtyState","OAuth2Value","OAuth2DirtyState","hostValue","hostDirtyState","localPortValue","localPortDirtyState","targetIdValue","targetIdDirtyState","allowPlugInValue","plugInValue","plugInDirtyState","formIsValid","errors","trim","substr","remotePortAfterValidityCheck","zoneValue","zoneDirtyState","serviceUrlValue","serviceUrlDirtyState","remoteHostValue","remoteHostDirtyState","remotePortValue","remotePortDirtyState","urlRegExp","className","map","agentModeButton","buttonIndex","key","onClick","handleChangeAgentMode","bind","disabled","onChange","event","handleAgentFormData","htmlFor","gatewayIndex","alt","src","IconGreenSortingDown","defaultValue","handleServerFormData","pattern","multiple","style","height","plugInIndex","downloadFile","changeView","handleClientFormData","handleXServerFormData","groups","groupIndex","groupId","autoComplete","CopyImg","copyFromXClientToXServer","handleXClientFormData","copyFromXServerToXClient","React","Component","Maintainagentupgrade","tableData","newTableData","viewTable","searchString","showTableInit","preserveState","technicalTableData","subscription","environment","env","gatewayPort","admToken","servers","server","uaaUrl","clients","client","generateTableStructure","tableId","tableWidth","$","offsetWidth","DataTable","dom","bSort","scrollX","language","paginate","previous","createdRow","row","dataIndex","css","pageLength","stateSave","destroy","fnDrawCallback","oSettings","aiDisplay","hide","show","addClass","dataObj","newDataObj","gatewayHidden","gatewayHiddenFlag","oauth_providerHidden","oauth_providerHiddenFlag","zoneHidden","zoneHiddenFlag","subscriptionHidden","subscriptionHiddenFlag","remote_hostHidden","remote_hostHiddenFlag","remote_portHidden","remote_portHiddenFlag","initTable","objectIndex","copiedObjectToChange","tempValue","array","string","filter","keys","some","k","undefined","includes","destroyDataTable","searchStr","searchStrWithSp","wholeData","filteredData","filterByValue","item","editItem","rowIndex","remove","draw","tbodyVal","rowdata","deletePath","deleteId","confirm","removeDataTableRow","tbodyIndex","zones","filterData","showHideTableTdData","IconArrowMore","edit","title","IconEdit","deleteData","IconDelete","Rolling"],"mappings":"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","file":"static/js/5.abbff09e.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/icon_greensortingdown.7d91f50e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icondelete_tablemaintainmonitor.ba23f6b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconedit_tablemaintainmonitor.f1791879.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_arrowmore.d49ae6a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/copy.00b333c3.svg\";","import React from \"react\";\nimport IconGreenSortingDown from \"../assets/images/icon_greensortingdown.svg\";\nimport CopyImg from \"../assets/images/copy.svg\";\nexport default class Maintainagentedit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      agentForm: {\n        agentMode: { value: 2, dirtyState: false },\n        gateway: { value: \"\", dirtyState: false },\n        businessId: { value: 0, dirtyState: false },\n        businessName: { value: \"\", dirtyState: false },\n        requestor: { value: \"\", dirtyState: false },\n        requestedDate: { value: \"\", dirtyState: false },\n        customerEmail: { value: \"\", dirtyState: false },\n        bucAnd: { value: \"\", dirtyState: false },\n        vpc: { value: \"\", dirtyState: false },\n        debugMode: { value: true, dirtyState: false },\n      },\n      errorsAgentForm: {},\n      agentFormIsValid: false,\n\n      serverForm: {\n        mode: \"SERVER\",\n        agentId: { value: \"\", dirtyState: false },\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        clientSecret: { value: \"\", dirtyState: false },\n        duration: { value: \"\", dirtyState: false },\n        /* istanbul ignore next */\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        zone: { value: \"\", dirtyState: false },\n        serviceUrl: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n        remotePort: { value: \"\", dirtyState: false },\n        proxy: { value: \"\", dirtyState: false },\n        allowPlugIn: { value: false, dirtyState: false },\n        plugIn: { value: [], dirtyState: false },\n      },\n      errorsServerForm: {},\n      serverFormIsValid: false,\n      clientForm: {\n        mode: \"CLIENT\",\n        agentId: { value: \"\", dirtyState: false },\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        uaaClientId: { value: \"\", dirtyState: false },\n        clientSecret: { value: \"\", dirtyState: false },\n        duration: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        localPort: { value: \"\", dirtyState: false },\n        targetId: { value: \"\", dirtyState: false },\n        proxy: { value: \"\", dirtyState: false },\n        allowPlugIn: { value: false, dirtyState: false },\n        plugIn: { value: [], dirtyState: false },\n      },\n      errorsClientForm: {},\n      clientFormIsValid: false,\n      xclientForm: {\n        mode: \"X:CLIENT\",\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n      },\n      errorsXClientForm: {},\n      xclientFormIsValid: false,\n      xserverForm: {\n        mode: \"X:SERVER\",\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n      },\n      errorsXServerForm: {},\n      xserverFormIsValid: false,\n      executeScriptForm: {\n        ecVersion: \"\",\n        ecSubVersion: \"\",\n        osType: \"1\",\n        username: \"\",\n        password: \"\",\n        scriptPath: \"\",\n      },\n      // API will provide this agentModeButtons\n      agentModeButtons: [\n        { text: \"SERVER\", value: 2 },\n        { text: \"CLIENT\", value: 3 },\n        { text: \"X:SERVER\", value: 4 },\n        { text: \"X:CLIENT\", value: 5 },\n      ],\n      // API will provide this gateways\n      gateways: [\n        { name: \"Choose Gateway...\", id: 100 },\n        { name: \"gateway-03123012\", id: 101 },\n        { name: \"gateway-31034216\", id: 102 },\n        { name: \"gateway-03130357\", id: 103 },\n      ],\n      // API will provide this businesses\n      businesses: [\n        { name: \"Aviation\", id: \"1\" },\n        { name: \"Power\", id: \"2\" },\n        { name: \"Capital\", id: \"3\" },\n        { name: \"External\", id: \"4\" },\n      ],\n      // API will provide this ecVersions\n      ecVersions: [\n        { name: \"v 212 stable\", id: \"1\" },\n        { name: \"v 1724 beta\", id: \"2\" },\n      ],\n      // API will provide this ecSubVersions\n      ecSubVersions: [\n        { name: \"v1.hokkaido.212 stable\", id: \"1\", ecVersionId: \"1\" },\n        { name: \"v1beta.fukuoka.1724\", id: \"2\", ecVersionId: \"2\" },\n      ],\n      // API will provide this osTypes\n      osTypes: [\n        { name: \"Linux\", id: \"1\" },\n        { name: \"Windows\", id: \"2\" },\n        { name: \"Solaris\", id: \"3\" },\n        { name: \"MAC\", id: \"4\" },\n      ],\n      // API will provide this plugIns\n      plugIns: [\n        { name: \"VLN\", id: \"vln\" },\n        { name: \"TLS\", id: \"tls\" },\n      ],\n      apiEndPoints: {\n        baseUrl: \"https://jsonplaceholder.typicode.com/todos/1\",\n      },\n      environments: [\n        { name: \"CF\", id: \"cf\" },\n        { name: \"AWS\", id: \"aws\" },\n      ],\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    let formData = Object.assign({}, this.props.editItemData);\n    let agentForm = {\n      agentMode: { value: parseInt(formData.agentMode), dirtyState: false },\n      gateway: { value: formData.gatewayId, dirtyState: false },\n      businessId: { value: 0, dirtyState: false },\n      businessName: { value: \"\", dirtyState: false },\n      requestor: { value: \"\", dirtyState: false },\n      requestedDate: { value: \"\", dirtyState: false },\n      customerEmail: { value: \"\", dirtyState: false },\n      bucAnd: { value: \"\", dirtyState: false },\n      vpc: { value: \"\", dirtyState: false },\n      debugMode: { value: true, dirtyState: false },\n    };\n\n    let clientForm = {\n      mode: \"CLIENT\",\n      agentId: { value: formData.agent_id, dirtyState: false },\n      group: { value: formData.group, dirtyState: false },\n      clientId: { value: formData.clientId, dirtyState: false },\n      uaaClientId: { value: formData.uaaClientId, dirtyState: false },\n      clientSecret: { value: formData.uaaClientSecret, dirtyState: false },\n      duration: { value: formData.duration, dirtyState: false },\n      OAuth2: { value: formData.oauth_provider, dirtyState: false },\n      host: { value: formData.hostUrl, dirtyState: false },\n      localPort: { value: formData.localPort, dirtyState: false },\n      targetId: { value: formData.targetId, dirtyState: false },\n      proxy: { value: \"\", dirtyState: false },\n      allowPlugIn: { value: false, dirtyState: false },\n      plugIn: { value: [], dirtyState: false },\n    };\n\n    let serverForm = {\n      mode: \"SERVER\",\n      agentId: { value: formData.agent_id, dirtyState: false },\n      group: { value: formData.group, dirtyState: false },\n      clientId: { value: formData.uaaClientId, dirtyState: false },\n      serverId: { value: formData.serverId, dirtyState: false },\n      userId: { value: formData.userId, dirtyState: false },\n      clientSecret: { value: formData.uaaClientSecret, dirtyState: false },\n      duration: { value: formData.duration, dirtyState: false },\n      OAuth2: { value: formData.oauth_provider, dirtyState: false },\n      host: { value: formData.hostUrl, dirtyState: false },\n      zone: { value: formData.zone, dirtyState: false },\n      serviceUrl: { value: formData.serviceUrl, dirtyState: false },\n      remoteHost: { value: formData.remote_host, dirtyState: false },\n      remotePort: { value: formData.remote_port, dirtyState: false },\n      proxy: { value: \"\", dirtyState: false },\n      allowPlugIn: { value: false, dirtyState: false },\n      plugIn: { value: [], dirtyState: false },\n    };\n\n    let xclientForm = {\n      mode: \"X:CLIENT\",\n      group: { value: formData.group, dirtyState: false },\n      clientId: { value: formData.uaaClientId, dirtyState: false },\n      OAuth2: { value: formData.oauth_provider, dirtyState: false },\n      host: { value: formData.hostUrl, dirtyState: false },\n      remoteHost: { value: formData.remote_host, dirtyState: false },\n    };\n\n    let xserverForm = {\n      mode: \"X:SERVER\",\n      group: { value: formData.group, dirtyState: false },\n      clientId: { value: formData.uaaClientId, dirtyState: false },\n      OAuth2: { value: formData.oauth_provider, dirtyState: false },\n      host: { value: formData.hostUrl, dirtyState: false },\n      remoteHost: { value: formData.remote_host, dirtyState: false },\n    };\n\n    this.setState({\n      agentForm: agentForm,\n      clientForm: clientForm,\n      serverForm: serverForm,\n      xclientForm: xclientForm,\n      xserverForm: xserverForm,\n    });\n\n    let that = this;\n    setTimeout(function () {\n      that.handleServerFormValidation();\n      that.handleClientFormValidation();\n      that.handleXClientFormValidation();\n      that.handleXServerFormValidation();\n    }, 1000);\n  }\n\n  /* istanbul ignore next */\n  handleChangeAgentMode(newAgentMode) {\n    let currentAgentForm = Object.assign({}, this.state.agentForm);\n    currentAgentForm.agentMode.value = newAgentMode;\n\n    this.setState({\n      agentForm: currentAgentForm,\n    });\n  }\n\n  /* istanbul ignore next */\n  copyFromServerToClient() {\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n\n    currentClientForm.agentId.value = currentServerForm.agentId.value;\n    currentClientForm.group.value = currentServerForm.group.value;\n    currentClientForm.clientId.value = currentServerForm.clientId.value;\n    currentClientForm.clientSecret.value = currentServerForm.clientSecret.value;\n    currentClientForm.duration.value = currentServerForm.duration.value;\n    currentClientForm.OAuth2.value = currentServerForm.OAuth2.value;\n    currentClientForm.host.value = currentServerForm.host.value;\n    currentClientForm.allowPlugIn.value = currentServerForm.allowPlugIn.value;\n    currentClientForm.plugIn.value = currentServerForm.plugIn.value;\n\n    this.setState({\n      clientForm: currentClientForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from server\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  copyFromClientToServer() {\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n\n    currentServerForm.agentId.value = currentClientForm.agentId.value;\n    currentServerForm.group.value = currentClientForm.group.value;\n    currentServerForm.clientId.value = currentClientForm.clientId.value;\n    currentServerForm.clientSecret.value = currentClientForm.clientSecret.value;\n    currentServerForm.duration.value = currentClientForm.duration.value;\n    currentServerForm.OAuth2.value = currentClientForm.OAuth2.value;\n    currentServerForm.host.value = currentClientForm.host.value;\n    currentServerForm.allowPlugIn.value = currentClientForm.allowPlugIn.value;\n    currentServerForm.plugIn.value = currentClientForm.plugIn.value;\n\n    this.setState({\n      serverForm: currentServerForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from client\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  downloadFile(type) {\n    let prepareData = {};\n    let agentFormData = this.state.agentForm;\n    if (type === \"server\") {\n      let serverFormData = this.state.serverForm;\n      prepareData.mod = serverFormData.mode;\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.gatewayId = agentFormData.gateway.value;\n      prepareData.aid = serverFormData.agentId.value;\n      prepareData.serverId = serverFormData.serverId.value;\n      prepareData.userId = serverFormData.userId.value;\n      prepareData.grp = serverFormData.group.value;\n      prepareData.cid = serverFormData.clientId.value;\n      prepareData.csc = serverFormData.clientSecret.value;\n      prepareData.dur = parseInt(serverFormData.duration.value);\n      prepareData.oa2 = serverFormData.OAuth2.value;\n      prepareData.hst = serverFormData.host.value;\n      prepareData.zon = serverFormData.zone.value;\n      prepareData.cps = 0;\n      prepareData.sst = serverFormData.serviceUrl.value;\n      prepareData.rht = serverFormData.remoteHost.value;\n      prepareData.rpt = serverFormData.remotePort.value;\n      prepareData.proxy = serverFormData.proxy.value;\n      prepareData.plg = serverFormData.allowPlugIn.value;\n      prepareData.hostUrl = serverFormData.host.value;\n      for (let statePlugIn of this.state.plugIns) {\n        if (serverFormData.plugIn.value.indexOf(statePlugIn.id) !== -1) {\n          prepareData[statePlugIn.id] = true;\n        } else {\n          prepareData[statePlugIn.id] = false;\n        }\n      }\n\n      fetch(\n        this.props.baseUrl +\n          \"/updateServer?gateway_id=\" +\n          prepareData.gatewayId +\n          \"&user_id=\" +\n          this.props.userId +\n          \"&server_id=\" +\n          prepareData.serverId,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: this.props.authToken,\n          },\n          body: JSON.stringify(prepareData),\n        }\n      )\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              if (respData.errorStatus.status === \"ok\") {\n                this.props.handleDataTable(true);\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  \"Record updated successfully\",\n                  \"custom-success\"\n                );\n\n                let filename = \"server.yml\";\n                let data =\n                  \"ec-config: \\n\\tconf: \\n\\t\\tmod: \" +\n                  serverFormData.mode.toLowerCase() +\n                  \"\\n\\t\\tzon: \" +\n                  serverFormData.zone.value +\n                  \" \\n\\t\\tgrp: \" +\n                  serverFormData.group.value +\n                  \" \\n\\t\\tsst: \" +\n                  serverFormData.serviceUrl.value +\n                  \" \\n\\t\\thst: \" +\n                  serverFormData.host.value +\n                  \" \\n\\t\\tdbg: \" +\n                  agentFormData.debugMode.value +\n                  \" \\n\\t\\tcid: \" +\n                  serverFormData.clientId.value +\n                  \" \\n\\t\\tcsc: \" +\n                  serverFormData.clientSecret.value +\n                  \" \\n\\t\\toa2: \" +\n                  serverFormData.OAuth2.value +\n                  \" \\n\\t\\tdur: \" +\n                  serverFormData.duration.value +\n                  \" \\n\\t\\taid: \" +\n                  serverFormData.agentId.value +\n                  \" \\n\\t\\trpt: \" +\n                  serverFormData.remotePort.value +\n                  \" \\n\\t\\trht: \" +\n                  serverFormData.remoteHost.value +\n                  \" \\n\\t\\tcps: \" +\n                  0 +\n                  \" \\n\\t\\tplg: \" +\n                  serverFormData.allowPlugIn.value +\n                  \" \\n\\t\\tvln: \" +\n                  prepareData.vln +\n                  \" \\n\\t\\ttls: \" +\n                  prepareData.tls;\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              } else {\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  respData.errorStatus.statusMsg,\n                  \"custom-danger\"\n                );\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              }\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Ooops! There is some error\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"x:server\") {\n      let serverFormData = Object.assign({}, this.state.xserverForm);\n      prepareData.mod = serverFormData.mode.toLowerCase();\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.ecVersion = agentFormData.ecVersion.value;\n      prepareData.grp = serverFormData.group.value;\n      prepareData.cid = serverFormData.clientId.value;\n      prepareData.oa2 = serverFormData.OAuth2.value;\n      prepareData.hst = serverFormData.host.value;\n      prepareData.cps = 0;\n      prepareData.rht = serverFormData.remoteHost.value;\n      prepareData.parent = \"65c77c4f-fdf4-4c6d-a703-48b12cc21b2d\";\n      prepareData.name = \"server\";\n\n      fetch(this.props.baseUrl + \"generateXServerScript\", {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: this.props.authToken,\n        },\n        body: JSON.stringify(prepareData),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /* if(respData.errorStatus.status == 'ok'){ */\n              sessionStorage.setItem(\"ServerData\", JSON.stringify(prepareData));\n              this.props.hideGlobalMessage();\n              // this.props.showModal(modalHeading, respData.data, buttons);\n              setTimeout(() => {\n                let selectedHost = \"\";\n                if (this.state.gateways.length > 0) {\n                  selectedHost = this.state.gateways[0].id;\n                }\n                let serverForm = {\n                  mode: \"X:SERVER\",\n                  group: {\n                    value: serverFormData.group.value,\n                    dirtyState: false,\n                  },\n                  clientId: {\n                    value: serverFormData.clientId.value,\n                    dirtyState: false,\n                  },\n                  OAuth2: {\n                    value: serverFormData.OAuth2.value,\n                    dirtyState: false,\n                  },\n                  host: { value: selectedHost, dirtyState: false },\n                  remoteHost: { value: \"\", dirtyState: false },\n                };\n\n                let filename = \"x:server.yml\";\n                let data = \"\";\n                if (agentFormData.ecVersion.value === \"v1.hokkaido.212\") {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    serverFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    serverFormData.group.value +\n                    \"\\n  hst: \" +\n                    serverFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    serverFormData.clientId.value +\n                    \"\\n   oa2: \" +\n                    serverFormData.OAuth2.value +\n                    \"\\n   rht: \" +\n                    serverFormData.remoteHost.value;\n                } else {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    serverFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    serverFormData.group.value +\n                    \"\\n    hst: \" +\n                    serverFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    serverFormData.clientId.value +\n                    \"\\n    oa2: \" +\n                    serverFormData.OAuth2.value +\n                    \"\\n  rht: \" +\n                    serverFormData.remoteHost.value;\n                }\n\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                this.setState({\n                  xserverForm: serverForm,\n                  xserverFormIsValid: false,\n                });\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"x:client\") {\n      let xClientFormData = Object.assign({}, this.state.xclientForm);\n      prepareData.mod = xClientFormData.mode.toLowerCase();\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.ecVersion = agentFormData.ecVersion.value;\n      prepareData.grp = xClientFormData.group.value;\n      prepareData.cid = xClientFormData.clientId.value;\n      prepareData.oa2 = xClientFormData.OAuth2.value;\n      prepareData.hst = xClientFormData.host.value;\n      prepareData.cps = 0;\n      prepareData.rht = xClientFormData.remoteHost.value;\n      prepareData.parent = \"65c77c4f-fdf4-4c6d-a703-48b12cc21b2d\";\n      prepareData.name = \"server\";\n\n      fetch(this.props.baseUrl + \"generateXCLIENTScript\", {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: this.props.authToken,\n        },\n        body: JSON.stringify(prepareData),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /* if(respData.errorStatus.status == 'ok'){ */\n              sessionStorage.setItem(\"ServerData\", JSON.stringify(prepareData));\n              this.props.hideGlobalMessage();\n              // this.props.showModal(modalHeading, respData.data, buttons);\n              setTimeout(() => {\n                let selectedHost = \"\";\n                if (this.state.gateways.length > 0) {\n                  selectedHost = this.state.gateways[0].id;\n                }\n                let XClientForm = {\n                  mode: \"X:CLIENT\",\n                  group: {\n                    value: xClientFormData.group.value,\n                    dirtyState: false,\n                  },\n                  clientId: {\n                    value: xClientFormData.clientId.value,\n                    dirtyState: false,\n                  },\n                  OAuth2: {\n                    value: xClientFormData.OAuth2.value,\n                    dirtyState: false,\n                  },\n                  host: { value: selectedHost, dirtyState: false },\n                  remoteHost: { value: \"\", dirtyState: false },\n                };\n\n                let filename = \"x:client.yml\";\n                let data = \"\";\n                if (agentFormData.ecVersion.value === \"v1.hokkaido.212\") {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    xClientFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    xClientFormData.group.value +\n                    \"\\n  hst: \" +\n                    xClientFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    xClientFormData.clientId.value +\n                    \"\\n   oa2: \" +\n                    xClientFormData.OAuth2.value +\n                    \"\\n   rht: \" +\n                    xClientFormData.remoteHost.value;\n                } else {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    xClientFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    xClientFormData.group.value +\n                    \"\\n    hst: \" +\n                    xClientFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    xClientFormData.clientId.value +\n                    \"\\n    oa2: \" +\n                    xClientFormData.OAuth2.value +\n                    \"\\n  rht: \" +\n                    xClientFormData.remoteHost.value;\n                }\n\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                this.setState({\n                  xClientFormData: XClientForm,\n                  xclientFormIsValid: false,\n                });\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"client\") {\n      let clientFormData = this.state.clientForm;\n      prepareData.mod = clientFormData.mode;\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.gatewayId = agentFormData.gateway.value;\n      prepareData.aid = clientFormData.agentId.value;\n      prepareData.cid = clientFormData.clientId.value;\n      prepareData.tid = clientFormData.targetId.value;\n      prepareData.grp = clientFormData.group.value;\n      //prepareData.cid = clientFormData.uaaClientId.value;\n      prepareData.csc = clientFormData.clientSecret.value;\n      prepareData.dur = parseInt(clientFormData.duration.value);\n      prepareData.cps = 0;\n      prepareData.oa2 = clientFormData.OAuth2.value;\n      prepareData.hst = clientFormData.host.value;\n      prepareData.lpt = clientFormData.localPort.value;\n      prepareData.tid = clientFormData.targetId.value;\n      prepareData.proxy = clientFormData.proxy.value;\n      prepareData.plg = clientFormData.allowPlugIn.value;\n      for (let statePlugIn of this.state.plugIns) {\n        if (clientFormData.plugIn.value.indexOf(statePlugIn.id) !== -1) {\n          prepareData[statePlugIn.id] = true;\n        } else {\n          prepareData[statePlugIn.id] = false;\n        }\n      }\n      console.log(prepareData);\n\n      fetch(\n        this.props.baseUrl +\n          \"/updateClient?gateway_id=\" +\n          prepareData.gatewayId +\n          \"&user_id=\" +\n          this.props.userId +\n          \"&client_id=\" +\n          prepareData.cid,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: this.props.authToken,\n          },\n          body: JSON.stringify(prepareData),\n        }\n      )\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              if (respData.errorStatus.status === \"ok\") {\n                this.props.handleDataTable(true);\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  \"Record updated successfully\",\n                  \"custom-success\"\n                );\n\n                let filename = \"client.yml\";\n                let data =\n                  \"ec-config: \\n\\tconf: \\n\\t\\tmod: \" +\n                  clientFormData.mode.toLowerCase() +\n                  \"\\n\\t\\taid: \" +\n                  clientFormData.agentId.value +\n                  \" \\n\\t\\ttid: \" +\n                  clientFormData.targetId.value +\n                  \" \\n\\t\\tsst: \" +\n                  \" \\n\\t\\thst: \" +\n                  clientFormData.host.value +\n                  \" \\n\\t\\tcid: \" +\n                  clientFormData.clientId.value +\n                  \" \\n\\t\\tcsc: \" +\n                  clientFormData.clientSecret.value +\n                  \" \\n\\t\\toa2: \" +\n                  clientFormData.OAuth2.value +\n                  \" \\n\\t\\tdur: \" +\n                  clientFormData.duration.value +\n                  \" \\n\\t\\tdbg: \" +\n                  agentFormData.debugMode.value +\n                  \" \\n\\t\\tgrp: \" +\n                  clientFormData.group.value +\n                  \" \\n\\t\\tlpt: \" +\n                  clientFormData.localPort.value +\n                  \" \\n\\t\\tfup: \" +\n                  \"\" +\n                  \" \\n\\t\\tfdw: \" +\n                  \"\" +\n                  \" \\n\\t\\tcps: \" +\n                  0 +\n                  \" \\n\\t\\tplg: \" +\n                  clientFormData.allowPlugIn.value +\n                  \" \\n\\t\\tvln: \" +\n                  prepareData.vln +\n                  \" \\n\\t\\ttls: \" +\n                  prepareData.tls;\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              } else {\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  respData.errorStatus.statusMsg,\n                  \"custom-danger\"\n                );\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              }\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Ooops! there is some error\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  /* istanbul ignore next */\n  handleAgentFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentAgentForm = Object.assign({}, this.state.agentForm);\n\n    if (fieldName === \"gateway\") {\n      currentAgentForm.gateway.value = updatedValue;\n      currentAgentForm.gateway.dirtyState = true;\n    } else if (fieldName === \"debugMode\") {\n      currentAgentForm.debugMode.value = updatedValue;\n      currentAgentForm.debugMode.dirtyState = true;\n    }\n\n    this.setState({\n      agentForm: currentAgentForm,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleClientFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n\n    if (fieldName === \"agentId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentClientForm.agentId.value;\n      }\n      currentClientForm.agentId.value = updatedValue;\n      currentClientForm.agentId.dirtyState = true;\n    } else if (fieldName === \"group\") {\n      currentClientForm.group.value = updatedValue;\n      currentClientForm.group.dirtyState = true;\n    } else if (fieldName === \"clientId\") {\n      currentClientForm.clientId.value = updatedValue;\n      currentClientForm.clientId.dirtyState = true;\n    } else if (fieldName === \"clientSecret\") {\n      currentClientForm.clientSecret.value = updatedValue;\n      currentClientForm.clientSecret.dirtyState = true;\n    } else if (fieldName === \"duration\") {\n      let durationAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentClientForm.duration.value;\n      if (durationAfterValidityCheck.length > 4) {\n        durationAfterValidityCheck = currentClientForm.duration.value;\n      }\n      currentClientForm.duration.value = durationAfterValidityCheck;\n      currentClientForm.duration.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentClientForm.OAuth2.value = updatedValue;\n      currentClientForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentClientForm.host.value = updatedValue;\n      currentClientForm.host.dirtyState = true;\n    } else if (fieldName === \"localPort\") {\n      let localPortAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentClientForm.localPort.value;\n      if (localPortAfterValidityCheck.length > 4) {\n        localPortAfterValidityCheck = currentClientForm.localPort.value;\n      }\n      currentClientForm.localPort.value = localPortAfterValidityCheck;\n      currentClientForm.localPort.dirtyState = true;\n    } else if (fieldName === \"targetId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentClientForm.targetId.value;\n      }\n      currentClientForm.targetId.value = updatedValue;\n      currentClientForm.targetId.dirtyState = true;\n    } else if (fieldName === \"proxy\") {\n      currentClientForm.proxy.value = updatedValue;\n      currentClientForm.proxy.dirtyState = true;\n    } else if (fieldName === \"allowPlugIn\") {\n      currentClientForm.allowPlugIn.value = updatedValue;\n      currentClientForm.allowPlugIn.dirtyState = true;\n    } else if (fieldName === \"plugIn\") {\n      let options = e.target.options;\n      let value = [];\n      for (let i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n      currentClientForm.plugIn.value = value;\n      currentClientForm.plugIn.dirtyState = true;\n    }\n\n    this.setState({\n      clientForm: currentClientForm,\n    });\n\n    this.handleClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleClientFormValidation() {\n    let currentFormData = this.state.clientForm;\n    let agentIdValue = currentFormData.agentId.value;\n    let agentIdDirtyState = currentFormData.agentId.dirtyState;\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let clientSecretValue = currentFormData.clientSecret.value;\n    let clientSecretDirtyState = currentFormData.clientSecret.dirtyState;\n    let durationValue = currentFormData.duration.value;\n    let durationDirtyState = currentFormData.duration.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    let hostValue = currentFormData.host.value;\n    let hostDirtyState = currentFormData.host.dirtyState;\n    let localPortValue = currentFormData.localPort.value;\n    let localPortDirtyState = currentFormData.localPort.dirtyState;\n    let targetIdValue = currentFormData.targetId.value;\n    let targetIdDirtyState = currentFormData.targetId.dirtyState;\n    let allowPlugInValue = currentFormData.allowPlugIn.value;\n    let plugInValue = currentFormData.plugIn.value;\n    let plugInDirtyState = currentFormData.plugIn.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (agentIdValue.trim() === \"\") {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Please enter Agent Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientSecretValue.trim() === \"\") {\n      if (clientSecretDirtyState) {\n        errors.clientSecret = \"Please enter Client Secret\";\n      }\n      formIsValid = false;\n    }\n\n    if (durationValue === \"\") {\n      if (durationDirtyState) {\n        errors.duration = \"Please enter Duration in digit\";\n      }\n      formIsValid = false;\n    } else if (durationValue < 1200) {\n      if (durationDirtyState) {\n        errors.duration = \"Duration at least 1200\";\n      }\n      formIsValid = false;\n    }\n\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    if (hostValue.trim() === \"\") {\n      if (hostDirtyState) {\n        errors.host = \"Please enter Host\";\n      }\n      formIsValid = false;\n    } else if (\n      hostValue.substr(0, 6) !== \"wss://\" &&\n      hostValue.substr(0, 5) !== \"ws://\"\n    ) {\n      if (hostDirtyState) {\n        errors.host = \"Host starts with wss:// or ws://\";\n      }\n      formIsValid = false;\n    } else if (hostValue.substr(hostValue.length - 6, 6) !== \"/agent\") {\n      if (hostDirtyState) {\n        errors.host = \"Host ends with /agent\";\n      }\n      formIsValid = false;\n    }\n\n    if (localPortValue.trim() === \"\") {\n      if (localPortDirtyState) {\n        errors.localPort = \"Please enter Local Port in digit\";\n      }\n      formIsValid = false;\n    } else if (localPortValue.length !== 4) {\n      if (localPortDirtyState) {\n        errors.localPort = \"Local Port must have 4 digit\";\n      }\n      formIsValid = false;\n    }\n\n    if (targetIdValue.trim() === \"\") {\n      if (targetIdDirtyState) {\n        errors.targetId = \"Please enter Target Id\";\n      }\n      formIsValid = false;\n    } else if (targetIdValue.length < 6) {\n      if (targetIdDirtyState) {\n        errors.targetId = \"Target Id must have 6 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (allowPlugInValue) {\n      if (plugInValue.length === 0) {\n        if (plugInDirtyState) {\n          errors.plugIn = \"Please select Plug-In\";\n        }\n        formIsValid = false;\n      }\n    }\n\n    this.setState({\n      clientFormIsValid: formIsValid,\n      errorsClientForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleServerFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n\n    if (fieldName === \"agentId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentServerForm.agentId.value;\n      }\n      currentServerForm.agentId.value = updatedValue;\n      currentServerForm.agentId.dirtyState = true;\n    } else if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"clientSecret\") {\n      currentServerForm.clientSecret.value = updatedValue;\n      currentServerForm.clientSecret.dirtyState = true;\n    } else if (fieldName === \"duration\") {\n      let durationAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentServerForm.duration.value;\n      if (durationAfterValidityCheck.length > 4) {\n        durationAfterValidityCheck = currentServerForm.duration.value;\n      }\n      currentServerForm.duration.value = durationAfterValidityCheck;\n      currentServerForm.duration.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"zone\") {\n      if (updatedValue.length > 36) {\n        updatedValue = currentServerForm.zone.value;\n      }\n      currentServerForm.zone.value = updatedValue;\n      currentServerForm.zone.dirtyState = true;\n    } else if (fieldName === \"serviceUrl\") {\n      currentServerForm.serviceUrl.value = updatedValue;\n      currentServerForm.serviceUrl.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    } else if (fieldName === \"remotePort\") {\n      let remotePortAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentServerForm.remotePort.value;\n      if (remotePortAfterValidityCheck.length > 4) {\n        remotePortAfterValidityCheck = currentServerForm.remotePort.value;\n      }\n      currentServerForm.remotePort.value = remotePortAfterValidityCheck;\n      currentServerForm.remotePort.dirtyState = true;\n    } else if (fieldName === \"proxy\") {\n      currentServerForm.proxy.value = updatedValue;\n      currentServerForm.proxy.dirtyState = true;\n    } else if (fieldName === \"allowPlugIn\") {\n      currentServerForm.allowPlugIn.value = updatedValue;\n      currentServerForm.allowPlugIn.dirtyState = true;\n    } else if (fieldName === \"plugIn\") {\n      let options = e.target.options;\n      let value = [];\n      for (let i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n      currentServerForm.plugIn.value = value;\n      currentServerForm.plugIn.dirtyState = true;\n    }\n\n    this.setState({\n      serverForm: currentServerForm,\n    });\n\n    this.handleServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleServerFormValidation() {\n    let currentFormData = this.state.serverForm;\n    let agentIdValue = currentFormData.agentId.value;\n    let agentIdDirtyState = currentFormData.agentId.dirtyState;\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let clientSecretValue = currentFormData.clientSecret.value;\n    let clientSecretDirtyState = currentFormData.clientSecret.dirtyState;\n    let durationValue = currentFormData.duration.value;\n    let durationDirtyState = currentFormData.duration.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    let hostValue = currentFormData.host.value;\n    let hostDirtyState = currentFormData.host.dirtyState;\n    let zoneValue = currentFormData.zone.value;\n    let zoneDirtyState = currentFormData.zone.dirtyState;\n    let serviceUrlValue = currentFormData.serviceUrl.value;\n    let serviceUrlDirtyState = currentFormData.serviceUrl.dirtyState;\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let remotePortValue = currentFormData.remotePort.value;\n    let remotePortDirtyState = currentFormData.remotePort.dirtyState;\n    let allowPlugInValue = currentFormData.allowPlugIn.value;\n    \n    let plugInValue = currentFormData.plugIn.value;\n    let plugInDirtyState = currentFormData.plugIn.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (agentIdValue.trim() === \"\") {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Please enter Agent Id\";\n      }\n      formIsValid = false;\n    } else if (agentIdValue.length < 6) {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Agent Id must have 6 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientSecretValue.trim() === \"\") {\n      if (clientSecretDirtyState) {\n        errors.clientSecret = \"Please enter Client Secret\";\n      }\n      formIsValid = false;\n    }\n\n    if (durationValue === \"\") {\n      if (durationDirtyState) {\n        errors.duration = \"Please enter Duration in digit\";\n      }\n      formIsValid = false;\n    } else if (durationValue < 1200) {\n      if (durationDirtyState) {\n        errors.duration = \"Duration at least 1200\";\n      }\n      formIsValid = false;\n    }\n\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    if (hostValue.trim() === \"\") {\n      if (hostDirtyState) {\n        errors.host = \"Please enter Host\";\n      }\n      formIsValid = false;\n    } else if (\n      hostValue.substr(0, 6) !== \"wss://\" &&\n      hostValue.substr(0, 5) !== \"ws://\"\n    ) {\n      if (hostDirtyState) {\n        errors.host = \"Host starts with wss:// or ws://\";\n      }\n      formIsValid = false;\n    } else if (hostValue.substr(hostValue.length - 6, 6) !== \"/agent\") {\n      if (hostDirtyState) {\n        errors.host = \"Host ends with /agent\";\n      }\n      formIsValid = false;\n    }\n\n    if (zoneValue.trim() === \"\") {\n      if (zoneDirtyState) {\n        errors.zone = \"Please enter Zone\";\n      }\n      formIsValid = false;\n    } else if (zoneValue.length < 36) {\n      if (zoneDirtyState) {\n        errors.zone = \"Zone must have 36 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (serviceUrlValue.trim() === \"\") {\n      if (serviceUrlDirtyState) {\n        errors.serviceUrl = \"Please enter Service-Url\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(serviceUrlValue)) {\n      if (serviceUrlDirtyState) {\n        errors.serviceUrl = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n\n    if (remotePortValue.trim() === \"\") {\n      if (remotePortDirtyState) {\n        errors.remotePort = \"Please enter Remote Port in digit\";\n      }\n      formIsValid = false;\n    } else if (remotePortValue.length !== 4) {\n      if (remotePortDirtyState) {\n        errors.remotePort = \"Remote Port must have 4 digit\";\n      }\n      formIsValid = false;\n    }\n\n    if (allowPlugInValue) {\n      if (plugInValue.length === 0) {\n        if (plugInDirtyState) {\n          errors.plugIn = \"Please select Plug-In\";\n        }\n        formIsValid = false;\n      }\n    }\n\n    this.setState({\n      serverFormIsValid: formIsValid,\n      errorsServerForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  copyFromXServerToXClient() {\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n    let currentClientForm = Object.assign({}, this.state.xclientForm);\n\n    currentClientForm.group.value = currentServerForm.group.value;\n    currentClientForm.clientId.value = currentServerForm.clientId.value;\n    currentClientForm.OAuth2.value = currentServerForm.OAuth2.value;\n    currentClientForm.host.value = currentServerForm.host.value;\n\n    this.setState({\n      xclientForm: currentClientForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from x:server\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleXClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  copyFromXClientToXServer() {\n    let currentClientForm = Object.assign({}, this.state.xclientForm);\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n\n    currentServerForm.group.value = currentClientForm.group.value;\n    currentServerForm.clientId.value = currentClientForm.clientId.value;\n    currentServerForm.OAuth2.value = currentClientForm.OAuth2.value;\n    currentServerForm.host.value = currentClientForm.host.value;\n\n    this.setState({\n      xserverForm: currentServerForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from x:client\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleXServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXServerFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n\n    if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n      //  this.changeAidForServer(updatedValue);\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    }\n\n    this.setState({\n      xserverForm: currentServerForm,\n    });\n\n    this.handleXServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXServerFormValidation() {\n    let currentFormData = this.state.xserverForm;\n\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    /* let hostValue = currentFormData.host.value;\n    let hostDirtyState = currentFormData.host.dirtyState; */\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      xserverFormIsValid: formIsValid,\n      errorsXServerForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleXClientFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.xclientForm);\n\n    if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n      //  this.changeAidForServer(updatedValue);\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    }\n\n    this.setState({\n      xclientForm: currentServerForm,\n    });\n\n    this.handleXClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXClientFormValidation() {\n    let currentFormData = this.state.xclientForm;\n\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    let hostValue = currentFormData.host.value;\n    let hostDirtyState = currentFormData.host.dirtyState;\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      xclientFormIsValid: formIsValid,\n      errorsXClientForm: errors,\n    });\n  }\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div className=\"row Maintainagentcreate\">\n        <div className=\"col-md-12 mt-2\">\n          <div className=\"row\">\n            <div className=\"text-left\">\n              <ul className=\"breadcrumb\">\n                <li className=\"breadcrumb-item active\">Maintain</li>\n                <li className=\"breadcrumb-item active\">Edit Agent</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"centered-div\">\n            <div className=\"centered-div-header\">\n              <div className=\"row maintainagentcreate-header\">\n                <div className=\"col-md-12\">\n                  <h6>\n                    Edit Agent <small>Creating parameters.</small>\n                  </h6>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"row form-body\">\n                <div className=\"col-sm-4\">\n                  <h6>Agent Mode</h6>\n                  <div className=\"col-sm-12 mb-2\">\n                    {this.state.agentModeButtons.map(\n                      (agentModeButton, buttonIndex) => {\n                        return agentModeButton.value ==\n                          this.state.agentForm.agentMode.value ? (\n                          <button\n                            key={\"agentModeButton\" + buttonIndex}\n                            type=\"button\"\n                            name=\"agentMode\"\n                            className={\n                              agentModeButton.value ==\n                              this.state.agentForm.agentMode.value\n                                ? \"btn btn-sm mr-2 btn-selected\"\n                                : \"btn btn-sm mr-2 btn-deselected\"\n                            }\n                            onClick={this.handleChangeAgentMode.bind(\n                              this,\n                              agentModeButton.value\n                            )}\n                            disabled={\n                              agentModeButton.value !=\n                              this.state.agentForm.agentMode.value\n                            }\n                          >\n                            {agentModeButton.text}\n                          </button>\n                        ) : null;\n                      }\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-sm-4\">\n                  <h6>&nbsp;</h6>\n                  <div className=\"custom-control custom-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input custom-control-checkbox\"\n                      id=\"debugMode\"\n                      name=\"debugMode\"\n                      checked={this.state.agentForm.debugMode.value}\n                      onChange={(event) => {\n                        this.handleAgentFormData(event);\n                      }}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"debugMode\">\n                      <small className=\"theme-color\">\n                        <strong>DEBUG MODE ENABLED</strong>\n                      </small>\n                    </label>\n                  </div>\n                </div>\n                {this.state.agentForm.agentMode.value !== 1 ? (\n                  <div className=\"col-sm-3\">\n                    <h6>&nbsp;</h6>\n                    <select\n                      className=\"form-control form-control-sm\"\n                      name=\"gateway\"\n                      value={this.state.agentForm.gateway.value}\n                      onChange={(event) => {\n                        this.handleAgentFormData(event);\n                      }}\n                    >\n                      {this.state.gateways.map((gateway, gatewayIndex) => {\n                        return (\n                          <option\n                            key={\"gatewayOption\" + gatewayIndex}\n                            value={gateway.gatewayId}\n                          >\n                            {gateway.gatewayId}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                ) : null}\n              </div>\n              <hr></hr>\n              {this.state.agentForm.agentMode.value === 2 ? (\n                <div className=\"changeable-form server-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.serverForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Agent ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"agentId\"\n                          value={this.state.serverForm.agentId.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"agentId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.serverForm.group.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.serverForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client Secret{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientSecret\"\n                          value={this.state.serverForm.clientSecret.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"clientSecret\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Duration{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"duration\"\n                          value={this.state.serverForm.duration.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"duration\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.serverForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.serverForm.host.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Zone <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"zone\"\n                          value={this.state.serverForm.zone.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"zone\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Service URL{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"serviceUrl\"\n                          value={this.state.serverForm.serviceUrl.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"serviceUrl\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.serverForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Port{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remotePort\"\n                          value={this.state.serverForm.remotePort.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"remotePort\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">Proxy</div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"proxy\"\n                          value={this.state.serverForm.proxy.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Allow Plug-in{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <div className=\"custom-control custom-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input custom-control-checkbox\"\n                            id=\"allowPlugIn\"\n                            name=\"allowPlugIn\"\n                            checked={this.state.serverForm.allowPlugIn.value}\n                            onChange={(event) => {\n                              this.handleServerFormData(event);\n                            }}\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"allowPlugIn\"\n                          ></label>\n                        </div>\n                      </div>\n                    </div>\n                    {this.state.serverForm.allowPlugIn.value ? (\n                      <div className=\"col-sm-3\">\n                        <div className=\"col-sm-12 label\">\n                          Plug-in{\" \"}\n                          <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                        </div>\n                        <div className=\"col-sm-12 mb-2\">\n                          <select\n                            multiple\n                            className=\"form-control form-control-sm\"\n                            style={{ height: \"45px\" }}\n                            name=\"plugIn\"\n                            value={this.state.serverForm.plugIn.value}\n                            onChange={(event) => {\n                              this.handleServerFormData(event);\n                            }}\n                          >\n                            {this.state.plugIns.map((plugIn, plugInIndex) => {\n                              return (\n                                <option\n                                  key={\"plugInOption\" + plugInIndex}\n                                  value={plugIn.id}\n                                >\n                                  {plugIn.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                          <small className=\"text-danger\">\n                            {this.state.errorsServerForm[\"plugIn\"]}\n                          </small>\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      {/*<img alt=\"copy\" src=\"assets/static/images/copy.svg\" height=\"15px\" />\n                                            <a onClick={this.copyFromClientToServer.bind(this)} href=\"#\" className=\"theme-color cursor-pointer ml-1\"><small>Copy details from client</small></a>*/}\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        disabled={!this.state.serverFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"server\")}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        CREATE SCRIPT\n                      </button>\n                      <button\n                        onClick={this.props.changeView.bind(this)}\n                        className=\"btn btn-sm customize-view-btn ml-2\"\n                      >\n                        BACK\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 3 ? (\n                <div className=\"changeable-form client-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.clientForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Agent ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"agentId\"\n                          value={this.state.clientForm.agentId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"agentId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.clientForm.group.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.clientForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client Secret{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientSecret\"\n                          value={this.state.clientForm.clientSecret.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"clientSecret\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Duration{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"duration\"\n                          value={this.state.clientForm.duration.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"duration\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.clientForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.clientForm.host.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Local Port{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"localPort\"\n                          value={this.state.clientForm.localPort.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"localPort\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Target ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"targetId\"\n                          value={this.state.clientForm.targetId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"targetId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">Proxy</div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"proxy\"\n                          value={this.state.clientForm.proxy.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Allow Plug-in{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <div className=\"custom-control custom-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input custom-control-checkbox\"\n                            id=\"allowPlugIn\"\n                            name=\"allowPlugIn\"\n                            checked={this.state.clientForm.allowPlugIn.value}\n                            onChange={(event) => {\n                              this.handleClientFormData(event);\n                            }}\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"allowPlugIn\"\n                          ></label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    {this.state.clientForm.allowPlugIn.value ? (\n                      <div className=\"col-sm-3\">\n                        <div className=\"col-sm-12 label\">\n                          Plug-in\n                          <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                        </div>\n                        <div className=\"col-sm-12 mb-2\">\n                          <select\n                            multiple\n                            className=\"form-control form-control-sm\"\n                            style={{ height: \"45px\" }}\n                            name=\"plugIn\"\n                            value={this.state.clientForm.plugIn.value}\n                            onChange={(event) => {\n                              this.handleClientFormData(event);\n                            }}\n                          >\n                            {this.state.plugIns.map((plugIn, plugInIndex) => {\n                              return (\n                                <option\n                                  key={\"plugInOption\" + plugInIndex}\n                                  value={plugIn.id}\n                                >\n                                  {plugIn.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                          <small className=\"text-danger\">\n                            {this.state.errorsClientForm[\"plugIn\"]}\n                          </small>\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      {/*<img alt=\"copy\" src=\"assets/static/images/copy.svg\" height=\"15px\" />\n                                            <a onClick={this.copyFromServerToClient.bind(this)} href=\"#\" className=\"theme-color cursor-pointer ml-1\"><small>Copy details from server</small></a>*/}\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        disabled={!this.state.clientFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"client\")}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        CREATE SCRIPT\n                      </button>\n                      <button\n                        onClick={this.props.changeView.bind(this)}\n                        className=\"btn btn-sm customize-view-btn ml-2\"\n                      >\n                        BACK\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 4 ? (\n                <div className=\"changeable-form x-server-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.xserverForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.xserverForm.group.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        >\n                          {this.state.groups.map((group, groupIndex) => {\n                            return (\n                              <option\n                                key={\"groupOption\" + groupIndex}\n                                value={group.groupId}\n                              >\n                                {group.groupId}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.xserverForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.xserverForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.xserverForm.host.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        >\n                          {this.state.gateways.map((gateway, gatewayIndex) => {\n                            return (\n                              <option\n                                key={\"gatewayOption\" + gatewayIndex}\n                                value={gateway.id}\n                              >\n                                {gateway.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.xserverForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      <img alt=\"copy\" src={CopyImg} height=\"15px\" />\n                      <a\n                        onClick={this.copyFromXClientToXServer.bind(this)}\n                        href=\"#\"\n                        className=\"theme-color cursor-pointer ml-1\"\n                      >\n                        <small>Copy details from x:client</small>\n                      </a>\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        id=\"create-client-btn\"\n                        disabled={!this.state.xserverFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"x:server\")}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        CREATE SCRIPT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 5 ? (\n                <div className=\"changeable-form x-client-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.xclientForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.xclientForm.group.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        >\n                          {this.state.groups.map((group, groupIndex) => {\n                            return (\n                              <option\n                                key={\"groupOption\" + groupIndex}\n                                value={group.groupId}\n                              >\n                                {group.groupId}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.xclientForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.xclientForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.xclientForm.host.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        >\n                          {this.state.gateways.map((gateway, gatewayIndex) => {\n                            return (\n                              <option\n                                key={\"gatewayOption\" + gatewayIndex}\n                                value={gateway.id}\n                              >\n                                {gateway.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.xclientForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      <img alt=\"copy\" src={CopyImg} height=\"15px\" />\n                      <a\n                        onClick={this.copyFromXServerToXClient.bind(this)}\n                        href=\"#\"\n                        className=\"theme-color cursor-pointer ml-1\"\n                      >\n                        <small>Copy details from x:server</small>\n                      </a>\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        id=\"create-client-btn\"\n                        disabled={!this.state.xclientFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"x:client\")}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        CREATE SCRIPT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n","import React from \"react\";\nimport $ from \"jquery\";\nimport Maintainagentedit from \"./Maintainagentedit.js\";\n\n//assets/static/images/icon_arrowmore.svg\nimport IconArrowMore from \"../assets/images/icon_arrowmore.svg\";\nimport IconEdit from \"../assets/images/iconedit_tablemaintainmonitor.svg\";\nimport IconDelete from \"../assets/images/icondelete_tablemaintainmonitor.svg\";\nimport Rolling from \"../assets/images/rolling.svg\";\n\nexport default class Maintainagentupgrade extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: [],\n      newTableData: [],\n      viewTable: true,\n      editItemData: {},\n      searchString: \"\",\n      showTableInit: false,\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    this.handleDataTable(false);\n  }\n\n  /* istanbul ignore next */\n  handleDataTable(preserveState) {\n    let technicalTableData = [];\n    fetch(\"https://reqres.in/api/users/2\", {\n      //this.props.baseUrl + '/listGateways?user_id=' + this.props.userId, { // Get gateways this.props.baseUrl+'/listGateways?user_id='+this.props.userId\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.authToken,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then((respData) => {\n          let gateways = respData.data;\n          if (gateways === null) {\n            gateways = [];\n          }\n\n          if (gateways.length > 0) {\n            /* istanbul ignore next */\n            for (let gateway of gateways) {\n              /* istanbul ignore next */\n              let prepareData = {};\n              prepareData.agent_id = \"\";\n              prepareData.serverId = \"\";\n              prepareData.clientId = \"\";\n              prepareData.gatewayId = gateway.gatewayId;\n              prepareData.targetId = \"\";\n              prepareData.userId = gateway.userId;\n              prepareData.uaaClientId = \"\";\n              prepareData.uaaClientSecret = \"\";\n              prepareData.duration = \"\";\n              prepareData.gateway = gateway.hostUrl;\n              prepareData.hostUrl = gateway.hostUrl;\n              prepareData.localPort = \"\";\n              prepareData.group = \"\";\n              prepareData.oauth_provider = \"\";\n              prepareData.zone = gateway.zone;\n              prepareData.subscription = gateway.gatewayId;\n              prepareData.remote_port = \"\";\n              prepareData.remote_host = \"\";\n              prepareData.agentMode = \"1\";\n              prepareData.environment = gateway.env;\n              prepareData.gatewayPort = gateway.gatewayPort;\n              prepareData.serviceUrl = gateway.serviceUrl;\n              prepareData.admToken = gateway.admToken;\n              technicalTableData.push(prepareData);\n            }\n          }\n\n          fetch(\"https://reqres.in/api/users/2\", {\n            //this.props.baseUrl + '/listServers?user_id=' + this.props.userId, { // Get gateways this.props.baseUrl+'/listGateways?user_id='+this.props.userId\n            method: \"GET\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: this.props.authToken,\n            },\n          }).then((response) => {\n            if (response.status === 200) {\n              response.json().then((respData) => {\n                let servers = respData.data;\n                if (servers === null) {\n                  servers = [];\n                }\n\n                if (servers.length > 0) {\n                  for (let server of servers) {\n                    let prepareData = {};\n                    prepareData.agent_id = server.agentId;\n                    prepareData.serverId = server.serverId;\n                    prepareData.gatewayId = server.gatewayId;\n                    prepareData.clientId = \"\";\n                    prepareData.userId = server.userId;\n                    prepareData.targetId = \"\";\n                    prepareData.uaaClientId = server.uaaClientId;\n                    prepareData.uaaClientSecret = server.uaaClientSecret;\n                    prepareData.duration = server.duration.toString();\n                    prepareData.gateway = server.hostUrl;\n                    prepareData.hostUrl = server.hostUrl;\n                    prepareData.localPort = \"\";\n                    prepareData.group = server.groupId;\n                    prepareData.oauth_provider = server.uaaUrl;\n                    prepareData.zone = server.zone;\n                    prepareData.subscription = server.serverId;\n                    prepareData.remote_port = server.remotePort;\n                    prepareData.remote_host = server.remoteHost;\n                    prepareData.agentMode = \"2\";\n                    prepareData.environment = \"\";\n                    prepareData.gatewayPort = \"\";\n                    prepareData.serviceUrl = server.serviceUrl;\n                    prepareData.admToken = \"\";\n                    technicalTableData.push(prepareData);\n                  }\n                }\n\n                fetch(\"https://reqres.in/api/users/2\", {\n                  //this.props.baseUrl + '/listClients?user_id=' + this.props.userId, { // Get gateways this.props.baseUrl+'/listGateways?user_id='+this.props.userId\n                  method: \"GET\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization: this.props.authToken,\n                  },\n                }).then((response) => {\n                  if (response.status === 200) {\n                    response.json().then((respData) => {\n                      let clients = [\n                        {\n                          agent_id: \"OicLas512\",\n                          serverId: \"\",\n                          clientId: \"PiLsac12a\",\n                          userId: \"Qasorse\",\n                          gatewayId: \"gateway-312312a21\",\n                          targetId: \"targetId\",\n                          uaaClientId: \"uaaClientId\",\n                          uaaClientSecret: \"uaaClientSecret\",\n                          duration: \"duration\",\n                          gateway: \"hostUrl\",\n                          hostUrl: \"wss://gateway-uri/agent\",\n                          localPort: \"localPort\",\n                          group: \"groupId\",\n                          oauth_provider: \"uaaUrl\",\n                          zone: \"licenseid\",\n                          subscription: \"clientId\",\n                          remote_port: \"8080\",\n                          remote_host: \"wss://gateway-uri/agent\",\n                          agentMode: \"3\",\n                          environment: \"AWS\",\n                          gatewayPort: \"CF\",\n                          serviceUrl: \"\",\n                          admToken: \"adwqiwqeqwkasdqw\",\n                        },\n                        {\n                          agent_id: \"FicLas51qw\",\n                          serverId: \"\",\n                          clientId: \"LsiLsac12a\",\n                          userId: \"Qasorse\",\n                          gatewayId: \"gateway-312312a21\",\n                          targetId: \"targetId2\",\n                          uaaClientId: \"uaaClientId2\",\n                          uaaClientSecret: \"uaaClientSecret2\",\n                          duration: \"duration\",\n                          gateway: \"hostUrl\",\n                          hostUrl: \"wss://gateway-uri/agent2\",\n                          localPort: \"localPort2\",\n                          group: \"groupId2\",\n                          oauth_provider: \"uaaUrl2\",\n                          zone: \"licenseid\",\n                          subscription: \"clientId\",\n                          remote_port: \"8080\",\n                          remote_host: \"wss://gateway-uri/agent2\",\n                          agentMode: \"3\",\n                          environment: \"AWS\",\n                          gatewayPort: \"CF\",\n                          serviceUrl: \"\",\n                          admToken: \"adwqiwqeqwkasdqw\",\n                        },\n                      ];\n                      if (clients === null) {\n                        clients = [];\n                      }\n\n                      for (let client of clients) {\n                        let prepareData = {};\n                        prepareData.agent_id = client.agentId;\n                        prepareData.serverId = \"\";\n                        prepareData.clientId = client.clientId;\n                        prepareData.userId = client.userId;\n                        prepareData.gatewayId = client.gatewayId;\n                        prepareData.targetId = client.targetId;\n                        prepareData.uaaClientId = client.uaaClientId;\n                        prepareData.uaaClientSecret = client.uaaClientSecret;\n                        prepareData.duration = client.duration.toString();\n                        prepareData.gateway = client.hostUrl;\n                        prepareData.hostUrl = client.hostUrl;\n                        prepareData.localPort = client.localPort;\n                        prepareData.group = client.groupId;\n                        prepareData.oauth_provider = client.oauth_provider;\n                        prepareData.zone = client.zone;\n                        prepareData.subscription = client.subscription;\n                        prepareData.remote_port = client.remote_port;\n                        prepareData.remote_host = client.remote_host;\n                        prepareData.agentMode = \"3\";\n                        prepareData.environment = client.environment;\n                        prepareData.gatewayPort = client.gatewayPort;\n                        prepareData.serviceUrl = client.serviceUrl;\n                        prepareData.admToken = \"\";\n                        technicalTableData.push(prepareData);\n                      }\n                      this.generateTableStructure(\n                        technicalTableData,\n                        preserveState\n                      );\n                      this.setState({\n                        tableData: technicalTableData,\n                      });\n                    });\n                  } else {\n                    //this.showGlobalMessage('Oops! There is an error', 'alert-danger');\n                    //console.log('Looks like there was a problem. Status Code: ' + response.status);\n                    //this.showAjaxBusy(false);\n                  }\n                });\n              });\n            } else {\n              //this.showGlobalMessage('Oops! There is an error', 'alert-danger');\n              //console.log('Looks like there was a problem. Status Code: ' + response.status);\n              //this.showAjaxBusy(false);\n            }\n          });\n        });\n      } else {\n        //this.showGlobalMessage('Oops! There is an error', 'alert-danger');\n        //console.log('Looks like there was a problem. Status Code: ' + response.status);\n        //this.showAjaxBusy(false);\n      }\n    });\n  }\n\n  initTable(tableId, preserveState) {\n    var pageLength = 5;\n    let tableWidth = 0;\n    tableWidth = $(\"#maintainagentupgradeTableDiv\")[0].offsetWidth - 200;\n    $(\"#\" + tableId).DataTable({\n      dom: 'rt<\"bottom\"lp>',\n      bSort: true,\n      scrollX: true,\n      language: {\n        paginate: {\n          previous: \"<\",\n          next: \">\",\n        },\n      },\n      createdRow: function (row, data, dataIndex) {\n        for (let i = 0; i < data.length; i++) {\n          $(\"td:eq(\" + i + \")\", row).css(\n            \"min-width\",\n            tableWidth / data.length + \"px\"\n          );\n        }\n      },\n      pageLength: pageLength,\n      stateSave: preserveState,\n      destroy: true,\n      fnDrawCallback: function (oSettings) {\n        if (oSettings.aiDisplay.length <= pageLength) {\n          $(\".dataTables_paginate\").hide();\n        } else {\n          $(\".dataTables_paginate\").show();\n        }\n      },\n    });\n    $(\".bottom\").addClass(\"row\");\n    $(\".dataTables_length\").addClass(\"col-sm-6\");\n    $(\".dataTables_paginate\").addClass(\"col-sm-6\");\n  }\n\n  /* istanbul ignore next */\n  generateTableStructure(technicalTableData, preserveState) {\n    let tableData = technicalTableData;\n    let newTableData = [];\n    for (let dataObj of tableData) {\n      let newDataObj = {};\n      newDataObj.agent_id = dataObj.agent_id;\n      newDataObj.serverId = dataObj.serverId;\n      newDataObj.clientId = dataObj.clientId;\n      newDataObj.userId = dataObj.userId;\n      newDataObj.gatewayId = dataObj.gatewayId;\n      newDataObj.targetId = dataObj.targetId;\n      newDataObj.agentMode = dataObj.agentMode;\n      newDataObj.uaaClientId = dataObj.uaaClientId;\n      newDataObj.uaaClientSecret = dataObj.uaaClientSecret;\n      newDataObj.localPort = dataObj.localPort;\n      newDataObj.duration = dataObj.duration;\n      newDataObj.group = dataObj.group;\n      newDataObj.environment = dataObj.environment;\n      newDataObj.gatewayPort = dataObj.gatewayPort;\n      newDataObj.serviceUrl = dataObj.serviceUrl;\n      newDataObj.admToken = dataObj.admToken;\n      newDataObj.hostUrl = dataObj.hostUrl;\n      if (dataObj.gateway.length > 10) {\n        newDataObj.gateway = dataObj.gateway.substr(0, 10);\n        newDataObj.gatewayHidden = dataObj.gateway;\n        newDataObj.gatewayHiddenFlag = true;\n      } else {\n        newDataObj.gateway = dataObj.gateway;\n        newDataObj.gatewayHiddenFlag = false;\n      }\n\n      if (dataObj.oauth_provider.length > 10) {\n        newDataObj.oauth_provider = dataObj.oauth_provider.substr(0, 10);\n        newDataObj.oauth_providerHidden = dataObj.oauth_provider;\n        newDataObj.oauth_providerHiddenFlag = true;\n      } else {\n        newDataObj.oauth_provider = dataObj.oauth_provider;\n        newDataObj.oauth_providerHiddenFlag = false;\n      }\n\n      if (dataObj.zone.length > 10) {\n        newDataObj.zone = dataObj.zone.substr(0, 10);\n        newDataObj.zoneHidden = dataObj.zone;\n        newDataObj.zoneHiddenFlag = true;\n      } else {\n        newDataObj.zone = dataObj.zone;\n        newDataObj.zoneHiddenFlag = false;\n      }\n\n      if (dataObj.subscription.length > 10) {\n        newDataObj.subscription = dataObj.subscription.substr(0, 10);\n        newDataObj.subscriptionHidden = dataObj.subscription;\n        newDataObj.subscriptionHiddenFlag = true;\n      } else {\n        newDataObj.subscription = dataObj.subscription;\n        newDataObj.subscriptionHiddenFlag = false;\n      }\n\n      if (dataObj.remote_host.length > 10) {\n        newDataObj.remote_host = dataObj.remote_host.substr(0, 10);\n        newDataObj.remote_hostHidden = dataObj.remote_host;\n        newDataObj.remote_hostHiddenFlag = true;\n      } else {\n        newDataObj.remote_host = dataObj.remote_host;\n        newDataObj.remote_hostHiddenFlag = false;\n      }\n\n      if (dataObj.remote_port.length > 10) {\n        newDataObj.remote_port = dataObj.remote_port.substr(0, 10);\n        newDataObj.remote_portHidden = dataObj.remote_port;\n        newDataObj.remote_portHiddenFlag = true;\n      } else {\n        newDataObj.remote_port = dataObj.remote_port;\n        newDataObj.remote_portHiddenFlag = false;\n      }\n\n      newTableData.push(newDataObj);\n    }\n\n    this.setState({\n      newTableData: newTableData,\n      showTableInit: true,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"maintainagentupgradeTable\", preserveState);\n    }, 100);\n  }\n\n  /* istanbul ignore next */\n  componentDidUpdate() {\n    //this.initTable('maintainagentupgradeTable');\n  }\n\n  /* istanbul ignore next */\n  showHideTableTdData(objectIndex, fieldName) {\n    let newTableData = [...this.state.newTableData];\n    let copiedObjectToChange = Object.assign({}, newTableData[objectIndex]);\n    if (fieldName === \"gateway\") {\n      let tempValue = copiedObjectToChange.gateway;\n      copiedObjectToChange.gateway = copiedObjectToChange.gatewayHidden;\n      copiedObjectToChange.gatewayHidden = tempValue;\n      copiedObjectToChange.gatewayHiddenFlag =\n        !copiedObjectToChange.gatewayHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"oauth_provider\") {\n      let tempValue = copiedObjectToChange.oauth_provider;\n      copiedObjectToChange.oauth_provider =\n        copiedObjectToChange.oauth_providerHidden;\n      copiedObjectToChange.oauth_providerHidden = tempValue;\n      copiedObjectToChange.oauth_providerHiddenFlag =\n        !copiedObjectToChange.oauth_providerHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"zone\") {\n      let tempValue = copiedObjectToChange.zone;\n      copiedObjectToChange.zone = copiedObjectToChange.zoneHidden;\n      copiedObjectToChange.zoneHidden = tempValue;\n      copiedObjectToChange.zoneHiddenFlag =\n        !copiedObjectToChange.zoneHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"subscription\") {\n      let tempValue = copiedObjectToChange.subscription;\n      copiedObjectToChange.subscription =\n        copiedObjectToChange.subscriptionHidden;\n      copiedObjectToChange.subscriptionHidden = tempValue;\n      copiedObjectToChange.subscriptionHiddenFlag =\n        !copiedObjectToChange.subscriptionHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"remote_host\") {\n      let tempValue = copiedObjectToChange.remote_host;\n      copiedObjectToChange.remote_host = copiedObjectToChange.remote_hostHidden;\n      copiedObjectToChange.remote_hostHidden = tempValue;\n      copiedObjectToChange.remote_hostHiddenFlag =\n        !copiedObjectToChange.remote_hostHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"remote_port\") {\n      let tempValue = copiedObjectToChange.remote_port;\n      copiedObjectToChange.remote_port = copiedObjectToChange.remote_portHidden;\n      copiedObjectToChange.remote_portHidden = tempValue;\n      copiedObjectToChange.remote_portHiddenFlag =\n        !copiedObjectToChange.remote_portHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    }\n\n    this.setState({\n      newTableData: newTableData,\n    });\n  }\n\n  /* istanbul ignore next */\n  filterByValue(array, string) {\n    return array.filter((o) =>\n      Object.keys(o).some((k) => {\n        if (o[k] !== undefined) {\n          return o[k].toLowerCase().includes(string.toLowerCase());\n        }\n        return null;\n      })\n    );\n  }\n\n  destroyDataTable(tableId) {\n    var table = $(\"#\" + tableId).DataTable();\n    table.destroy();\n  }\n\n  /* istanbul ignore next */\n  filterData(e) {\n    this.destroyDataTable(\"maintainagentupgradeTable\");\n    let searchStr = e.target.value.trim();\n    let searchStrWithSp = e.target.value;\n    let wholeData = [...this.state.tableData];\n    let filteredData = [];\n    let newTableData = [];\n    if (searchStr !== \"\") {\n      filteredData = this.filterByValue(wholeData, searchStr);\n      console.log(filteredData);\n    } else {\n      filteredData = wholeData;\n    }\n\n    console.log(filteredData);\n\n    for (let dataObj of filteredData) {\n      let newDataObj = {};\n      newDataObj.agent_id = dataObj.agent_id;\n      newDataObj.serverId = dataObj.serverId;\n      newDataObj.clientId = dataObj.clientId;\n      newDataObj.userId = dataObj.userId;\n      newDataObj.gatewayId = dataObj.gatewayId;\n      newDataObj.targetId = dataObj.targetId;\n      newDataObj.agentMode = dataObj.agentMode;\n      newDataObj.uaaClientId = dataObj.uaaClientId;\n      newDataObj.uaaClientSecret = dataObj.uaaClientSecret;\n      newDataObj.localPort = dataObj.localPort;\n      newDataObj.duration = dataObj.duration.toString();\n      newDataObj.group = dataObj.group;\n      newDataObj.environment = dataObj.environment;\n      newDataObj.gatewayPort = dataObj.gatewayPort;\n      newDataObj.serviceUrl = dataObj.serviceUrl;\n      newDataObj.admToken = dataObj.admToken;\n      newDataObj.hostUrl = dataObj.hostUrl;\n      if (dataObj.gateway.length > 10) {\n        newDataObj.gateway = dataObj.gateway.substr(0, 10);\n        newDataObj.gatewayHidden = dataObj.gateway;\n        newDataObj.gatewayHiddenFlag = true;\n      } else {\n        newDataObj.gateway = dataObj.gateway;\n        newDataObj.gatewayHiddenFlag = false;\n      }\n\n      if (dataObj.oauth_provider.length > 10) {\n        newDataObj.oauth_provider = dataObj.oauth_provider.substr(0, 10);\n        newDataObj.oauth_providerHidden = dataObj.oauth_provider;\n        newDataObj.oauth_providerHiddenFlag = true;\n      } else {\n        newDataObj.oauth_provider = dataObj.oauth_provider;\n        newDataObj.oauth_providerHiddenFlag = false;\n      }\n\n      if (dataObj.zone.length > 10) {\n        newDataObj.zone = dataObj.zone.substr(0, 10);\n        newDataObj.zoneHidden = dataObj.zone;\n        newDataObj.zoneHiddenFlag = true;\n      } else {\n        newDataObj.zone = dataObj.zone;\n        newDataObj.zoneHiddenFlag = false;\n      }\n\n      if (dataObj.subscription.length > 10) {\n        newDataObj.subscription = dataObj.subscription.substr(0, 10);\n        newDataObj.subscriptionHidden = dataObj.subscription;\n        newDataObj.subscriptionHiddenFlag = true;\n      } else {\n        newDataObj.subscription = dataObj.subscription;\n        newDataObj.subscriptionHiddenFlag = false;\n      }\n\n      if (dataObj.remote_host.length > 10) {\n        newDataObj.remote_host = dataObj.remote_host.substr(0, 10);\n        newDataObj.remote_hostHidden = dataObj.remote_host;\n        newDataObj.remote_hostHiddenFlag = true;\n      } else {\n        newDataObj.remote_host = dataObj.remote_host;\n        newDataObj.remote_hostHiddenFlag = false;\n      }\n\n      if (dataObj.remote_port.length > 10) {\n        newDataObj.remote_port = dataObj.remote_port.substr(0, 10);\n        newDataObj.remote_portHidden = dataObj.remote_port;\n        newDataObj.remote_portHiddenFlag = true;\n      } else {\n        newDataObj.remote_port = dataObj.remote_port;\n        newDataObj.remote_portHiddenFlag = false;\n      }\n\n      newTableData.push(newDataObj);\n    }\n\n    this.setState({\n      newTableData: newTableData,\n      searchString: searchStrWithSp,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"maintainagentupgradeTable\", false);\n    }, 0);\n  }\n\n  /* istanbul ignore next */\n  edit(item) {\n    //console.log(item);\n    let editItem = Object.assign({}, item);\n    if (editItem.zoneHiddenFlag) {\n      editItem.zone = editItem.zoneHidden;\n    }\n    if (editItem.oauth_providerHiddenFlag) {\n      editItem.oauth_provider = editItem.oauth_providerHidden;\n    }\n    this.destroyDataTable(\"maintainagentupgradeTable\");\n    this.setState({\n      editItemData: editItem,\n      viewTable: false,\n    });\n  }\n\n  removeDataTableRow(tableId, rowIndex) {\n    var table = $(\"#\" + tableId).DataTable();\n    table\n      .row(\"#\" + tableId + \"TbodyTr_\" + rowIndex)\n      .remove()\n      .draw(false);\n  }\n  /* istanbul ignore next */\n  deleteData(tbodyVal, rowIndex) {\n    let cnf = window.confirm(\"Are you sure you want to delete\");\n    let rowdata = tbodyVal;\n    let deletePath = \"\";\n    let deleteId = \"\";\n    if (cnf) {\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please Wait....\",\n        \"custom-success\"\n      );\n\n      if (rowdata.agentMode === \"1\") {\n        deleteId = rowdata.gatewayId;\n        deletePath = \"/deleteGateway?gateway_id=\";\n      } else if (rowdata.agentMode === \"2\") {\n        deleteId = rowdata.serverId;\n        deletePath = \"/deleteServer?server_id=\";\n      } else if (rowdata.agentMode === \"3\") {\n        deleteId = rowdata.clientId;\n        deletePath = \"/deleteClient?client_id=\";\n      }\n\n      fetch(this.props.baseUrl + deletePath + deleteId, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: this.props.authToken,\n        },\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              if (respData.errorStatus.status === \"ok\") {\n                this.props.showGlobalMessage(\n                  false,\n                  true,\n                  \"Record deleted successfuly\",\n                  \"custom-success\"\n                );\n                this.removeDataTableRow(\"maintainagentupgradeTable\", rowIndex);\n                let that = this;\n                setTimeout(function () {\n                  that.props.hideGlobalMessage();\n                }, 2000);\n              } else {\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  respData.errorStatus.statusMsg,\n                  \"custom-danger\"\n                );\n                let that = this;\n                setTimeout(function () {\n                  that.props.hideGlobalMessage();\n                }, 2000);\n              }\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            let that = this;\n            setTimeout(function () {\n              that.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  /* istanbul ignore next */\n  disbableData(tbodyIndex) {\n    let cnf = window.confirm(\"Are you sure you want to disable\");\n    if (cnf) {\n      fetch(this.state.apiEndPoints.baseUrl).then((response) => {\n        if (response.status === 200) {\n          response.json().then((zones) => {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Record disabled successfuly\",\n              \"custom-success\"\n            );\n            let that = this;\n            setTimeout(function () {\n              that.props.hideGlobalMessage();\n            }, 2000);\n            this.generateTableStructure();\n          });\n        }\n      });\n    }\n  }\n\n  /* istanbul ignore next */\n  changeView() {\n    this.setState({\n      viewTable: true,\n    });\n    setTimeout(() => {\n      this.initTable(\"maintainagentupgradeTable\", true);\n    }, 0);\n  } // jshint ignore:line\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div>\n        {this.state.viewTable ? (\n          <div className=\"row Maintainagentupgrade\">\n            <div className=\"col-md-12\">\n              <div className=\"row mt-2\">\n                <div className=\"col-sm-6 text-left\">\n                  <div className=\"d-inline\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-outline-secondary disabled\"\n                    >\n                      <i className=\"fa fa-filter\"></i>\n                      FILTER\n                    </button>\n                  </div>\n                  <div className=\"d-inline p-2\">\n                    <input\n                      type=\"text\"\n                      value={this.state.searchString}\n                      className=\"d-inline form-control form-control-sm search-field\"\n                      onChange={(event) => {\n                        this.filterData(event);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"centered-div\">\n                <div id=\"maintainagentupgradeTableDiv\">\n                  {this.state.showTableInit ? (\n                    <table\n                      id=\"maintainagentupgradeTable\"\n                      className=\"table text-center\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>Subscription</th>\n                          <th>Agent ID</th>\n                          <th>Gateway</th>\n                          <th>Group</th>\n                          <th>OAuth Provider</th>\n                          <th>Zone</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.newTableData.map((tbodyVal, tbodyIndex) => {\n                          return (\n                            <tr\n                              id={\n                                \"maintainagentupgradeTableTbodyTr_\" + tbodyIndex\n                              }\n                              key={\n                                \"maintainagentupgradeTableTbodyTr_\" + tbodyIndex\n                              }\n                            >\n                              <td>\n                                {tbodyVal.subscription}&nbsp;&nbsp;\n                                {tbodyVal.subscriptionHiddenFlag ? (\n                                  <img\n                                    onClick={this.showHideTableTdData.bind(\n                                      this,\n                                      tbodyIndex,\n                                      \"subscription\"\n                                    )}\n                                    className=\"icon-arrowmore\"\n                                    alt=\"td-detail\"\n                                    src={IconArrowMore}\n                                  />\n                                ) : null}\n                              </td>\n                              <td>{tbodyVal.agent_id}</td>\n                              <td>\n                                {tbodyVal.gateway}&nbsp;&nbsp;\n                                {tbodyVal.gatewayHiddenFlag ? (\n                                  <img\n                                    onClick={this.showHideTableTdData.bind(\n                                      this,\n                                      tbodyIndex,\n                                      \"gateway\"\n                                    )}\n                                    className=\"icon-arrowmore\"\n                                    alt=\"td-detail\"\n                                    src={IconArrowMore}\n                                  />\n                                ) : null}\n                              </td>\n                              <td>{tbodyVal.group}</td>\n                              <td>\n                                {tbodyVal.oauth_provider}&nbsp;&nbsp;\n                                {tbodyVal.oauth_providerHiddenFlag ? (\n                                  <img\n                                    onClick={this.showHideTableTdData.bind(\n                                      this,\n                                      tbodyIndex,\n                                      \"oauth_provider\"\n                                    )}\n                                    className=\"icon-arrowmore\"\n                                    alt=\"td-detail\"\n                                    src={IconArrowMore}\n                                  />\n                                ) : null}\n                              </td>\n                              <td>\n                                {tbodyVal.zone}&nbsp;&nbsp;\n                                {tbodyVal.zoneHiddenFlag ? (\n                                  <img\n                                    onClick={this.showHideTableTdData.bind(\n                                      this,\n                                      tbodyIndex,\n                                      \"zone\"\n                                    )}\n                                    className=\"icon-arrowmore\"\n                                    alt=\"td-detail\"\n                                    src={IconArrowMore}\n                                  />\n                                ) : null}\n                              </td>\n                              <td>\n                                <span className=\"action-img\">\n                                  <img\n                                    onClick={this.edit.bind(this, tbodyVal)}\n                                    alt=\"edit-icon\"\n                                    title=\"Edit\"\n                                    src={IconEdit}\n                                  />\n                                  <img\n                                    alt=\"delete-icon\"\n                                    onClick={this.deleteData.bind(\n                                      this,\n                                      tbodyVal,\n                                      tbodyIndex\n                                    )}\n                                    title=\"Delete\"\n                                    src={IconDelete}\n                                  />\n                                </span>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <p className=\"text-center loader-icon\">\n                      <img alt=\"loading\" src={Rolling} />\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <Maintainagentedit\n            handleDataTable={this.handleDataTable.bind(this)}\n            baseUrl={this.props.baseUrl}\n            userId={this.props.userId}\n            showGlobalMessage={this.props.showGlobalMessage.bind(this)}\n            hideGlobalMessage={this.props.hideGlobalMessage.bind(this)}\n            changeView={this.changeView.bind(this)}\n            editItemData={this.state.editItemData}\n          ></Maintainagentedit>\n        )}\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n"],"sourceRoot":""}