{"version":3,"sources":["Monitor/Healthstatus.js"],"names":["Healthstatus","props","state","gateway","selectedGateway","gateways","healthLink","session","sessionId","id","bindId","targetId","groupId","superConnection","serverId","timeCreated","ip","lastPong","connection","clientConfiguration","bindId2","allocations","totalAllocations","frees","heapAlloc","heapInUse","heapReleased","heapObjects","report","lastUsage","lastReport","gatewayDetails","mode","environment","gatewayPort","zone","serviceUrl","token","host","os","showSession","showConnection","showSuperConnection","JSON","parse","sessionStorage","getItem","this","setState","tableindx","gatewayId","setTimeout","fetchHealthStatus","e","target","currentShowSession","currentSuperConnection","currentConnection","Object","assign","currentDetails","fetch","then","response","status","json","currentSession","showGlobalMessage","length","superConnections","connections","details","detail","hideGlobalMessage","catch","err","console","log","that","value","operation","className","permissions","accesses","monitor","subMenus","healthStatus","isUser","type","disabled","onClick","gatewayOperations","role","data-toggle","href","aria-controls","aria-selected","style","textAlign","aria-labelledby","name","onChange","event","handleGatewayselection","React","Component"],"mappings":"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","file":"static/js/0.a0abd796.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Healthstatus extends React.Component {\n  /* istanbul ignore next */\n  constructor(props) {\n    super(props);\n    this.state = {\n      gateway: \"\",\n      selectedGateway: \"\",\n      gateways: [],\n      healthLink: \"\",\n      session: {\n        sessionId: \"\",\n        id: \"\",\n        bindId: \"\",\n        targetId: \"\",\n        groupId: \"\",\n      },\n      superConnection: {\n        serverId: \"\",\n        id: \"\",\n        targetId: \"\",\n        groupId: \"\",\n        timeCreated: \"\",\n        ip: \"\",\n        lastPong: \"\",\n      },\n      connection: {\n        bindId: \"\",\n        clientConfiguration: \"\",\n        id: \"\",\n        bindId2: \"\",\n        targetId: \"\",\n        groupId: \"\",\n        timeCreated: \"\",\n        allocations: \"\",\n        totalAllocations: \"\",\n        frees: \"\",\n        heapAlloc: \"\",\n        heapInUse: \"\",\n        heapReleased: \"\",\n        heapObjects: \"\",\n        report: \"\",\n        lastUsage: \"\",\n        lastReport: \"\",\n      },\n      gatewayDetails: {\n        mode: \"\",\n        environment: \"\",\n        gatewayPort: \"\",\n        zone: \"\",\n        serviceUrl: \"\",\n        token: \"\",\n        host: \"\",\n        os: \"\",\n      },\n      showSession: false,\n      showConnection: false,\n      showSuperConnection: false,\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    // get gateway list start\n    let gatewayDetails = JSON.parse(sessionStorage.getItem(\"gatewayDetails\"));\n    this.setState({\n      gateways: gatewayDetails,\n      selectedGateway: gatewayDetails[this.props.tableindx].gatewayId,\n    });\n    setTimeout(() => {\n      this.fetchHealthStatus();\n    }, 500);\n    /* fetch(\"https://jsonplaceholder.typicode.com/todos/1\", {\n      // Get gateways\n      method: \"GET\",\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then((gateways) => {\n          gateways = [\n            {\n              gatewayId: \"Gateway-10afc420-d8ad-41ec-8be6-6f723e6fb18a\",\n              serviceUrl:\n                \"https://b3a2e606-eaa8-4d3c-aadc-c27f12260a1b.run.aws-usw02-dev.ice.predix.io\",\n            },\n            {\n              gatewayId: \"Gateway-d4b7844c-f9b2-4ab3-bab3-592b8ca1629d\",\n              serviceUrl:\n                \"https://b3a2e606-eaa8-4d3c-aadc-c27f12260a1b.run.aws-usw02-dev.ice.predix.io\",\n            },\n          ];\n          this.setState({\n            gateways: gateways,\n          });\n        });\n      }\n    }); */\n\n    //get session, connection, super connection\n\n    /*let currentSession = Object.assign({}, this.state.session);\n        let currentSuperConnection = Object.assign({},this.state.superConnection);\n        let currentConnection = Object.assign({},this.state.connection)\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then((response) => {\n            if (response.status === 200) {\n                response.json().then((sessions) => {\n                    this.props.showGlobalMessage(true, true, 'Please wait', 'custom-success');\n                    sessions=[{\n                        \"sessionId\" : \"OfxhwZxbW61\",\n                        \"id\" : \"OGhEuE1\",\n                        \"bindId\" : 'CejeRnKYuO1',\n                        \"targetId\": 'value1',\n                        \"groupId\" : 'smartshop-prod1',\n                    }\n                    ];\n                    if(sessions.length > 0){\n                        for(let session of sessions){\n                            currentSession.sessionId = session.sessionId;\n                            currentSession.id = session.id;\n                            currentSession.bindId = session.bindId;\n                            currentSession.targetId = session.targetId;\n                            currentSession.groupId = session.groupId;\n                        }\n                        this.setState({\n                            session : currentSession\n                        })\n                    }\n\n                    fetch('https://jsonplaceholder.typicode.com/todos/1')\n                    .then((response) => {\n                    if (response.status === 200) {\n                    response.json().then((superConnections) => {\n                        superConnections=[{\n                            \"serverId\" : \"OGhEuE1\",\n                            \"id\" : \"OGhEuE1\",\n                            \"targetId\" : \"value1\",\n                            \"groupId\" : \"smartshop-prod1\",\n                            \"timeCreated\" : \"2019-11-13T22:05:38.101993815Z1\",\n                            \"ip\" : \"10.72.1.16:613681\",\n                            \"lastPong\" : \"0001-01-01T00:00:00Z1\"\n                        }\n                        ];\n                    if(superConnections.length > 0){\n                        for(let superConnection of superConnections){\n                            currentSuperConnection.serverId = superConnection.serverId;\n                            currentSuperConnection.id = superConnection.id;\n                            currentSuperConnection.targetId = superConnection.targetId;\n                            currentSuperConnection.groupId = superConnection.groupId;\n                            currentSuperConnection.timeCreated = superConnection.timeCreated;\n                            currentSuperConnection.ip = superConnection.ip;\n                            currentSuperConnection.lastPong = superConnection.lastPong;\n                        }\n                        this.setState({\n                            superConnection : currentSuperConnection\n                        })\n                    }\n\n                    fetch('https://jsonplaceholder.typicode.com/todos/1')\n                    .then((response) => {\n                        if (response.status === 200) {\n                            response.json().then((connections) => {\n                                connections=[{\n                            \"bindId\" : \"DstAet1\",\n                            \"clientConfiguration\" : \"value1\",\n                            \"id\" : \"087ADA1\",\n                            \"bindId2\" : \"0074C51\",\n                            \"targetId\" : \"OGhEuE1\",\n                            \"groupId\" : \"smartshop-prod1\",\n                            \"timeCreated\" : \"2019-11-13T22:05:38.101993815Z1\",\n                            \"allocations\" : \"29037761\",\n                            \"totalAllocations\" : \"250076241\",\n                            \"frees\" : \"3943151\",\n                            \"heapAlloc\" : \"29037761\",\n                            \"heapInUse\" : \"51855361\",\n                            \"heapReleased\" : \"602030081\",\n                            \"heapObjects\" : \"202241\",\n                            \"report\" : \"value1\",\n                            \"lastUsage\" : \"9871\",\n                            \"lastReport\" : \"0001-01-01T00:00:00Z1\",\n                        }\n                        ];\n                        if(connections.length > 0){\n                            for(let connection of connections){\n                                currentConnection.bindId = connection.bindId;\n                                currentConnection.clientConfiguration = connection.clientConfiguration;\n                                currentConnection.id = connection.id;\n                                currentConnection.bindId2 = connection.bindId2;\n                                currentConnection.targetId = connection.targetId;\n                                currentConnection.groupId = connection.groupId;\n                                currentConnection.timeCreated = connection.timeCreated;\n                                currentConnection.allocations = connection.allocations;\n                                currentConnection.totalAllocations = connection.totalAllocations;\n                                currentConnection.frees = connection.frees;\n                                currentConnection.heapAlloc = connection.heapAlloc;\n                                currentConnection.heapInUse = connection.heapInUse;\n                                currentConnection.heapReleased = connection.heapReleased;\n                                currentConnection.heapObjects = connection.heapObjects;\n                                currentConnection.report = connection.report;\n                                currentConnection.lastUsage = connection.lastUsage;\n                                currentConnection.lastReport = connection.lastReport;\n                            }\n                            this.setState({\n                                connection : currentConnection\n                            })\n                            let that= this;\n                            that.props.hideGlobalMessage();\n                            }});\n                        }})  \n                    });}\n                })     \n            });}\n        })\n        .catch((err) => {\n            console.log(err);\n            this.props.showGlobalMessage(true, true, 'Error', 'custom-danger');\n                            let that= this;\n                            setTimeout(function () {\n                                that.props.hideGlobalMessage();\n                            }, 2000);\n        });*/\n  }\n\n  /* istanbul ignore next */\n  handleChange(e) {\n    let id = e.target.id;\n\n    if (id === \"session\") {\n      let currentShowSession = this.state.showSession;\n      this.setState({\n        showSession: !currentShowSession,\n      });\n    }\n    if (id === \"superConnection\") {\n      let currentSuperConnection = this.state.showSuperConnection;\n      this.setState({\n        showSuperConnection: !currentSuperConnection,\n      });\n    }\n    if (id === \"connections\") {\n      let currentConnection = this.state.showConnection;\n      this.setState({\n        showConnection: !currentConnection,\n      });\n    }\n  }\n\n  /* istanbul ignore next */\n  fetchHealthStatus() {\n    let selectedGatewayId = this.state.selectedGateway;\n    let gateways = this.state.gateways;\n    /* let selectedGateway = gateways.find(\n      (x) => x.gatewayId === selectedGatewayId\n    ); */\n    //let serviceUrl = selectedGateway.serviceUrl;\n    /* let healthLink = \"\";\n    if (serviceUrl !== \"\") {\n      let indexFromCut = serviceUrl.indexOf(\".\") + 1;\n      let cutString = serviceUrl.slice(indexFromCut);\n      healthLink = \"https://\" + cutString + \"/health\";\n    } */\n\n    //let currentSession = Object.assign({}, this.state.session);\n    let currentSuperConnection = Object.assign({}, this.state.superConnection);\n    let currentConnection = Object.assign({}, this.state.connection);\n    let currentDetails = Object.assign({}, this.state.gatewayDetails);\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\") // healthLink\n      .then((response) => {\n        if (response.status === 200) {\n          response.json().then((currentSession) => {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please wait\",\n              \"custom-success\"\n            );\n\n            currentSession = [\n              {\n                sessionId: \"0idLmsMk8e\",\n                id: \"Q7rfHI\",\n                bindId: \"db6Wt2ReXF\",\n                targetId: \"Q7rfHI\",\n                groupId: \"wabtec-gecars-qadasdsa\",\n              },\n            ];\n            if (currentSession.length > 0) {\n              for (let session of currentSession) {\n                currentSession.sessionId = session.sessionId;\n                currentSession.id = session.id;\n                currentSession.bindId = session.bindId;\n                currentSession.targetId = session.targetId;\n                currentSession.groupId = session.groupId;\n              }\n              this.setState({\n                session: currentSession,\n              });\n            }\n\n            fetch(\"https://jsonplaceholder.typicode.com/todos/1\").then(\n              (response) => {\n                if (response.status === 200) {\n                  response.json().then((superConnections) => {\n                    superConnections = [\n                      {\n                        serverId: \"OGhEuE\",\n                        id: \"OGhEuE\",\n                        targetId: \"value\",\n                        groupId: \"smartshop-prod\",\n                        timeCreated: \"2019-11-13T22:05:38.101993815Z\",\n                        ip: \"10.72.1.16:61368\",\n                        lastPong: \"0001-01-01T00:00:00Z\",\n                      },\n                    ];\n                    if (superConnections.length > 0) {\n                      for (let superConnection of superConnections) {\n                        currentSuperConnection.serverId =\n                          superConnection.serverId;\n                        currentSuperConnection.id = superConnection.id;\n                        currentSuperConnection.targetId =\n                          superConnection.targetId;\n                        currentSuperConnection.groupId =\n                          superConnection.groupId;\n                        currentSuperConnection.timeCreated =\n                          superConnection.timeCreated;\n                        currentSuperConnection.ip = superConnection.ip;\n                        currentSuperConnection.lastPong =\n                          superConnection.lastPong;\n                      }\n                      this.setState({\n                        superConnection: currentSuperConnection,\n                      });\n                    }\n\n                    fetch(\"https://jsonplaceholder.typicode.com/todos/1\").then(\n                      (response) => {\n                        if (response.status === 200) {\n                          response.json().then((connections) => {\n                            connections = [\n                              {\n                                bindId: \"DstAet\",\n                                clientConfiguration: \"value\",\n                                id: \"087ADA\",\n                                bindId2: \"0074C5\",\n                                targetId: \"OGhEuE\",\n                                groupId: \"smartshop-prod\",\n                                timeCreated: \"2019-11-13T22:05:38.101993815Z\",\n                                allocations: \"2903776\",\n                                totalAllocations: \"25007624\",\n                                frees: \"394315\",\n                                heapAlloc: \"2903776\",\n                                heapInUse: \"5185536\",\n                                heapReleased: \"60203008\",\n                                heapObjects: \"20224\",\n                                report: \"value\",\n                                lastUsage: \"987\",\n                                lastReport: \"0001-01-01T00:00:00Z\",\n                              },\n                            ];\n                            if (connections.length > 0) {\n                              for (let connection of connections) {\n                                currentConnection.bindId = connection.bindId;\n                                currentConnection.clientConfiguration =\n                                  connection.clientConfiguration;\n                                currentConnection.id = connection.id;\n                                currentConnection.bindId2 = connection.bindId2;\n                                currentConnection.targetId =\n                                  connection.targetId;\n                                currentConnection.groupId = connection.groupId;\n                                currentConnection.timeCreated =\n                                  connection.timeCreated;\n                                currentConnection.allocations =\n                                  connection.allocations;\n                                currentConnection.totalAllocations =\n                                  connection.totalAllocations;\n                                currentConnection.frees = connection.frees;\n                                currentConnection.heapAlloc =\n                                  connection.heapAlloc;\n                                currentConnection.heapInUse =\n                                  connection.heapInUse;\n                                currentConnection.heapReleased =\n                                  connection.heapReleased;\n                                currentConnection.heapObjects =\n                                  connection.heapObjects;\n                                currentConnection.report = connection.report;\n                                currentConnection.lastUsage =\n                                  connection.lastUsage;\n                                currentConnection.lastReport =\n                                  connection.lastReport;\n                              }\n                              this.setState({\n                                connection: currentConnection,\n                              });\n                              /*  let that = this;\n                              that.props.hideGlobalMessage(); */\n                            }\n                          });\n                          fetch(\n                            \"https://jsonplaceholder.typicode.com/todos/1\"\n                          ).then((response) => {\n                            if (response.status === 200) {\n                              response.json().then((details) => {\n                                details = [\n                                  {\n                                    mode: \"GATEWAY\",\n                                    environment: \"AWS\",\n                                    gatewayPort: \"8080\",\n                                    zone: \"\",\n                                    serviceUrl:\n                                      \"https://ec-agent-portal-1x.com\",\n                                    token: \"none\",\n                                    host: \"ws://asda/agent\",\n                                    os: \"linux\",\n                                  },\n                                ];\n                                if (details.length > 0) {\n                                  for (let detail of details) {\n                                    currentDetails.mode = detail.mode;\n                                    currentDetails.environment =\n                                      detail.environment;\n                                    currentDetails.gatewayPort =\n                                      detail.gatewayPort;\n                                    currentDetails.zone = detail.zone;\n                                    currentDetails.serviceUrl =\n                                      detail.serviceUrl;\n                                    currentDetails.token = detail.token;\n                                    currentDetails.host = detail.host;\n                                    currentDetails.os = detail.os;\n                                  }\n                                  this.setState({\n                                    gatewayDetails: currentDetails,\n                                  });\n                                  let that = this;\n                                  that.props.hideGlobalMessage();\n                                }\n                              });\n                            }\n                          });\n                        }\n                      }\n                    );\n                  });\n                }\n              }\n            );\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.props.showGlobalMessage(true, true, \"Error\", \"custom-danger\");\n        let that = this;\n        setTimeout(function () {\n          that.props.hideGlobalMessage();\n        }, 2000);\n      });\n  }\n\n  /* istanbul ignore next */\n  handleGatewayselection(e) {\n    let selectedGateway = e.target.value;\n    this.setState({\n      selectedGateway: selectedGateway,\n    });\n  }\n\n  /* istanbul ignore next */\n  gatewayOperations(gatewayId, operation) {\n    console.log(gatewayId, operation);\n  }\n\n  /* istanbul ignore next */\n  render() {\n    /* jshint ignore:start */\n    return (\n      <div className=\"Monitorhealthstatus\">\n        <div className=\"card mt-2\">\n          <div className=\"row insidedata\">\n            <form>\n              <div className=\"form-row\">\n                <div className=\"col-sm-12 text-left\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-4 border-bottom text-center\">\n                      {/*    <select\n                        className=\"form-control form-control-sm\"\n                        id=\"selectedGateway\"\n                        name=\"selectedGateway\"\n                        value={this.state.selectedGateway}\n                        onChange={(event) => {\n                          this.handleGatewayselection(event);\n                        }}\n                      >\n                        <option value=\"\">Select Organization</option>\n                        {this.state.gateways.map((gateway, gatewayIndex) => {\n                          return (\n                            <option\n                              className=\"float-left\"\n                              key={\"gatewayOption\" + gatewayIndex}\n                              value={gateway.gatewayId}\n                            >\n                              {gateway.gatewayId}\n                            </option>\n                          );\n                        })}\n                      </select>*/}\n                      <label>GATEWAYID - &nbsp;</label>{\" \"}\n                      <b> {this.state.selectedGateway}</b>\n                    </div>\n                    <div className=\"col-sm-8\">\n                      <div className=\"row ops-btn\">\n                        {this.props.permissions.accesses.monitor.subMenus\n                          .healthStatus.isUser ? null : (\n                          <button\n                            type=\"button\"\n                            id=\"restart-gateway-btn\"\n                            disabled={\n                              this.state.selectedGateway === \"\" ? true : false\n                            }\n                            className=\"btn customize-view-btn btn-sm\"\n                            onClick={() => {\n                              this.gatewayOperations(\n                                this.state.selectedGateway,\n                                \"restart\"\n                              );\n                            }}\n                          >\n                            Restart Gateway\n                          </button>\n                        )}\n\n                        {this.props.permissions.accesses.monitor.subMenus\n                          .healthStatus.isUser ? (\n                          <button\n                            type=\"button\"\n                            id=\"access-gateway-btn\"\n                            disabled={\n                              this.state.selectedGateway === \"\" ? true : false\n                            }\n                            className=\"btn customize-view-btn btn-sm\"\n                            onClick={() => {\n                              this.gatewayOperations(\n                                this.state.selectedGateway,\n                                \"access\"\n                              );\n                            }}\n                          >\n                            Access Gateway\n                          </button>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"row insidedata\">\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link active\"\n                  id={\"sessions-tab\" + this.props.tableindx}\n                  data-toggle=\"tab\"\n                  href={\"#sessions\" + this.props.tableindx}\n                  role=\"tab\"\n                  aria-controls=\"sessions\"\n                  aria-selected=\"true\"\n                >\n                  SESSIONS\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  id={\"superconnections-tab\" + this.props.tableindx}\n                  data-toggle=\"tab\"\n                  href={\"#superconnections\" + this.props.tableindx}\n                  role=\"tab\"\n                  aria-controls=\"superconnections\"\n                  aria-selected=\"false\"\n                >\n                  SUPER CONNECTIONS\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  id={\"contact-tab\" + this.props.tableindx}\n                  data-toggle=\"tab\"\n                  href={\"#contact\" + this.props.tableindx}\n                  role=\"tab\"\n                  aria-controls=\"contact\"\n                  aria-selected=\"false\"\n                >\n                  CLIENT POOL\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  id={\"details-tab\" + this.props.tableindx}\n                  data-toggle=\"tab\"\n                  href={\"#details\" + this.props.tableindx}\n                  role=\"tab\"\n                  aria-controls=\"details\"\n                  aria-selected=\"false\"\n                >\n                  GATEWAY DETAILS\n                </a>\n              </li>\n            </ul>\n            <div\n              className=\"tab-content\"\n              id=\"myTabContent\"\n              style={{ textAlign: \"center\" }}\n            >\n              <div\n                className=\"tab-pane fade show active\"\n                id={\"sessions\" + this.props.tableindx}\n                role=\"tabpanel\"\n                aria-labelledby={\"sessions-tab\" + this.props.tableindx}\n              >\n                <br />\n                <div className=\"row\">\n                  <div className=\"col-sm-5 \"></div>\n                  <div className=\"col-sm-2 text-center\">\n                    <select\n                      className=\"form-control form-control-sm health-status-select\"\n                      id=\"selectedSession\"\n                      name=\"selectedSession\"\n                      /*  value={this.state.selectedGateway} */\n                      onChange={(event) => {\n                        this.handleGatewayselection(event);\n                      }}\n                    >\n                      <option value=\"\">Select SessionId</option>\n                      <option value=\"0idLmsMk8e\">0idLmsMk8e</option>\n\n                      {/*  {this.state.gateways.map((gateway, gatewayIndex) => {\n                          return (\n                            <option\n                              className=\"float-left\"\n                              key={\"gatewayOption\" + gatewayIndex}\n                              value={gateway.gatewayId}\n                            >\n                              {gateway.gatewayId}\n                            </option>\n                          );\n                        })} */}\n                    </select>\n                  </div>\n                </div>\n                <br />\n                <div className=\"row\" style={{ textAlign: \"center\" }}>\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Session ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.session.sessionId}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Group ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.session.groupId}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\" style={{ textAlign: \"center\" }}>\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Bind ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.session.bindId}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Target ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.session.targetId}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\" style={{ textAlign: \"center\" }}>\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">\n                      Server config ID:\n                    </small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.session.id}\n                    </small>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"tab-pane fade\"\n                id={\"superconnections\" + this.props.tableindx}\n                role=\"tabpanel\"\n                aria-labelledby={\"superconnections-tab\" + this.props.tableindx}\n              >\n                <br />\n                <div className=\"row\">\n                  <div className=\"col-sm-5 \"></div>\n                  <div className=\"col-sm-2 text-center\">\n                    <select\n                      className=\"form-control form-control-sm health-status-select\"\n                      id=\"selectedConnection\"\n                      name=\"selectedConnection\"\n                      /*  value={this.state.selectedGateway} */\n                      onChange={(event) => {\n                        this.handleGatewayselection(event);\n                      }}\n                    >\n                      <option value=\"\">Select ServerID</option>\n                      <option value=\"0idLmsMk8e\">0idLmsMk8e</option>\n\n                      {/*  {this.state.gateways.map((gateway, gatewayIndex) => {\n                          return (\n                            <option\n                              className=\"float-left\"\n                              key={\"gatewayOption\" + gatewayIndex}\n                              value={gateway.gatewayId}\n                            >\n                              {gateway.gatewayId}\n                            </option>\n                          );\n                        })} */}\n                    </select>\n                  </div>\n                </div>\n                <br />\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Server ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.superConnection.serverId}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Time created:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.superConnection.timeCreated}\n                    </small>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.superConnection.id}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Group ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.superConnection.groupId}\n                    </small>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Target ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.superConnection.targetId}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">IP:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.superConnection.ip}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <small className=\"font-weight-bold\">Last Pong:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.superConnection.lastPong}\n                    </small>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"tab-pane fade\"\n                id={\"contact\" + this.props.tableindx}\n                role=\"tabpanel\"\n                aria-labelledby={\"contact-tab\" + this.props.tableindx}\n              >\n                {\" \"}\n                <br />\n                <div className=\"row\">\n                  <div className=\"col-sm-5 \"></div>\n                  <div className=\"col-sm-2 text-center\">\n                    <select\n                      className=\"form-control form-control-sm health-status-select\"\n                      id=\"selectedClientId\"\n                      name=\"selectedClientId\"\n                      /*  value={this.state.selectedGateway} */\n                      onChange={(event) => {\n                        this.handleGatewayselection(event);\n                      }}\n                    >\n                      <option value=\"\">Select ClientId</option>\n                      <option value=\"0idLmsMk8e\">0idLmsMk8e</option>\n\n                      {/*  {this.state.gateways.map((gateway, gatewayIndex) => {\n                          return (\n                            <option\n                              className=\"float-left\"\n                              key={\"gatewayOption\" + gatewayIndex}\n                              value={gateway.gatewayId}\n                            >\n                              {gateway.gatewayId}\n                            </option>\n                          );\n                        })} */}\n                    </select>\n                  </div>\n                </div>\n                <br />\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Bind ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.bindId}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">\n                      Client configuration:\n                    </small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.clientConfiguration}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.id}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Frees:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.frees}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Target ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.targetId}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Group ID:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.groupId}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Time created:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.timeCreated}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Allocations:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.allocations}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">\n                      Total Allocations:\n                    </small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.totalAllocations}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Heap Alloc:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.heapAlloc}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Heap in use:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.heapInUse}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Heap released:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.heapReleased}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Heap Objects:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.heapObjects}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Report:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.report}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Last usage:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.connection.lastUsage}\n                    </small>\n                  </div>\n                </div>\n              </div>\n\n              <div\n                className=\"tab-pane fade show\"\n                id={\"details\" + this.props.tableindx}\n                role=\"tabpanel\"\n                aria-labelledby={\"details-tab\" + this.props.tableindx}\n              >\n                <br />\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Mode:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.gatewayDetails.mode}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Environment:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.gatewayDetails.environment}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Gateway Port:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.gatewayDetails.gatewayPort}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Zone:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.gatewayDetails.zone}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">serviceUrl:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.gatewayDetails.serviceUrl}\n                    </small>\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Host:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.gatewayDetails.host}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">Token:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.gatewayDetails.token}\n                    </small>\n                  </div>\n\n                  <div className=\"col-sm-4\">\n                    <small className=\"font-weight-bold\">OS:</small>\n                    <small className=\"font-weight-normal theme-color\">\n                      {this.state.gatewayDetails.os}\n                    </small>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      /*<div className = \"Monitorhealthstatus scroll\">\n                    <div className = 'row mt-2'>\n                        <div className = 'col col-6'>\n                            <select className=\"form-control form-control-sm\">\n                                <option className=\"float-left\" value=\"fa-search\" > &#xf002;  Search by gateway</option>\n                                    {this.state.gateways.map((gateway, gatewayIndex) => {\n                                        return(\n                                            <option\n                                                key={\"gatewayOption\"+gatewayIndex}\n                                                value={ gateway.gatewayId }>{ gateway.gatewayId }</option>\n                                            )})}\n                            </select>\n                        </div>\n                    </div>\n                    <div className='row mt-2'>\n                        <div className=\"card\">\n                            <form>\n                                <div className=\"row\">\n                                    <div className=\"col-sm-4\">\n                                    <label htmlFor=\"formGroupExampleInput\" className=\"health-label float-left\">Gateway</label>\n                                    <select className=\"form-control\" id=\"\">\n                                        <option className=\"float-left\">AVIPOCSUBDOMAIN Gateway</option>\n                                        {this.state.gateways.map((gateway, gatewayIndex) => {\n                                            return(\n                                                <option className=\"float-left\"\n                                                    key={\"gatewayOption\"+gatewayIndex}\n                                                    value={ gateway.gatewayId }>{ gateway.gatewayId }</option>\n                                        )})}\n                                    </select>\n                                    </div>\n                                    <div className=\"col-sm-8\">\n                                    <label htmlFor=\"formGroupExampleInput\">&nbsp;</label>\n                                        <input type=\"text\" className=\"form-control border-primary theme-color\" defaultValue={this.state.healthLink}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-sm-12\">\n                                        <button type=\"button\" className=\"btn customize-view-btn btn-sm mt-2 float-right\" \n                                        onClick={()=>{this.fetchHealthStatus()}}>\n                                            FETCH HEALTH STATUS\n                                    </button>\n                                    </div>\n                                </div>\n                            </form>\n                            <div className = 'row mt-2 executeModal'>\n                                <div className = 'col-4 mr-n3 d-flex'>\n                                    <div className=\"card card-body p-4 flex-fill\">\n                                            <label className =\"control-label ml-3\">SESSIONS <img alt=\"down-arrow\" src=\"assets/static/images/icon_greensortingdown.svg\" /></label>\n                                        {this.state.showSession === true?\n                                            <div className =\"container text-left\">\n                                                <small className=\"font-weight-bold\">Session ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.session.sessionId}</small><br/>\n                                                <small className=\"font-weight-bold\">Server config</small><br/>\n                                                <small className=\"font-weight-bold\">ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.session.id}</small><br/>\n                                                <small className=\"font-weight-bold\">Bind ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.session.bindId}</small><br/>\n                                                <small className=\"font-weight-bold\">Target ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.session.targetId}</small><br/>\n                                                <small className=\"font-weight-bold\">Group ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.session.groupId}</small><br/>     \n                                            </div>:null    \n                                        }\n                                    </div>\n                                </div>\n                                <div className = 'col-4 mx-n3 d-flex'>\n                                    <div className=\"card p-4 card-body flex-fill\">\n                                        <label className =\"control-label ml-3\">SUPER CONNECTIONS <img alt=\"down-arrow\" src=\"assets/static/images/icon_greensortingdown.svg\" /></label>\n                                        {this.state.showSuperConnection === true?\n                                            <div className =\"container text-left\">\n                                                <small className=\"font-weight-bold\">Server ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.superConnection.serverId}</small><br/>\n                                                <small className=\"font-weight-bold\">ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.superConnection.id}</small><br/>\n                                                <small className=\"font-weight-bold\">Target ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.superConnection.targetId}</small><br/>\n                                                <small className=\"font-weight-bold\">Group ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.superConnection.groupId}</small><br/>\n                                                <small className=\"font-weight-bold\">Time created:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.superConnection.timeCreated}</small><br/>\n                                                <small className=\"font-weight-bold\">IP:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.superConnection.ip}</small><br/>\n                                                <small className=\"font-weight-bold\">Last Pong:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.superConnection.lastPong}</small><br/>\n                                            </div>:null    \n                                        }\n                                    </div>\n                          \n                                </div>\n                                <div className = 'col-4 ml-n3 d-flex'>\n                                    <div className=\"card p-4 card-body flex-fill\">\n                                        <label className =\"control-label ml-3\">CONNECTIONS <img alt=\"down-arrow\" src=\"assets/static/images/icon_greensortingdown.svg\" /></label>\n                                        {this.state.showConnection === true?\n                                            <div className =\"container text-left\">\n                                                <small className=\"font-weight-bold\">Bind ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.bindId}</small><br/>\n                                                <small className=\"font-weight-bold\">Client configuration:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.clientConfiguration}</small><br/>\n                                                <small className=\"font-weight-bold\">ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.id}</small><br/>\n                                                <small className=\"font-weight-bold\">Bind ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.bindId2}</small><br/>\n                                                <small className=\"font-weight-bold\">Target ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.targetId}</small><br/>\n                                                <small className=\"font-weight-bold\">Group ID:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.groupId}</small><br/>\n                                                <small className=\"font-weight-bold\">Time created:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.timeCreated}</small><br/>\n                                                <small className=\"font-weight-bold\">Allocations:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.allocations}</small><br/>\n                                                <small className=\"font-weight-bold\">Total Allocations:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.totalAllocations}</small><br/>\n                                                <small className=\"font-weight-bold\">Frees:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.frees}</small><br/>\n                                                <small className=\"font-weight-bold\">Heap Alloc:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.heapAlloc}</small><br/>\n                                                <small className=\"font-weight-bold\">Heap in use:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.heapInUse}</small><br/>\n                                                <small className=\"font-weight-bold\">Heap released:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.heapReleased}</small><br/>\n                                                <small className=\"font-weight-bold\">Heap Objects:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.heapObjects}</small><br/>\n                                                <small className=\"font-weight-bold\">Report:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.report}</small><br/>\n                                                <small className=\"font-weight-bold\">Last usage:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.lastUsage}</small><br/>\n                                                <small className=\"font-weight-bold\">Last report:</small><br/>\n                                                <small className=\"font-weight-normal theme-color\">{this.state.connection.lastReport}</small><br/>\n                                            </div>:null    \n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='row my-5'>\n                                <div className = 'col'>\n                                    <button type=\"button\" className=\"btn btn-sm customize-view-btn mr-2 mb-2\"\n                                     onClick={(event)=>{this.handleChange(event)}}\n                                     id= \"superConnection\">SUPER CONECTIONS</button>\n                                    <button type=\"button\" className=\"btn btn-sm customize-view-btn mr-2 mb-2\"\n                                        onClick={(event)=>{this.handleChange(event)}}\n                                        id= \"connections\">NO. OF CONNECTIONS</button>\n                                    <button type=\"button\" className=\"btn btn-sm customize-view-btn mb-2\"\n                                     onClick={(event)=>{this.handleChange(event)}}\n                                     id= \"session\">NO. OF SESSION ID</button>\n                                </div>\n                                <div className = 'col'>\n                                    <button type=\"button\" className=\"btn btn-sm customize-view-btn float-right mb-2\">REFRESH</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                \n                                    </div> */\n    );\n    /* jshint ignore:end */\n  }\n}\n"],"sourceRoot":""}