{"version":3,"file":"static/js/6.af7541bb.chunk.js","mappings":"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","sources":["assets/images/icon_greensortingdown.svg","assets/images/info.svg","Subscription/Dashboard/SubscriptionDashboard.js"],"sourcesContent":["var _desc, _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconGreensortingdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"10px\",\n    height: \"5px\",\n    viewBox: \"0 0 10 5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"ic_arrow_drop_down_24px\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"path-1\",\n    points: \"0 0 5 5 10 0\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Welcome\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Dashboard-Ops\",\n    transform: \"translate(-306.000000, -453.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-26\",\n    transform: \"translate(242.000000, 445.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-18\",\n    transform: \"translate(1.000000, 0.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ic_arrow_drop_down_24px\",\n    transform: \"translate(68.000000, 10.500000) rotate(-360.000000) translate(-68.000000, -10.500000) translate(63.000000, 8.000000)\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask-2\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#path-1\"\n  })), /*#__PURE__*/React.createElement(\"use\", {\n    id: \"Path\",\n    fill: \"#47B881\",\n    fillRule: \"nonzero\",\n    xlinkHref: \"#path-1\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"\\\\uD83C\\\\uDFA8-Color\",\n    mask: \"url(#mask-2)\",\n    fill: \"#47B881\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-7.000000, -10.000000)\",\n    id: \"Shape\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24\n  }))))))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconGreensortingdown);\nexport default __webpack_public_path__ + \"static/media/icon_greensortingdown.31d2161218970ff2041dbc045ec6fafd.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgInfo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 524.235 524.235\",\n    height: \"512px\",\n    viewBox: \"0 0 524.235 524.235\",\n    width: \"512px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m262.118 0c-144.53 0-262.118 117.588-262.118 262.118s117.588 262.118 262.118 262.118 262.118-117.588 262.118-262.118-117.589-262.118-262.118-262.118zm17.05 417.639c-12.453 2.076-37.232 7.261-49.815 8.303-10.651.882-20.702-5.215-26.829-13.967-6.143-8.751-7.615-19.95-3.968-29.997l49.547-136.242h-51.515c-.044-28.389 21.25-49.263 48.485-57.274 12.997-3.824 37.212-9.057 49.809-8.255 7.547.48 20.702 5.215 26.829 13.967 6.143 8.751 7.615 19.95 3.968 29.997l-49.547 136.242h51.499c.01 28.356-20.49 52.564-48.463 57.226zm15.714-253.815c-18.096 0-32.765-14.671-32.765-32.765 0-18.096 14.669-32.765 32.765-32.765s32.765 14.669 32.765 32.765c0 18.095-14.668 32.765-32.765 32.765z\",\n    \"data-original\": \"#000000\",\n    className: \"active-path\",\n    \"data-old_color\": \"#000000\",\n    fill: \"#8F9CA9\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInfo);\nexport default __webpack_public_path__ + \"static/media/info.fd0d6b5eec47006a284eaaaff6390e46.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nimport IconGreenSortingDown from \"../../assets/images/icon_greensortingdown.svg\";\r\nimport IconInfo from \"../../assets/images/info.svg\";\r\n\r\nexport default class SubscriptionDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      objId: [\r\n        { objName: \"EC\", objIndex: \"1\" },\r\n        { objName: \"TC\", objIndex: \"2\" },\r\n        { objName: \"DIVE\", objIndex: \"3\" },\r\n        { objName: \"GlobalScape\", objIndex: \"4\" },\r\n        { objName: \"EKS-SMALL\", objIndex: \"5\" },\r\n        { objName: \"EKS-MEDIUM\", objIndex: \"6\" },\r\n        { objName: \"EKS_LARGE\", objIndex: \"7\" },\r\n        { objName: \"EKS_XL\", objIndex: \"8\" },\r\n        { objName: \"Tesla-Model-Y\", objIndex: \"9\" },\r\n      ],\r\n      currencyId: [\r\n        {name: \"USD\", id: \"1\"},\r\n        {name: \"INR\", id: \"2\"},\r\n        {name: \"YEN\", id: \"3\"},\r\n        {name: \"SDC\", id: \"4\"}\r\n      ],\r\n      transactionForm: {\r\n        revision: { value: \"v1.2beta\", dirtyState: false },\r\n        licenseId: { value: \"\", dirtyState: false },\r\n        objId: { value: \"1\", dirtyState: false },\r\n        currencyId: { value: \"1\", dirtyState: false },\r\n        eaAmount: { value: \"98\", dirtyState: false },\r\n        qty : { value: \"1\", dirtyState: false },\r\n        oidcUserId: { value: \"\", dirtyState: false },\r\n        paymentVadStr1: { value: \"\", dirtyState: false },\r\n        paymentVadStr2: { value: \"\", dirtyState: false },\r\n        paymentVadStr3: { value: \"\", dirtyState: false },\r\n      },      \r\n      transactionFormIsValid: false,\r\n      errorsForm : {},\r\n\r\n    };\r\n  }\r\n  /* istanbul ignore next */\r\n  componentDidMount() {\r\n    let currentForm = Object.assign({}, this.state.transactionForm);\r\n\r\n    this.props.showGlobalMessage(true, true, 'Please wait...', 'custom-success');\r\n        if (sessionStorage.getItem(\"userData\") !== null) {\r\n          let userData =  JSON.parse(sessionStorage.getItem(\"userData\"));\r\n          console.log(userData);\r\n          currentForm.licenseId.value = userData[0].license;\r\n          currentForm.oidcUserId.value = userData[0].userId;\r\n          this.setState({\r\n            transactionForm: currentForm\r\n          });\r\n          this.props.hideGlobalMessage();\r\n        }\r\n  }\r\n  /* istanbul ignore next */\r\n  handleFormData(e) {\r\n    let currentForm = Object.assign({}, this.state.transactionForm);\r\n    let fieldName = e.target.name;\r\n    let updatedValue = e.target.value;\r\n    /* if (fieldName === \"licenseId\") {\r\n      currentForm.licenseId.value = updatedValue;\r\n      currentForm.licenseId.dirtyState = true;\r\n    }\r\n    else if (fieldName === \"objId\") {\r\n      currentForm.objId.value = updatedValue;\r\n      currentForm.objId.dirtyState = true;\r\n    }\r\n    else if (fieldName === \"currencyId\") {\r\n      currentForm.currencyId.value = updatedValue;\r\n      currentForm.currencyId.dirtyState = true;\r\n    }\r\n    else if (fieldName === \"eaAmount\") {\r\n      currentForm.eaAmount.value = isNaN(updatedValue)?currentForm.eaAmount.value:updatedValue;\r\n      currentForm.eaAmount.dirtyState = true;\r\n    }\r\n    else if (fieldName === \"qty\") {\r\n      currentForm.qty.value =  isNaN(updatedValue)?currentForm.qty.value:updatedValue;\r\n      currentForm.qty.dirtyState = true;\r\n    }\r\n    else if (fieldName === \"oidcUserId\") {\r\n      currentForm.oidcUserId.value = updatedValue;\r\n      currentForm.oidcUserId.dirtyState = true;\r\n    }\r\n    else  */if (fieldName === \"paymentVadStr1\") {\r\n      currentForm.paymentVadStr1.value = updatedValue;\r\n      currentForm.paymentVadStr1.dirtyState = true;\r\n    }\r\n    else if (fieldName === \"paymentVadStr2\") {\r\n      currentForm.paymentVadStr2.value = updatedValue;\r\n      currentForm.paymentVadStr2.dirtyState = true;\r\n    }\r\n\r\n    this.setState({\r\n      transactionForm: currentForm\r\n    });\r\n    this.handleFormValidation();\r\n  }\r\n  /* istanbul ignore next */\r\n  handleFormValidation(){\r\n    let formData  = this.state.transactionForm;\r\n    let formIsValid = true;\r\n    let errors = {};\r\n    let buc  = formData.paymentVadStr1;\r\n    let adn = formData.paymentVadStr2;\r\n    /* if(licenseId.value.trim() === \"\"){\r\n      if (licenseId.dirtyState) {\r\n        errors.licenseId = \"Please enter license Id\";\r\n      }\r\n      formIsValid = false;\r\n    } */\r\n    /* if(objId.value.trim() === \"\"){\r\n      if (objId.dirtyState) {\r\n        errors.objId = \"Please enter Object\";\r\n      }\r\n      formIsValid = false;\r\n    }\r\n    if(currencyId.value.trim() === \"\"){\r\n      if (currencyId.dirtyState) {\r\n        errors.currencyId = \"Please enter Currency\";\r\n      }\r\n      formIsValid = false;\r\n    } */\r\n    /* if(eaAmount.value.trim() === \"\"){\r\n      if (eaAmount.dirtyState) {\r\n        errors.eaAmount = \"Please enter amount per each object\";\r\n      }\r\n      formIsValid = false;\r\n    }\r\n    if(qty.value.trim() === \"\"){\r\n      if (qty.dirtyState) {\r\n        errors.qty = \"Please enter Quantity\";\r\n      }\r\n      formIsValid = false;\r\n    }\r\n    if(oidcUserId.value.trim() === \"\"){\r\n      if (oidcUserId.dirtyState) {\r\n        errors.oidcUserId = \"Please enter OIDC User Id\";\r\n      }\r\n      formIsValid = false;\r\n    } */\r\n    if(buc.value.trim() === \"\"){\r\n      if (buc.dirtyState) {\r\n        errors.paymentVadStr1 = \"Please enter BUC\";\r\n      }\r\n      formIsValid = false;\r\n    }\r\n    if(adn.value.trim() === \"\"){\r\n      if (adn.dirtyState) {\r\n        errors.paymentVadStr2 = \"Please enter ADN\";\r\n      }\r\n      formIsValid = false;\r\n    }\r\n    this.setState({\r\n      errorsForm:errors,\r\n      transactionFormIsValid: formIsValid\r\n    })\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  createSubscription(){\r\n    this.props.showGlobalMessage(\r\n      true,\r\n      true,\r\n      \"Please wait...\",\r\n      \"custom-success\"\r\n    );\r\n    let currentForm = Object.assign({}, this.state.transactionForm);\r\n    let prepareData = {};\r\n    let url = this.props.baseUrl + currentForm.revision.value +\"/seeds\";\r\n   \r\n    prepareData.licenseId = currentForm.licenseId.value;\r\n    prepareData.objId = currentForm.objId.value;\r\n    prepareData.currencyId = currentForm.currencyId.value\r\n    prepareData.eaAmount = currentForm.eaAmount.value;\r\n    prepareData.qty = currentForm.qty.value;\r\n    prepareData.oidcUserId = currentForm.oidcUserId.value;\r\n    prepareData.revision = currentForm.revision.value;\r\n    prepareData.paymentVadStr1 = currentForm.paymentVadStr1.value;\r\n    prepareData.paymentVadStr2 = currentForm.paymentVadStr2.value;\r\n    prepareData.paymentVadStr3 = currentForm.paymentVadStr3.value;\r\n\r\n    console.log(prepareData);\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.props.authToken,\r\n      },\r\n      body: JSON.stringify(prepareData),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          //this.snapshotUpdate();\r\n          response.json().then((respData) => {\r\n            respData = {\r\n              errorStatus: {\r\n                status: \"ok\",\r\n              },\r\n            };\r\n            if (respData.errorStatus.status === \"ok\") {\r\n              this.props.showGlobalMessage(\r\n                false,\r\n                true,\r\n                \"Record saved successfully\",\r\n                \"custom-success\"\r\n              );\r\n              setTimeout(() => {\r\n                this.props.hideGlobalMessage();\r\n                let transactionForm =  {\r\n                  revision: { value: \"\", dirtyState: false },\r\n                  licenseId: { value: \"\", dirtyState: false },\r\n                  objId: { value: \"1\", dirtyState: false },\r\n                  currencyId: { value: \"1\", dirtyState: false },\r\n                  eaAmount: { value: \"1\", dirtyState: false },\r\n                  qty : { value: \"\", dirtyState: false },\r\n                  oidcUserId: { value: \"\", dirtyState: false },\r\n                  paymentVadStr1: { value: \"\", dirtyState: false },\r\n                  paymentVadStr2: { value: \"\", dirtyState: false },\r\n                  paymentVadStr3: { value: \"\", dirtyState: false },\r\n                };\r\n                this.setState({\r\n                  transactionForm: transactionForm,\r\n                  transactionFormIsValid: false,\r\n                });\r\n              }, 2000);\r\n            } else {\r\n              this.props.showGlobalMessage(\r\n                true,\r\n                true,\r\n                respData.errorStatus.statusMsg,\r\n                \"custom-danger\"\r\n              );\r\n              setTimeout(() => {\r\n                this.props.hideGlobalMessage();\r\n              }, 2000);\r\n            }\r\n          });\r\n        } else {\r\n          this.props.showGlobalMessage(\r\n            true,\r\n            true,\r\n            \"Please try after sometime\",\r\n            \"custom-danger\"\r\n          );\r\n          setTimeout(() => {\r\n            this.props.hideGlobalMessage();\r\n          }, 2000);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.props.showGlobalMessage(\r\n          true,\r\n          true,\r\n          \"Please try after sometime\",\r\n          \"custom-danger\"\r\n        );\r\n        setTimeout(() => {\r\n          this.props.hideGlobalMessage();\r\n        }, 2000);\r\n      }); \r\n  }\r\n  /* istanbul ignore next */\r\n  render() {\r\n    /* jshint ignore:start */\r\n    /* istanbul ignore next */\r\n    return (\r\n      /* istanbul ignore next */\r\n      <div className=\"Dashboard mt-4\">\r\n        {/* <div className=\"row\">\r\n          <div className=\"col-md-8 text-right\">\r\n            <p>\r\n              You don't have any active subscription. Want to create new\r\n              subscription.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            {/* <button className=\"btn btn-sm customize-view-btn\">\r\n              Create Subscription\r\n            </button> }\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row licenseCreate\">\r\n          <div className=\"col-md-12 mt-2\">\r\n              <div className=\"centered-div-header\">\r\n                <div className=\"row maintainagentcreate-header\">\r\n                  <div className=\"col-md-12\">\r\n                    <h6 id=\"maintainlicenseCreate-title\">\r\n                      Create Your Subscription ID <small>One Subscription ID is all you need to access all services.</small>\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"changeable-form subscription-form\">\r\n                  {/* <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"col-sm-12 label required\">\r\n                        License Id\r\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\r\n                        <span className=\"float-right help-text\">\r\n                          <img\r\n                            alt=\"info\"\r\n                            src={IconInfo}\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"hover\"\r\n                            data-placement=\"top\"\r\n                            data-content={this.props.helpText.subscriptionName}\r\n                          />\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-sm-12 mb-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"licenseId\"\r\n                          value={this.state.transactionForm.licenseId.value}\r\n                          onChange={(event) => {\r\n                            this.handleFormData(event);\r\n                          }}\r\n                        />\r\n                        <small className=\"text-danger\">\r\n                          {this.state.errorsForm[\"licenseId\"]}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col-sm-6\">\r\n                      <div className=\"col-sm-12 label required\">\r\n                        Object\r\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\r\n                        <span className=\"float-right help-text\">\r\n                          <img\r\n                            alt=\"info\"\r\n                            src={IconInfo}\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"hover\"\r\n                            data-placement=\"top\"\r\n                            data-content={this.props.helpText.objId}\r\n                          />\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-sm-12 mb-2\">\r\n                        <select\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"objId\"\r\n                          value={this.state.transactionForm.objId.value}\r\n                          onChange={(event) => {\r\n                            this.handleFormData(event);\r\n                          }}\r\n                        >\r\n                          {this.state.objId.map(\r\n                            (obj, objIndex) => {\r\n                              return (\r\n                                <option\r\n                                  key={\"objId\" + objIndex}\r\n                                  value={obj.objIndex}\r\n                                >\r\n                                  {obj.objName}\r\n                                </option>\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                        <small className=\"text-danger\">\r\n                          {this.state.errorsForm[\"objId\"]}\r\n                        </small>\r\n                      </div>\r\n                    </div> \r\n                  </div> */}\r\n                  {/* <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"col-sm-12 label required\">\r\n                        Currency\r\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\r\n                        <span className=\"float-right help-text\">\r\n                          <img\r\n                            alt=\"info\"\r\n                            src={IconInfo}\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"hover\"\r\n                            data-placement=\"top\"\r\n                            data-content={this.props.helpText.currencyId}\r\n                          />\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-sm-12 mb-2\">\r\n                      <select\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"currencyId\"\r\n                          value={this.state.transactionForm.currencyId.value}\r\n                          onChange={(event) => {\r\n                            this.handleFormData(event);\r\n                          }}\r\n                        >\r\n                          {this.state.currencyId.map(\r\n                            (currency, id) => {\r\n                              return (\r\n                                <option\r\n                                  key={\"currency\" + id}\r\n                                  value={currency.index}\r\n                                >\r\n                                  {currency.name}\r\n                                </option>\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                        <small className=\"text-danger\">\r\n                          {this.state.errorsForm[\"currencyId\"]}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"col-sm-12 label required\">\r\n                        The amount per each object\r\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\r\n                        <span className=\"float-right help-text\">\r\n                          <img\r\n                            alt=\"info\"\r\n                            src={IconInfo}\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"hover\"\r\n                            data-placement=\"top\"\r\n                            data-content={this.props.helpText.eaAmount}\r\n                          />\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-sm-12 mb-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"eaAmount\"\r\n                          value={this.state.transactionForm.eaAmount.value}\r\n                          onChange={(event) => {\r\n                            this.handleFormData(event);\r\n                          }}\r\n                        />\r\n                        <small className=\"text-danger\">\r\n                          {this.state.errorsForm[\"eaAmount\"]}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </div> */}\r\n                  {/* <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"col-sm-12 label required\">\r\n                        Quantity\r\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\r\n                        <span className=\"float-right help-text\">\r\n                          <img\r\n                            alt=\"info\"\r\n                            src={IconInfo}\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"hover\"\r\n                            data-placement=\"top\"\r\n                            data-content={this.props.helpText.qty}\r\n                          />\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-sm-12 mb-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"qty\"\r\n                          value={this.state.transactionForm.qty.value}\r\n                          onChange={(event) => {\r\n                            this.handleFormData(event);\r\n                          }}\r\n                        />\r\n                        <small className=\"text-danger\">\r\n                          {this.state.errorsForm[\"qty\"]}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"col-sm-12 label required\">\r\n                        Revision\r\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\r\n                        <span className=\"float-right help-text\">\r\n                          <img\r\n                            alt=\"info\"\r\n                            src={IconInfo}\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"hover\"\r\n                            data-placement=\"top\"\r\n                            data-content={this.props.helpText.revision}\r\n                          />\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-sm-12 mb-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"licenseId\"\r\n                          value={this.state.transactionForm.revision.value}\r\n                          onChange={(event) => {\r\n                            this.handleFormData(event);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div> */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"col-sm-12 label required\">\r\n                        BUC\r\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\r\n                        <span className=\"float-right help-text\">\r\n                          <img\r\n                            alt=\"info\"\r\n                            src={IconInfo}\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"hover\"\r\n                            data-placement=\"top\"\r\n                            data-content={this.props.helpText.paymentVadStr1}\r\n                          />\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-sm-12 mb-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"paymentVadStr1\"\r\n                          value={this.state.transactionForm.paymentVadStr1.value}\r\n                          onChange={(event) => {\r\n                            this.handleFormData(event);\r\n                          }}\r\n                        />\r\n                        <small className=\"text-danger\">\r\n                          {this.state.errorsForm[\"paymentVadStr1\"]}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                      <div className=\"col-sm-12 label required\">\r\n                        ADN\r\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\r\n                        <span className=\"float-right help-text\">\r\n                          <img\r\n                            alt=\"info\"\r\n                            src={IconInfo}\r\n                            data-toggle=\"popover\"\r\n                            data-trigger=\"hover\"\r\n                            data-placement=\"top\"\r\n                            data-content= \"Hello\"/* {this.props.helpText.oidcUserId} */\r\n                          />\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col-sm-12 mb-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"paymentVadStr2\"\r\n                          value={this.state.transactionForm.paymentVadStr2.value}\r\n                          onChange={(event) => {\r\n                          this.handleFormData(event);\r\n                        }}\r\n                        />\r\n                        <small className=\"text-danger\">\r\n                          {this.state.errorsForm[\"paymentVadStr2\"]}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 mb-2 text-center\">\r\n                      <button\r\n                        id=\"create-subscription-btn\"\r\n                        disabled={!this.state.transactionFormIsValid}\r\n                        onClick={this.createSubscription.bind(this)}\r\n                        className=\"btn btn-sm customize-view-btn\"\r\n                      >\r\n                        CREATE SUBCRIPTION\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    /* jshint ignore:end */\r\n  }\r\n}\r\n"],"names":["SubscriptionDashboard","props","state","objId","objName","objIndex","currencyId","name","id","transactionForm","revision","value","dirtyState","licenseId","eaAmount","qty","oidcUserId","paymentVadStr1","paymentVadStr2","paymentVadStr3","transactionFormIsValid","errorsForm","currentForm","Object","assign","this","showGlobalMessage","sessionStorage","getItem","userData","JSON","parse","console","log","license","userId","setState","hideGlobalMessage","e","fieldName","target","updatedValue","handleFormValidation","formData","formIsValid","errors","buc","adn","trim","prepareData","url","baseUrl","fetch","method","headers","Accept","Authorization","authToken","body","stringify","then","response","status","json","respData","errorStatus","setTimeout","statusMsg","catch","err","className","alt","src","IconGreenSortingDown","IconInfo","helpText","type","onChange","event","handleFormData","disabled","onClick","createSubscription","bind","React"],"sourceRoot":""}