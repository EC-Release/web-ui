{"version":3,"file":"static/js/88.0970efca.chunk.js","mappings":"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","sources":["assets/images/icon_greensortingdown.svg","Maintain/Groupcreate.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["var _desc, _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconGreensortingdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"10px\",\n    height: \"5px\",\n    viewBox: \"0 0 10 5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"ic_arrow_drop_down_24px\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"path-1\",\n    points: \"0 0 5 5 10 0\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Welcome\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Dashboard-Ops\",\n    transform: \"translate(-306.000000, -453.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-26\",\n    transform: \"translate(242.000000, 445.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-18\",\n    transform: \"translate(1.000000, 0.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ic_arrow_drop_down_24px\",\n    transform: \"translate(68.000000, 10.500000) rotate(-360.000000) translate(-68.000000, -10.500000) translate(63.000000, 8.000000)\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask-2\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#path-1\"\n  })), /*#__PURE__*/React.createElement(\"use\", {\n    id: \"Path\",\n    fill: \"#47B881\",\n    fillRule: \"nonzero\",\n    xlinkHref: \"#path-1\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"\\\\uD83C\\\\uDFA8-Color\",\n    mask: \"url(#mask-2)\",\n    fill: \"#47B881\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-7.000000, -10.000000)\",\n    id: \"Shape\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24\n  }))))))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconGreensortingdown);\nexport default __webpack_public_path__ + \"static/media/icon_greensortingdown.31d2161218970ff2041dbc045ec6fafd.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport $ from 'jquery';\n\nimport  IconGreenSortingDown from '../assets/images/icon_greensortingdown.svg';\n\nexport default class Groupcreate extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            groupForm:{\n                subscriptionId: { value: [], dirtyState: false },\n                groupId: { value: '', dirtyState: false },\n            },\n            errorsGroupForm: {},\n            groupFormIsValid: false,\n            subscriptions: [],\n            keyName:''\n        };\n    }\n\n    /* istanbul ignore next */\n     enableToolTip() {\n        setTimeout(() => {\n          $('[data-toggle=\"popover\"]').popover(); // For tooltips\n        }, 1000);\n      }\n\n    /* istanbul ignore next */\n    componentDidMount(){\n        this.enableToolTip();\n        this.props.showGlobalMessage(true, true, 'Please wait...', 'custom-success');\n        if (sessionStorage.getItem(\"snapshotData\") !== null) {\n          let respData =  JSON.parse(sessionStorage.getItem(\"snapshotData\"))\n          let allData =[]\n          let subscriptionData=[]\n          let groupData =[]\n            Object.keys(respData).forEach((key)=> {\n                allData.push(respData[key])\n            });\n            for(let individualData of allData){\n                if(individualData.parent){\n                    if(individualData.parent ===\"ab2a2691-a563-486c-9883-5111ff36ba9b\"){\n                      subscriptionData.push(individualData);\n                    }\n                    if(individualData.parent ===\"f894e5a8-0f9b-46ca-8b74-57e94610d731\"){\n                        groupData.push(individualData);\n                      }\n                }\n            }\n            this.setState({keyName: \"Group[\" + groupData.length + \"]\"})\n            if(subscriptionData.length > 0){\n              //let selectedSubscriptionId = subscriptionData[0].licenseId;\n              let formObj = Object.assign({}, this.state.groupForm);\n              formObj.subscriptionId.value = [];//selectedSubscriptionId;\n              this.setState({\n                  subscriptions: subscriptionData,\n                  groupForm: formObj\n              });\n\t\t  \n\t\t    setTimeout(()=> {\n              console.log(this.state.subscriptions) \n          }, 2000);\n          }\n          this.props.hideGlobalMessage();\n          localStorage.setItem(\"subscriptions\", JSON.stringify(subscriptionData));\n      }\n      else {\n          this.props.showGlobalMessage(true, true, 'Please try after sometime', 'custom-danger');\n          setTimeout(()=> {\n              this.props.hideGlobalMessage();\n          }, 2000);\n      }\n\t   setTimeout(()=> {\n            $(\"select\").selectpicker();\n          }, 1000); \n\t\n\t    \n    }\n\n    /* istanbul ignore next */\n    componentWillUnmount() {\n        clearInterval(this.timerForSubscriptionList);\n        this.timerForSubscriptionList = null;\n    }\n\n    /* istanbul ignore next */\n    getSubscriptionList(){\n        fetch(this.props.baseUrl + '/listSubscriptions', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+this.props.authToken\n            }\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                response.json().then((respData) => {\n                    if(respData.errorStatus.status === 'ok'){\n                        let subscriptions = respData.data;\n                        localStorage.setItem(\"subscriptions\", JSON.stringify(subscriptions));\n                    }\n                    else{\n                        console.log('Subscription list backgroung api error');\n                    }\n                });\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            console.log('Subscription list backgroung api error');\n        });\n    }\n\n    /* istanbul ignore next */\n    handleFormData(e){\n        let fieldName = e.target.name;\n        let updatedValue = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        let currentForm =  Object.assign({}, this.state.groupForm);\n\n        if(fieldName === 'subscriptionId'){\n            let value = Array.from(e.target.selectedOptions, (option) => option.value);\n            currentForm.subscriptionId.value = value;\n            currentForm.subscriptionId.dirtyState = true;\n        }\n        else if(fieldName === 'groupId'){\n            currentForm.groupId.value = updatedValue;\n            currentForm.groupId.dirtyState = true;\n        }\n\n        this.setState({\n            groupForm: currentForm\n        });\n        this.handleFormValidation();\n    }\n\n    /* istanbul ignore next */\n    handleFormValidation(){\n        let currentFormData = this.state.groupForm;\n        let subscriptionIdValue = currentFormData.subscriptionId.value;\n        let subscriptionIdDirtyState = currentFormData.subscriptionId.dirtyState;\n        let groupIdValue = currentFormData.groupId.value;\n        let groupIdDirtyState = currentFormData.groupId.dirtyState;\n        let formIsValid = true;\n        let errors = {};\n        console.log(subscriptionIdValue);\n        let subscriptionIdFound = false;\n        for (let subscriptionId of subscriptionIdValue) {\n            console.log(subscriptionId);\n          if (subscriptionId.trim() !== \"\") {\n            subscriptionIdFound = true;\n          }\n        }\n\n        if (!subscriptionIdFound) {\n            if(subscriptionIdDirtyState){\n                errors.subscriptionId = \"Please select Subscription ID\";\n            }\n          formIsValid = false;\n        }\n\n        if(groupIdValue.trim() === ''){\n            if(groupIdDirtyState)\n                errors.groupId = 'Please enter Group ID';\n            formIsValid = false;\n        }\n\n        this.setState({\n\t\t\tgroupFormIsValid: formIsValid,\n\t\t\terrorsGroupForm: errors\n\t\t});\n    }\n\n    /* istanbul ignore next */\n    createGroup(){\n        this.props.showGlobalMessage(false, true, 'Record saving initiated. Please check after some time.', 'custom-success');\n        let currentForm =  Object.assign({}, this.state.groupForm);\n        let prepareData = {};\n        prepareData.subscriptionId = currentForm.subscriptionId.value;\n        prepareData.groupId = currentForm.groupId.value;\n        prepareData.parent = \"f894e5a8-0f9b-46ca-8b74-57e94610d731\"\n        prepareData.name = \"GroupName\"\n        /* let newlyCreatedGroups = [];\n        let createdGroupDataObj = {\n            groupId: prepareData.groupId,\n            aid: 'Pending',\n            tid: 'Pending'\n        }; */\n  /*       if (localStorage.getItem(\"newlyCreatedGroups\") === null){\n            // newlyCreatedGroups not found\n            let newlyCreatedGroupObj = {};\n            newlyCreatedGroupObj = {\n                subscriptionId: prepareData.subscriptionId,\n                createdData: [createdGroupDataObj]\n            };\n            newlyCreatedGroups.push(newlyCreatedGroupObj);\n            localStorage.setItem(\"newlyCreatedGroups\", JSON.stringify(newlyCreatedGroups));\n        }\n        else{\n            // newlyCreatedGroups found\n            let oldNewlyCreatedGroupsofSubscriptions = JSON.parse(localStorage.getItem(\"newlyCreatedGroups\"));\n            let findIndex = oldNewlyCreatedGroupsofSubscriptions.findIndex(x => x.subscriptionId === prepareData.subscriptionId);\n            if(findIndex == -1){\n                // subscription not found in array\n                let newlyCreatedGroupObj = {};\n                newlyCreatedGroupObj = {\n                    subscriptionId: prepareData.subscriptionId,\n                    createdData: [createdGroupDataObj]\n                };\n                oldNewlyCreatedGroupsofSubscriptions.push(newlyCreatedGroupObj);\n                localStorage.setItem(\"newlyCreatedGroups\", JSON.stringify(oldNewlyCreatedGroupsofSubscriptions));\n            }\n            else{\n                // subscription found in array\n                oldNewlyCreatedGroupsofSubscriptions[findIndex].createdData.push(createdGroupDataObj);\n                localStorage.setItem(\"newlyCreatedGroups\", JSON.stringify(oldNewlyCreatedGroupsofSubscriptions));\n            }\n        } */\n\n/*         console.log(JSON.parse(localStorage.getItem(\"newlyCreatedGroups\")));\n        setTimeout(()=> {\n            this.props.hideGlobalMessage();\n            let groupForm = {\n                subscriptionId: { value: prepareData.subscriptionId, dirtyState: false },\n                groupId: { value: '', dirtyState: false }\n            };\n\n            this.setState({\n                groupForm: groupForm,\n                groupFormIsValid: false\n            });\n        }, 2000); */\n\n        \n        fetch(this.props.baseUrl + this.state.keyName, { //this.props.baseUrl + '/createGroup'\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+this.props.authToken\n            },\n            body: JSON.stringify(prepareData)\n        })\n        .then((response) => {\n            if (response.status === 200) {\n                response.json().then((respData) => {\n                        this.props.showGlobalMessage(true, true, respData.errorStatus.statusMsg, 'custom-danger');\n                        setTimeout(()=> {\n                            this.props.hideGlobalMessage();\n                        }, 2000);\n                    let oldNewlyCreatedGroupsofSubscriptions = JSON.parse(sessionStorage.getItem(\"newlyCreatedGroups\"));\n                    let findIndex = oldNewlyCreatedGroupsofSubscriptions.findIndex(x => x.subscriptionId === prepareData.subscriptionId);\n                    let allNewlyCreatedGroupsData = [...oldNewlyCreatedGroupsofSubscriptions[findIndex].createdData];\n                    let findGroupIndex = allNewlyCreatedGroupsData.findIndex(x => x.groupId === prepareData.groupId);\n                    allNewlyCreatedGroupsData.splice(findGroupIndex, 1);\n                    oldNewlyCreatedGroupsofSubscriptions[findIndex].createdData = allNewlyCreatedGroupsData;\n                    sessionStorage.setItem(\"newlyCreatedGroups\", JSON.stringify(oldNewlyCreatedGroupsofSubscriptions));\n\n                });\n            }\n            else{\n                this.props.showGlobalMessage(true, true, 'Please try after sometime', 'custom-danger');\n                setTimeout(()=> {\n                    this.props.hideGlobalMessage();\n                }, 2000);\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            this.props.showGlobalMessage(true, true, 'Please try after sometime', 'custom-danger');\n            setTimeout(()=> {\n                this.props.hideGlobalMessage();\n            }, 2000);\n        });\n    }\n\n    render() {\n        /* jshint ignore:start */\n        /* istanbul ignore next */\n        return (\n            <div className=\"row Groupcreate\">\n                <div className=\"col-md-12 mt-2\">\n                    <div className=\"centered-div\">\n                        <div className=\"centered-div-header\">\n                            <div className=\"row maintainagentcreate-header\">\n                                <div className=\"col-md-12\">\n                                    <h6 id=\"maintaingroupcreate-title\">Create Group <small>Creating parameters.</small></h6>\n                                </div>\n                            </div>\n                            <hr></hr>\n                            <div className=\"changeable-form group-form\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-6\">\n                                        <div className=\"col-sm-12 label required\">\n                                            License <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                                        </div>\n                                        <div className=\"col-sm-12 mb-2\">\n                                            <select \n                                                className=\"selectpickerform-control form-control-sm\" \n                                                /*  multiple */\n\t\t\t\t\t\t                        data-live-search=\"true\"\n                                                name=\"subscriptionId\" \n                                                onChange={(event)=>{this.handleFormData(event)}}>\n\t\t\t\t\t\t{ this.state.subscriptions.map((subscription, subscriptionIndex) => {\n                                                        return(\n                                                            <option\n                                                                key={\"subscriptionOption\"+subscriptionIndex}\n                                                                value={ subscription.licenseId }>{ subscription.licenseId }</option>)\n                                                    })}\n                                            </select>\n                                            <small className=\"text-danger\">{ this.state.errorsGroupForm['subscriptionId']}</small>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-sm-6\">\n                                        <div className=\"col-sm-12 label required\">\n                                            Group ID <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                                        </div>\n                                        <div className=\"col-sm-12 mb-2\">\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control form-control-sm\"\n                                                name=\"groupId\"\n                                                value={this.state.groupForm.groupId.value}\n                                                onChange={(event)=>{this.handleFormData(event)}} />\n                                            <small className=\"text-danger\">{ this.state.errorsGroupForm['groupId']}</small>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-sm-12 mb-2 text-right\">\n                                        <button \n                                            id=\"create-group-btn\"\n                                            disabled={!this.state.groupFormIsValid}\n                                            onClick={this.createGroup.bind(this)} \n                                            className=\"btn btn-sm customize-view-btn\">CREATE GROUP</button>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n        /* jshint ignore:end */\n    }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["Groupcreate","props","state","groupForm","subscriptionId","value","dirtyState","groupId","errorsGroupForm","groupFormIsValid","subscriptions","keyName","setTimeout","$","popover","this","enableToolTip","showGlobalMessage","sessionStorage","getItem","respData","JSON","parse","allData","subscriptionData","groupData","Object","keys","forEach","key","push","individualData","parent","setState","length","formObj","assign","console","log","hideGlobalMessage","localStorage","setItem","stringify","selectpicker","clearInterval","timerForSubscriptionList","fetch","baseUrl","method","headers","authToken","then","response","status","json","errorStatus","data","catch","err","e","fieldName","target","name","updatedValue","type","checked","currentForm","Array","from","selectedOptions","option","handleFormValidation","currentFormData","subscriptionIdValue","subscriptionIdDirtyState","groupIdValue","groupIdDirtyState","formIsValid","errors","subscriptionIdFound","trim","prepareData","body","statusMsg","oldNewlyCreatedGroupsofSubscriptions","findIndex","x","allNewlyCreatedGroupsData","createdData","findGroupIndex","splice","className","id","alt","src","IconGreenSortingDown","onChange","event","handleFormData","map","subscription","subscriptionIndex","licenseId","disabled","onClick","createGroup","bind","React","_arrayLikeToArray","arr","len","i","arr2","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","_e","f","TypeError","normalCompletion","didErr","call","step","next","_e2","_toConsumableArray","arrayLikeToArray","iter","unsupportedIterableToArray","_unsupportedIterableToArray","minLen","prototype","toString","slice","constructor","test"],"sourceRoot":""}