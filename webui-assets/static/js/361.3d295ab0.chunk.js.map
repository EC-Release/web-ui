{"version":3,"file":"static/js/361.3d295ab0.chunk.js","mappings":"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","sources":["assets/images/copy.svg","assets/images/icon_greensortingdown.svg","Maintain/Maintainagentcreate.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(0%,36.862745%,72.156863%)\",\n      fillOpacity: 1\n    },\n    d: \"M 13.527344 20 L 3.113281 20 C 1.847656 20 0.820312 18.972656 0.820312 17.707031 L 0.820312 6.457031 C 0.820312 5.195312 1.847656 4.167969 3.113281 4.167969 L 3.527344 4.167969 C 3.875 4.167969 4.152344 4.445312 4.152344 4.792969 C 4.152344 5.136719 3.875 5.417969 3.527344 5.417969 L 3.113281 5.417969 C 2.539062 5.417969 2.070312 5.882812 2.070312 6.457031 L 2.070312 17.707031 C 2.070312 18.28125 2.539062 18.75 3.113281 18.75 L 13.527344 18.75 C 14.101562 18.75 14.570312 18.28125 14.570312 17.707031 L 14.570312 17.292969 C 14.570312 16.945312 14.851562 16.667969 15.195312 16.667969 C 15.539062 16.667969 15.820312 16.945312 15.820312 17.292969 L 15.820312 17.707031 C 15.820312 18.972656 14.792969 20 13.527344 20 Z M 13.527344 20 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(0%,36.862745%,72.156863%)\",\n      fillOpacity: 1\n    },\n    d: \"M 16.863281 15 L 8.113281 15 C 6.847656 15 5.820312 13.972656 5.820312 12.707031 L 5.820312 2.292969 C 5.820312 1.027344 6.847656 0 8.113281 0 L 16.863281 0 C 18.125 0 19.152344 1.027344 19.152344 2.292969 L 19.152344 12.707031 C 19.152344 13.972656 18.125 15 16.863281 15 Z M 8.113281 1.25 C 7.539062 1.25 7.070312 1.71875 7.070312 2.292969 L 7.070312 12.707031 C 7.070312 13.28125 7.539062 13.75 8.113281 13.75 L 16.863281 13.75 C 17.4375 13.75 17.902344 13.28125 17.902344 12.707031 L 17.902344 2.292969 C 17.902344 1.71875 17.4375 1.25 16.863281 1.25 Z M 8.113281 1.25 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.d51832c167b1247f777ec70f6836e2d8.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconGreensortingdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"10px\",\n    height: \"5px\",\n    viewBox: \"0 0 10 5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"ic_arrow_drop_down_24px\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"path-1\",\n    points: \"0 0 5 5 10 0\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Welcome\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Dashboard-Ops\",\n    transform: \"translate(-306.000000, -453.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-26\",\n    transform: \"translate(242.000000, 445.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-18\",\n    transform: \"translate(1.000000, 0.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ic_arrow_drop_down_24px\",\n    transform: \"translate(68.000000, 10.500000) rotate(-360.000000) translate(-68.000000, -10.500000) translate(63.000000, 8.000000)\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask-2\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#path-1\"\n  })), /*#__PURE__*/React.createElement(\"use\", {\n    id: \"Path\",\n    fill: \"#47B881\",\n    fillRule: \"nonzero\",\n    xlinkHref: \"#path-1\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"\\\\uD83C\\\\uDFA8-Color\",\n    mask: \"url(#mask-2)\",\n    fill: \"#47B881\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-7.000000, -10.000000)\",\n    id: \"Shape\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24\n  }))))))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconGreensortingdown);\nexport default __webpack_public_path__ + \"static/media/icon_greensortingdown.31d2161218970ff2041dbc045ec6fafd.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport $ from \"jquery\";\n\nimport IconGreenSortingDown from \"../assets/images/icon_greensortingdown.svg\";\nimport CopyIcon from \"../assets/images/copy.svg\";\n\nexport default class Maintainagentcreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      agentForm: {\n        agentMode: { value: 2, dirtyState: false },\n        gateway: { value: \"\", dirtyState: false },\n        businessId: { value: 0, dirtyState: false },\n        businessName: { value: \"\", dirtyState: false },\n        requestor: { value: \"\", dirtyState: false },\n        requestedDate: { value: \"\", dirtyState: false },\n        customerEmail: { value: \"\", dirtyState: false },\n        bucAnd: { value: \"\", dirtyState: false },\n        vpc: { value: \"\", dirtyState: false },\n        debugMode: { value: true, dirtyState: false },\n        subscriptionId: { value: \"\", dirtyState: false },\n        ecVersion: { value: \"\", dirtyState: false },\n      },\n      errorsAgentForm: {},\n      agentFormIsValid: false,\n      serverForm: {\n        mode: \"SERVER\",\n        agentId: { value: \"\", dirtyState: false, type: \"password\" },\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        clientSecret: { value: \"\", dirtyState: false, type: \"password\" },\n        duration: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        zone: { value: \"\", dirtyState: false },\n        serviceUrl: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n        remotePort: { value: \"\", dirtyState: false },\n        proxy: { value: \"\", dirtyState: false },\n        noproxy: { value: \"\", dirtyState: false },\n        allowPlugIn: { value: false, dirtyState: false },\n        plugIn: { value: [], dirtyState: false },\n        hca: { value: \"\", dirtyState: false },\n        os: { value: \"\", dirtyState: false },\n      },\n      errorsServerForm: {},\n      serverFormIsValid: false,\n      clientForm: {\n        mode: \"CLIENT\",\n        agentId: { value: \"\", dirtyState: false, type: \"password\" },\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        clientSecret: { value: \"\", dirtyState: false, type: \"password\" },\n        duration: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        localPort: { value: \"\", dirtyState: false },\n        targetId: { value: \"\", dirtyState: false, type: \"password\" },\n        proxy: { value: \"\", dirtyState: false },\n        noproxy: { value: \"\", dirtyState: false },\n        allowPlugIn: { value: false, dirtyState: false },\n        plugIn: { value: [], dirtyState: false },\n        hca: { value: \"\", dirtyState: false },\n        os: { value: \"\", dirtyState: false },\n      },\n      errorsClientForm: {},\n      clientFormIsValid: false,\n      xclientForm: {\n        mode: \"X:CLIENT\",\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n      },\n      errorsXClientForm: {},\n      xclientFormIsValid: false,\n\n      xserverForm: {\n        mode: \"X:SERVER\",\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n      },\n      errorsXServerForm: {},\n      xserverFormIsValid: false,\n      subscriptions: [],\n      // API will provide this agentModeButtons\n      agentModeButtons: [\n        { text: \"SERVER\", value: 2 },\n        { text: \"CLIENT\", value: 3 },\n        { text: \"X:SERVER\", value: 4 },\n        { text: \"X:CLIENT\", value: 5 },\n      ],\n      /* istanbul ignore next */\n      // API will provide this gateways\n      gateways: [\n        { name: \"Choose Gateway...\", id: 100 },\n        { name: \"gateway-03123012\", id: 101 },\n        { name: \"gateway-31034216\", id: 102 },\n        { name: \"gateway-03130357\", id: 103 },\n      ],\n      // API will provide this businesses\n      businesses: [\n        { name: \"Aviation\", id: \"1\" },\n        { name: \"Power\", id: \"2\" },\n        { name: \"Capital\", id: \"3\" },\n        { name: \"External\", id: \"4\" },\n      ],\n      // API will provide this ecVersions\n      ecVersions: [\n        { ecVersion: \"v1.hokkaido.214.lib\", ecVersionIndex: \"214\" },\n        { ecVersion: \"v1.hokkaido.213.lib\", ecVersionIndex: \"213\" },\n        { ecVersion: \"v1beta.fukuoka.1728.lib\", ecVersionIndex: \"212\" },\n      ],\n      groups: [],\n      // API will provide this ecSubVersions\n      ecSubVersions: [\n        { name: \"v1.hokkaido.212 stable\", id: \"1\", ecVersionId: \"1\" },\n        { name: \"v1beta.fukuoka.1724\", id: \"2\", ecVersionId: \"2\" },\n      ],\n      // API will provide this osTypes\n      osTypes: [\n        { name: \"Linux\", id: \"1\" },\n        { name: \"Windows\", id: \"2\" },\n        { name: \"Solaris\", id: \"3\" },\n        { name: \"MAC\", id: \"4\" },\n      ],\n      // API will provide this plugIns\n      plugIns: [\n        { name: \"VLN\", id: \"vln\" },\n        { name: \"TLS\", id: \"tls\" },\n      ],\n      // API will provide this environments\n      environments: [\n        { name: \"CF\", id: \"cf\" },\n        { name: \"AWS\", id: \"aws\" },\n      ],\n      operatingSystems: [\n        { name: \"Linux\", id: \"linux\" },\n        { name: \"Windows\", id: \"windows\" },\n        { name: \"Darwin\", id: \"darwin\" },\n      ],\n      isTesting: false,\n      keyName: \"\",\n    };\n  }\n\n  /* istanbul ignore next */\n  enableToolTip() {\n    setTimeout(() => {\n      $('[data-toggle=\"popover\"]').popover(); // For tooltips\n    }, 1000);\n  }\n  /* istanbul ignore next */\n  componentDidMount() {\n    this.enableToolTip();\n    let businesses = [...this.state.businesses];\n    let agentForm = Object.assign({}, this.state.agentForm);\n    if (businesses.length > 0) {\n      agentForm.businessId.value = businesses[0].id;\n      this.setState({\n        agentForm: agentForm,\n      });\n    }\n\n    if (this.state.operatingSystems.length > 0) {\n      let selectedOs = this.state.operatingSystems[0].id;\n      let serverForm = Object.assign({}, this.state.serverForm);\n      let clientForm = Object.assign({}, this.state.clientForm);\n      serverForm.os.value = selectedOs;\n      clientForm.os.value = selectedOs;\n      this.setState({\n        serverForm: serverForm,\n        clientForm: clientForm,\n      });\n    }\n\n    // Subscription list start\n\n    this.props.showGlobalMessage(\n      true,\n      true,\n      \"Please wait...\",\n      \"custom-success\"\n    );\n    if (sessionStorage.getItem(\"snapshotData\") !== null) {\n      let respData = JSON.parse(sessionStorage.getItem(\"snapshotData\"));\n      let allData = [];\n      let subscriptionData = [];\n      let groupData = [];\n      Object.keys(respData).forEach((key) => {\n        allData.push(respData[key]);\n      });\n      for (let individualData of allData) {\n        if (individualData.parent) {\n          if (\n            individualData.parent === \"ab2a2691-a563-486c-9883-5111ff36ba9b\"\n          ) {\n            subscriptionData.push(individualData);\n          }\n          if (\n            individualData.parent === \"f894e5a8-0f9b-46ca-8b74-57e94610d731\"\n          ) {\n            groupData.push(individualData);\n          }\n        }\n      }\n      this.setState({ keyName: \"[\" + groupData.length + \"]\" });\n      if (subscriptionData.length < 0) {\n        subscriptionData = [];\n      }\n      this.setState({\n        subscriptions: subscriptionData,\n        groups: groupData,\n      });\n      this.props.hideGlobalMessage();\n    } else {\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please try after sometime\",\n        \"custom-danger\"\n      );\n      setTimeout(() => {\n        this.props.hideGlobalMessage();\n      }, 2000);\n    }\n\n    // Subscription list end\n  }\n\n  /* istanbul ignore next */\n  handleChangeAgentMode(newAgentMode) {\n    let currentAgentForm = Object.assign({}, this.state.agentForm);\n    currentAgentForm.agentMode.value = newAgentMode;\n\n    this.setState({\n      agentForm: currentAgentForm,\n    });\n    this.enableToolTip();\n  }\n\n  /* istanbul ignore next */\n  changeFormAutofill(selectedSubscriptionId) {\n    let subscriptions = this.state.subscriptions;\n    let serverForm = this.state.serverForm;\n    let clientForm = this.state.clientForm;\n    if (selectedSubscriptionId !== \"\") {\n      let selectedSubscription = subscriptions.filter(function (o) {\n        return o.subscriptionId === selectedSubscriptionId;\n      });\n\n      serverForm.zone.value = selectedSubscriptionId;\n      serverForm.serviceUrl.value = selectedSubscription[0].serviceUri;\n      serverForm.clientId.value = selectedSubscription[0].clientId;\n      serverForm.clientSecret.value = selectedSubscription[0].clientSc;\n      serverForm.OAuth2.value = selectedSubscription[0].uaaUrl + \"/oauth/token\";\n\n      clientForm.clientId.value = selectedSubscription[0].clientId;\n      clientForm.clientSecret.value = selectedSubscription[0].clientSc;\n      clientForm.OAuth2.value = selectedSubscription[0].uaaUrl + \"/oauth/token\";\n\n      fetch(\n        this.props.baseUrl +\n          \"/groupList?subscriptionID=\" +\n          selectedSubscriptionId,\n        {\n          //this.props.baseUrl + '/groupList?subscriptionID='+selectedSubscriptionId\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + this.props.authToken,\n          },\n        }\n      ).then((response) => {\n        if (response.status === 200) {\n          response.json().then((respData) => {\n            if (respData.errorStatus.status === \"ok\") {\n              let groups = respData.data;\n              if (groups.length > 0) {\n                let selectedGroup = groups[0];\n                let selectedGroupId = selectedGroup.groupId;\n                serverForm.group.value = selectedGroupId;\n                clientForm.group.value = selectedGroupId;\n                this.setState({\n                  groups: groups,\n                  serverForm: serverForm,\n                  clientForm: clientForm,\n                });\n                this.changeAidForServer(selectedGroupId);\n                this.changeAidTidForClient(selectedGroupId);\n              }\n            }\n          });\n        }\n      });\n    }\n\n    fetch(\n      this.props.baseUrl +\n        \"/gatewayList?subscriptionID=\" +\n        selectedSubscriptionId,\n      {\n        //this.props.baseUrl + '/groupList?subscriptionID='+selectedSubscriptionId\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n      }\n    ).then((response) => {\n      if (response.status === 200) {\n        response.json().then((respData) => {\n          if (respData.errorStatus.status === \"ok\") {\n            let gateways = respData.data.glist;\n            let modifiedGateways = [];\n            let gatewayKey = 0;\n            let selectedGateway = \"\";\n            for (let indexGateway in gateways) {\n              let cfURL = gateways[indexGateway].cfURL;\n              if (cfURL !== \"\") {\n                let modifiedCfUrlObj = {};\n                let cfURLSplit = cfURL.split(\"://\");\n                if (cfURLSplit[0].search(\"https\") !== -1) {\n                  cfURLSplit[0] = \"wss\";\n                } else {\n                  cfURLSplit[0] = \"ws\";\n                }\n                let newCfURL = cfURLSplit.join(\"://\");\n                newCfURL += \"/agent\";\n                modifiedCfUrlObj.id = newCfURL;\n                modifiedCfUrlObj.name = newCfURL;\n                modifiedGateways.push(modifiedCfUrlObj);\n                if (gatewayKey === 0) {\n                  selectedGateway = newCfURL;\n                }\n                gatewayKey++;\n              }\n            }\n\n            clientForm.host.value = selectedGateway;\n            serverForm.host.value = selectedGateway;\n            this.setState({\n              gateways: modifiedGateways,\n              clientForm: clientForm,\n              serverForm: serverForm,\n            });\n          }\n        });\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  changeAidForServer(selectedGroupId) {\n    if (selectedGroupId !== \"\") {\n      let groups = this.state.groups;\n      let serverForm = this.state.serverForm;\n      let selectedGroup = groups.filter(function (o) {\n        return o.groupId === selectedGroupId;\n      });\n      serverForm.agentId.value = selectedGroup[0].ids.tid;\n      this.setState({\n        serverForm: serverForm,\n      });\n    }\n  }\n\n  /* istanbul ignore next */\n  changeAidTidForClient(selectedGroupId) {\n    if (selectedGroupId !== \"\") {\n      let groups = this.state.groups;\n      let clientForm = this.state.clientForm;\n      let selectedGroup = groups.filter(function (o) {\n        return o.groupId === selectedGroupId;\n      });\n      clientForm.agentId.value = selectedGroup[0].ids.aid;\n      clientForm.targetId.value = selectedGroup[0].ids.tid;\n      this.setState({\n        clientForm: clientForm,\n      });\n    }\n  }\n\n  /* istanbul ignore next */\n  handleAgentFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentAgentForm = Object.assign({}, this.state.agentForm);\n\n    if (fieldName === \"subscriptionId\") {\n      currentAgentForm.subscriptionId.value = updatedValue;\n      currentAgentForm.subscriptionId.dirtyState = true;\n      //  this.changeFormAutofill(updatedValue);\n    } else if (fieldName === \"ecVersion\") {\n      currentAgentForm.ecVersion.value = updatedValue;\n      currentAgentForm.ecVersion.dirtyState = true;\n    } else if (fieldName === \"debugMode\") {\n      currentAgentForm.debugMode.value = updatedValue;\n      currentAgentForm.debugMode.dirtyState = true;\n    }\n\n    this.setState({\n      agentForm: currentAgentForm,\n    });\n    this.handleAgentFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleAgentFormValidation() {\n    let currentFormData = this.state.agentForm;\n    let businessIdValue = currentFormData.businessId.value;\n    let businessNameValue = currentFormData.businessName.value;\n    let businessNameDirtyState = currentFormData.businessName.dirtyState;\n    let requestorValue = currentFormData.requestor.value;\n    let requestorDirtyState = currentFormData.requestor.dirtyState;\n    let requestedDateValue = currentFormData.requestedDate.value;\n    let requestedDateDirtyState = currentFormData.requestedDate.dirtyState;\n    let customerEmailValue = currentFormData.customerEmail.value;\n    let customerEmailDirtyState = currentFormData.customerEmail.dirtyState;\n    let bucAndValue = currentFormData.bucAnd.value;\n    let bucAndDirtyState = currentFormData.bucAnd.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n\n    if (businessIdValue === \"\") {\n      errors.businessId = \"Please select Business\";\n      formIsValid = false;\n    }\n\n    if (businessIdValue === 0) {\n      if (businessNameValue.trim() === \"\") {\n        if (businessNameDirtyState) {\n          errors.businessName = \"Please enter Business Name\";\n        }\n        formIsValid = false;\n      }\n    }\n\n    if (requestorValue.trim() === \"\") {\n      if (requestorDirtyState) {\n        errors.requestor = \"Please enter Requestor\";\n      }\n      formIsValid = false;\n    }\n\n    if (requestedDateValue.trim() === \"\") {\n      if (requestedDateDirtyState) {\n        errors.requestedDate = \"Please enter Requested Date\";\n      }\n      formIsValid = false;\n    }\n\n    if (customerEmailValue.trim() === \"\") {\n      if (customerEmailDirtyState) {\n        errors.customerEmail = \"Please enter Customer Email\";\n      }\n      formIsValid = false;\n    }\n\n    if (bucAndValue.trim() === \"\") {\n      if (bucAndDirtyState) {\n        errors.bucAnd = \"Please enter BUC/AND\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      agentFormIsValid: formIsValid,\n      errorsAgentForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleServerFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n\n    if (fieldName === \"agentId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentServerForm.agentId.value;\n      }\n      currentServerForm.agentId.value = updatedValue;\n      currentServerForm.agentId.dirtyState = true;\n    } else if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n      //  this.changeAidForServer(updatedValue);\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"clientSecret\") {\n      currentServerForm.clientSecret.value = updatedValue;\n      currentServerForm.clientSecret.dirtyState = true;\n    } else if (fieldName === \"duration\") {\n      let durationAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentServerForm.duration.value;\n      if (durationAfterValidityCheck.length > 4) {\n        durationAfterValidityCheck = currentServerForm.duration.value;\n      }\n      currentServerForm.duration.value = durationAfterValidityCheck;\n      currentServerForm.duration.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"zone\") {\n      if (updatedValue.length > 36) {\n        updatedValue = currentServerForm.zone.value;\n      }\n      currentServerForm.zone.value = updatedValue;\n      currentServerForm.zone.dirtyState = true;\n    } else if (fieldName === \"serviceUrl\") {\n      currentServerForm.serviceUrl.value = updatedValue;\n      currentServerForm.serviceUrl.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    } else if (fieldName === \"remotePort\") {\n      let remotePortAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentServerForm.remotePort.value;\n      if (remotePortAfterValidityCheck.length > 4) {\n        remotePortAfterValidityCheck = currentServerForm.remotePort.value;\n      }\n      currentServerForm.remotePort.value = remotePortAfterValidityCheck;\n      currentServerForm.remotePort.dirtyState = true;\n    } else if (fieldName === \"proxy\") {\n      currentServerForm.proxy.value = updatedValue;\n      currentServerForm.proxy.dirtyState = true;\n    } else if (fieldName === \"noproxy\") {\n      currentServerForm.noproxy.value = updatedValue;\n      currentServerForm.noproxy.dirtyState = true;\n    } else if (fieldName === \"allowPlugIn\") {\n      currentServerForm.allowPlugIn.value = updatedValue;\n      currentServerForm.allowPlugIn.dirtyState = true;\n    } else if (fieldName === \"plugIn\") {\n      let options = e.target.options;\n      let value = [];\n      for (let i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n      currentServerForm.plugIn.value = value;\n      currentServerForm.plugIn.dirtyState = true;\n    } else if (fieldName === \"hca\") {\n      let hcaAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentServerForm.hca.value;\n      if (hcaAfterValidityCheck.length > 4) {\n        hcaAfterValidityCheck = currentServerForm.hca.value;\n      }\n      currentServerForm.hca.value = hcaAfterValidityCheck;\n      currentServerForm.hca.dirtyState = true;\n    } else if (fieldName === \"os\") {\n      currentServerForm.os.value = updatedValue;\n      currentServerForm.os.dirtyState = true;\n    }\n\n    this.setState({\n      serverForm: currentServerForm,\n    });\n\n    this.handleServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXServerFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n\n    if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n      //  this.changeAidForServer(updatedValue);\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    }\n\n    this.setState({\n      xserverForm: currentServerForm,\n    });\n\n    this.handleXServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXServerFormValidation() {\n    let currentFormData = this.state.xserverForm;\n\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    //let hostValue = currentFormData.host.value;\n    //let hostDirtyState = currentFormData.host.dirtyState;\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      xserverFormIsValid: formIsValid,\n      errorsXServerForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleXClientFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.xclientForm);\n\n    if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n      //  this.changeAidForServer(updatedValue);\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    }\n\n    this.setState({\n      xclientForm: currentServerForm,\n    });\n\n    this.handleXClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXClientFormValidation() {\n    let currentFormData = this.state.xclientForm;\n\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    //let hostValue = currentFormData.host.value;\n    //let hostDirtyState = currentFormData.host.dirtyState;\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      xclientFormIsValid: formIsValid,\n      errorsXClientForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleServerFormValidation() {\n    let currentFormData = this.state.serverForm;\n    let agentIdValue = currentFormData.agentId.value;\n    let agentIdDirtyState = currentFormData.agentId.dirtyState;\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let clientSecretValue = currentFormData.clientSecret.value;\n    let clientSecretDirtyState = currentFormData.clientSecret.dirtyState;\n    let durationValue = currentFormData.duration.value;\n    let durationDirtyState = currentFormData.duration.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    //let hostValue = currentFormData.host.value;\n    //let hostDirtyState = currentFormData.host.dirtyState;\n    let zoneValue = currentFormData.zone.value;\n    let zoneDirtyState = currentFormData.zone.dirtyState;\n    let serviceUrlValue = currentFormData.serviceUrl.value;\n    let serviceUrlDirtyState = currentFormData.serviceUrl.dirtyState;\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let remotePortValue = currentFormData.remotePort.value;\n    let remotePortDirtyState = currentFormData.remotePort.dirtyState;\n    let allowPlugInValue = currentFormData.allowPlugIn.value;\n    //let allowPlugInDirtyState = currentFormData.allowPlugIn.dirtyState;\n    let plugInValue = currentFormData.plugIn.value;\n    let plugInDirtyState = currentFormData.plugIn.dirtyState;\n    let hcaValue = currentFormData.hca.value;\n    let hcaDirtyState = currentFormData.hca.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (agentIdValue.trim() === \"\") {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Please enter Agent Id\";\n      }\n      formIsValid = false;\n    } else if (agentIdValue.length < 6) {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Agent Id must have 6 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientSecretValue.trim() === \"\") {\n      if (clientSecretDirtyState) {\n        errors.clientSecret = \"Please enter Client Secret\";\n      }\n      formIsValid = false;\n    }\n\n    if (durationValue === \"\") {\n      if (durationDirtyState) {\n        errors.duration = \"Please enter Duration in digit\";\n      }\n      formIsValid = false;\n    } else if (durationValue < 1200) {\n      if (durationDirtyState) {\n        errors.duration = \"Duration at least 1200\";\n      }\n      formIsValid = false;\n    }\n\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    /*    if(hostValue.trim() === ''){\n            if(hostDirtyState){\n                errors.host = 'Please enter Host';\n            }\n            formIsValid = false;\n        }\n        else if(hostValue.substr(0, 6) !== 'wss://' && hostValue.substr(0, 5) !== 'ws://'){\n            if(hostDirtyState){\n                errors.host = 'Host starts with wss:// or ws://';\n            }\n            formIsValid = false;\n        }\n        else if(hostValue.substr(hostValue.length - 6, 6) !== '/agent'){\n            if(hostDirtyState){\n                errors.host = 'Host ends with /agent';\n            }\n            formIsValid = false;\n        }*/\n\n    if (zoneValue.trim() === \"\") {\n      if (zoneDirtyState) {\n        errors.zone = \"Please enter Zone\";\n      }\n      formIsValid = false;\n    } else if (zoneValue.length < 36) {\n      if (zoneDirtyState) {\n        errors.zone = \"Zone must have 36 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (serviceUrlValue.trim() === \"\") {\n      if (serviceUrlDirtyState) {\n        errors.serviceUrl = \"Please enter Service Url\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(serviceUrlValue)) {\n      if (serviceUrlDirtyState) {\n        errors.serviceUrl = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n\n    if (remotePortValue.trim() === \"\") {\n      if (remotePortDirtyState) {\n        errors.remotePort = \"Please enter Remote Port in digit\";\n      }\n      formIsValid = false;\n    } else if (remotePortValue.length !== 4) {\n      if (remotePortDirtyState) {\n        errors.remotePort = \"Remote Port must have 4 digit\";\n      }\n      formIsValid = false;\n    }\n\n    if (allowPlugInValue) {\n      if (plugInValue.length === 0) {\n        if (plugInDirtyState) {\n          errors.plugIn = \"Please select Plug-In\";\n        }\n        formIsValid = false;\n      }\n    }\n\n    if (hcaValue.trim() === \"\") {\n      if (hcaDirtyState) {\n        errors.hca = \"Please enter Health Port in digit\";\n      }\n      formIsValid = false;\n    } else if (hcaValue.length !== 4) {\n      if (hcaDirtyState) {\n        errors.hca = \"Health Port must have 4 digit\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      serverFormIsValid: formIsValid,\n      errorsServerForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleClientFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n\n    if (fieldName === \"agentId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentClientForm.agentId.value;\n      }\n      currentClientForm.agentId.value = updatedValue;\n      currentClientForm.agentId.dirtyState = true;\n    } else if (fieldName === \"group\") {\n      currentClientForm.group.value = updatedValue;\n      currentClientForm.group.dirtyState = true;\n      //  this.changeAidTidForClient(updatedValue);\n    } else if (fieldName === \"clientId\") {\n      currentClientForm.clientId.value = updatedValue;\n      currentClientForm.clientId.dirtyState = true;\n    } else if (fieldName === \"clientSecret\") {\n      currentClientForm.clientSecret.value = updatedValue;\n      currentClientForm.clientSecret.dirtyState = true;\n    } else if (fieldName === \"duration\") {\n      let durationAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentClientForm.duration.value;\n      if (durationAfterValidityCheck.length > 4) {\n        durationAfterValidityCheck = currentClientForm.duration.value;\n      }\n      currentClientForm.duration.value = durationAfterValidityCheck;\n      currentClientForm.duration.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentClientForm.OAuth2.value = updatedValue;\n      currentClientForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentClientForm.host.value = updatedValue;\n      currentClientForm.host.dirtyState = true;\n    } else if (fieldName === \"localPort\") {\n      let localPortAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentClientForm.localPort.value;\n      if (localPortAfterValidityCheck.length > 4) {\n        localPortAfterValidityCheck = currentClientForm.localPort.value;\n      }\n      currentClientForm.localPort.value = localPortAfterValidityCheck;\n      currentClientForm.localPort.dirtyState = true;\n    } else if (fieldName === \"targetId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentClientForm.targetId.value;\n      }\n      currentClientForm.targetId.value = updatedValue;\n      currentClientForm.targetId.dirtyState = true;\n    } else if (fieldName === \"proxy\") {\n      currentClientForm.proxy.value = updatedValue;\n      currentClientForm.proxy.dirtyState = true;\n    } else if (fieldName === \"noproxy\") {\n      currentClientForm.noproxy.value = updatedValue;\n      currentClientForm.noproxy.dirtyState = true;\n    } else if (fieldName === \"allowPlugIn\") {\n      currentClientForm.allowPlugIn.value = updatedValue;\n      currentClientForm.allowPlugIn.dirtyState = true;\n    } else if (fieldName === \"plugIn\") {\n      let options = e.target.options;\n      let value = [];\n      for (let i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n      currentClientForm.plugIn.value = value;\n      currentClientForm.plugIn.dirtyState = true;\n    } else if (fieldName === \"hca\") {\n      let hcaAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentClientForm.hca.value;\n      if (hcaAfterValidityCheck.length > 4) {\n        hcaAfterValidityCheck = currentClientForm.hca.value;\n      }\n      currentClientForm.hca.value = hcaAfterValidityCheck;\n      currentClientForm.hca.dirtyState = true;\n    } else if (fieldName === \"os\") {\n      currentClientForm.os.value = updatedValue;\n      currentClientForm.os.dirtyState = true;\n    }\n\n    this.setState({\n      clientForm: currentClientForm,\n    });\n\n    this.handleClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleClientFormValidation() {\n    let currentFormData = this.state.clientForm;\n    let agentIdValue = currentFormData.agentId.value;\n    let agentIdDirtyState = currentFormData.agentId.dirtyState;\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let clientSecretValue = currentFormData.clientSecret.value;\n    let clientSecretDirtyState = currentFormData.clientSecret.dirtyState;\n    let durationValue = currentFormData.duration.value;\n    let durationDirtyState = currentFormData.duration.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    //let hostValue = currentFormData.host.value;\n    //let hostDirtyState = currentFormData.host.dirtyState;\n    let localPortValue = currentFormData.localPort.value;\n    let localPortDirtyState = currentFormData.localPort.dirtyState;\n    let targetIdValue = currentFormData.targetId.value;\n    let targetIdDirtyState = currentFormData.targetId.dirtyState;\n    let allowPlugInValue = currentFormData.allowPlugIn.value;\n    let plugInValue = currentFormData.plugIn.value;\n    let plugInDirtyState = currentFormData.plugIn.dirtyState;\n    let hcaValue = currentFormData.hca.value;\n    let hcaDirtyState = currentFormData.hca.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (agentIdValue.trim() === \"\") {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Please enter Agent Id\";\n      }\n      formIsValid = false;\n    } else if (agentIdValue.length < 6) {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Agent Id must have 6 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientSecretValue.trim() === \"\") {\n      if (clientSecretDirtyState) {\n        errors.clientSecret = \"Please enter Client Secret\";\n      }\n      formIsValid = false;\n    }\n\n    if (durationValue === \"\") {\n      if (durationDirtyState) {\n        errors.duration = \"Please enter Duration in digit\";\n      }\n      formIsValid = false;\n    } else if (durationValue < 1200) {\n      if (durationDirtyState) {\n        errors.duration = \"Duration at least 1200\";\n      }\n      formIsValid = false;\n    }\n\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    if (localPortValue.trim() === \"\") {\n      if (localPortDirtyState) {\n        errors.localPort = \"Please enter Local Port in digit\";\n      }\n      formIsValid = false;\n    } else if (localPortValue.length !== 4) {\n      if (localPortDirtyState) {\n        errors.localPort = \"Local Port must have 4 digit\";\n      }\n      formIsValid = false;\n    }\n\n    if (targetIdValue.trim() === \"\") {\n      if (targetIdDirtyState) {\n        errors.targetId = \"Please enter Target Id\";\n      }\n      formIsValid = false;\n    } else if (targetIdValue.length < 6) {\n      if (targetIdDirtyState) {\n        errors.targetId = \"Target Id must have 6 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (allowPlugInValue) {\n      if (plugInValue.length === 0) {\n        if (plugInDirtyState) {\n          errors.plugIn = \"Please select Plug-In\";\n        }\n        formIsValid = false;\n      }\n    }\n\n    if (hcaValue.trim() === \"\") {\n      if (hcaDirtyState) {\n        errors.hca = \"Please enter Health Port in digit\";\n      }\n      formIsValid = false;\n    } else if (hcaValue.length !== 4) {\n      if (hcaDirtyState) {\n        errors.hca = \"Health Port must have 4 digit\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      clientFormIsValid: formIsValid,\n      errorsClientForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  copyFromClientToServer() {\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n\n    currentServerForm.agentId.value = currentClientForm.agentId.value;\n    currentServerForm.group.value = currentClientForm.group.value;\n    currentServerForm.clientId.value = currentClientForm.clientId.value;\n    currentServerForm.clientSecret.value = currentClientForm.clientSecret.value;\n    currentServerForm.duration.value = currentClientForm.duration.value;\n    currentServerForm.OAuth2.value = currentClientForm.OAuth2.value;\n    currentServerForm.host.value = currentClientForm.host.value;\n    currentServerForm.proxy.value = currentClientForm.proxy.value;\n    currentServerForm.noproxy.value = currentClientForm.noproxy.value;\n    currentServerForm.allowPlugIn.value = currentClientForm.allowPlugIn.value;\n    currentServerForm.plugIn.value = currentClientForm.plugIn.value;\n\n    this.setState({\n      serverForm: currentServerForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from client\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  copyFromServerToClient() {\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n\n    currentClientForm.agentId.value = currentServerForm.agentId.value;\n    currentClientForm.group.value = currentServerForm.group.value;\n    currentClientForm.clientId.value = currentServerForm.clientId.value;\n    currentClientForm.clientSecret.value = currentServerForm.clientSecret.value;\n    currentClientForm.duration.value = currentServerForm.duration.value;\n    currentClientForm.OAuth2.value = currentServerForm.OAuth2.value;\n    currentClientForm.host.value = currentServerForm.host.value;\n    currentClientForm.proxy.value = currentServerForm.proxy.value;\n    currentClientForm.noproxy.value = currentServerForm.noproxy.value;\n    currentClientForm.allowPlugIn.value = currentServerForm.allowPlugIn.value;\n    currentClientForm.plugIn.value = currentServerForm.plugIn.value;\n\n    this.setState({\n      clientForm: currentClientForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from server\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  copyFromXServerToXClient() {\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n    let currentClientForm = Object.assign({}, this.state.xclientForm);\n\n    currentClientForm.group.value = currentServerForm.group.value;\n    currentClientForm.clientId.value = currentServerForm.clientId.value;\n    currentClientForm.OAuth2.value = currentServerForm.OAuth2.value;\n    currentClientForm.host.value = currentServerForm.host.value;\n\n    this.setState({\n      xclientForm: currentClientForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from x:server\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleXClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  copyFromXClientToXServer() {\n    let currentClientForm = Object.assign({}, this.state.xclientForm);\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n\n    currentServerForm.group.value = currentClientForm.group.value;\n    currentServerForm.clientId.value = currentClientForm.clientId.value;\n    currentServerForm.OAuth2.value = currentClientForm.OAuth2.value;\n    currentServerForm.host.value = currentClientForm.host.value;\n\n    this.setState({\n      xserverForm: currentServerForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from x:client\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleXServerFormValidation();\n  }\n  /* istanbul ignore next */\n  downloadFile(type) {\n    this.props.showGlobalMessage(\n      true,\n      true,\n      \"Please wait...\",\n      \"custom-success\"\n    );\n    let modalHeading = \"Copy and run below command\";\n    let buttons = [\n      {\n        className: \"btn btn-default customize-view-btn\",\n        action: \"closeModal\",\n        text: \"Close\",\n      },\n    ];\n    let commandData = \"\";\n\n    if (type === \"server\" || type === \"client\") {\n      commandData =\n        \" docker run -it -v $(pwd):/root/.ec enterpriseconnect/agent:v1 -cfg config.yml \\n ./agent -cfg config.yml\";\n    } else {\n      commandData =\n        \" docker run -it -v $(pwd):/root/.ec enterpriseconnect/agent:v1 -cfg config.yml \\n ./agent -dec -cfg config.yml\";\n    }\n    this.props.hideGlobalMessage();\n    this.props.showModal(modalHeading, commandData, buttons, true);\n  }\n\n  /* istanbul ignore next */\n  saveFile(type) {\n    this.props.showGlobalMessage(\n      true,\n      true,\n      \"Please wait...\",\n      \"custom-success\"\n    );\n    let prepareData = {};\n    let agentFormData = this.state.agentForm;\n    let modalHeading = \"Copy and run below command\";\n    let buttons = [\n      {\n        className: \"btn btn-default customize-view-btn\",\n        action: \"closeModal\",\n        text: \"Close\",\n      },\n    ];\n    if (type === \"server\") {\n      let serverFormData = Object.assign({}, this.state.serverForm);\n      prepareData.mod = serverFormData.mode.toLowerCase();\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.ecVersion = agentFormData.ecVersion.value;\n      prepareData.aid = serverFormData.agentId.value;\n      prepareData.grp = serverFormData.group.value;\n      prepareData.cid = serverFormData.clientId.value;\n      prepareData.csc = serverFormData.clientSecret.value;\n      prepareData.dur = parseInt(serverFormData.duration.value);\n      prepareData.oa2 = serverFormData.OAuth2.value;\n      prepareData.hst = serverFormData.host.value;\n      prepareData.zon = serverFormData.zone.value;\n      prepareData.cps = 0;\n      prepareData.sst = serverFormData.serviceUrl.value;\n      prepareData.rht = serverFormData.remoteHost.value;\n      prepareData.rpt = serverFormData.remotePort.value;\n      prepareData.pxy = serverFormData.proxy.value;\n      prepareData.nopxy = serverFormData.noproxy.value;\n      prepareData.plg = serverFormData.allowPlugIn.value;\n      prepareData.hca = serverFormData.hca.value;\n      prepareData.os = serverFormData.os.value;\n      prepareData.parent = \"65c77c4f-fdf4-4c6d-a703-48b12cc21b2d\";\n      prepareData.name = \"server\";\n      for (let statePlugIn of this.state.plugIns) {\n        if (serverFormData.plugIn.value.indexOf(statePlugIn.id) !== -1) {\n          prepareData[statePlugIn.id] = true;\n        } else {\n          prepareData[statePlugIn.id] = false;\n        }\n      }\n\n      fetch(this.props.baseUrl + \"generateServerScript\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n        body: JSON.stringify(prepareData),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /* if(respData.errorStatus.status === 'ok'){ */\n              sessionStorage.setItem(\"ServerData\", JSON.stringify(prepareData));\n              let commandData =\n                \" docker run -it -v $(pwd):/root/.ec enterpriseconnect/agent:v1 -cfg config.yml \\n ./agent -cfg config.yml\";\n              this.props.hideGlobalMessage();\n              this.props.showModal(modalHeading, commandData, buttons, true);\n              setTimeout(() => {\n                let selectedOs = \"\";\n                let selectedHost = \"\";\n                if (this.state.operatingSystems.length > 0) {\n                  selectedOs = this.state.operatingSystems[0].id;\n                }\n                if (this.state.gateways.length > 0) {\n                  selectedHost = this.state.gateways[0].id;\n                }\n                let serverForm = {\n                  mode: \"SERVER\",\n                  agentId: {\n                    value: serverFormData.agentId.value,\n                    dirtyState: false,\n                    type: serverFormData.agentId.type,\n                  },\n                  group: {\n                    value: serverFormData.group.value,\n                    dirtyState: false,\n                  },\n                  clientId: {\n                    value: serverFormData.clientId.value,\n                    dirtyState: false,\n                  },\n                  clientSecret: {\n                    value: serverFormData.clientSecret.value,\n                    dirtyState: false,\n                    type: serverFormData.clientSecret.type,\n                  },\n                  duration: { value: \"\", dirtyState: false },\n                  OAuth2: {\n                    value: serverFormData.OAuth2.value,\n                    dirtyState: false,\n                  },\n                  host: { value: selectedHost, dirtyState: false },\n                  zone: { value: serverFormData.zone.value, dirtyState: false },\n                  serviceUrl: {\n                    value: serverFormData.serviceUrl.value,\n                    dirtyState: false,\n                  },\n                  remoteHost: { value: \"\", dirtyState: false },\n                  remotePort: { value: \"\", dirtyState: false },\n                  proxy: { value: \"\", dirtyState: false },\n                  noproxy: { value: \"\", dirtyState: false },\n                  allowPlugIn: { value: false, dirtyState: false },\n                  plugIn: { value: [], dirtyState: false },\n                  hca: { value: \"\", dirtyState: false },\n                  os: { value: selectedOs, dirtyState: false },\n                };\n\n                let filename = \"server.yml\";\n                let data = \"\";\n                if (agentFormData.ecVersion.value === \"v1.hokkaido.212\") {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    serverFormData.mode.toLowerCase() +\n                    \"\\n    zon: \" +\n                    serverFormData.zone.value +\n                    \"\\n    grp: \" +\n                    serverFormData.group.value +\n                    \"\\n    sst: \" +\n                    serverFormData.serviceUrl.value.split(\".io\")[0] +\n                    \".io\" +\n                    \"\\n    hst: \" +\n                    serverFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    serverFormData.clientId.value +\n                    \"\\n    csc: \" +\n                    serverFormData.clientSecret.value +\n                    \"\\n    oa2: \" +\n                    serverFormData.OAuth2.value +\n                    \"\\n    dur: \" +\n                    serverFormData.duration.value +\n                    \"\\n    aid: \" +\n                    serverFormData.agentId.value +\n                    \"\\n    rpt: \" +\n                    '\"' +\n                    serverFormData.remotePort.value +\n                    '\"' +\n                    \"\\n    rht: \" +\n                    serverFormData.remoteHost.value +\n                    \"\\n    hca: \" +\n                    '\"' +\n                    prepareData.hca +\n                    '\"';\n                  if (serverFormData.proxy.value.trim() !== \"\") {\n                    data = data + \"\\n    pxy: \" + serverFormData.proxy.value;\n                  }\n                } else {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    serverFormData.mode.toLowerCase() +\n                    \"\\n    zon: \" +\n                    serverFormData.zone.value +\n                    \"\\n    grp: \" +\n                    serverFormData.group.value +\n                    \"\\n    sst: \" +\n                    serverFormData.serviceUrl.value +\n                    \"\\n    hst: \" +\n                    serverFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    serverFormData.clientId.value +\n                    \"\\n    csc: \" +\n                    serverFormData.clientSecret.value +\n                    \"\\n    oa2: \" +\n                    serverFormData.OAuth2.value +\n                    \"\\n    dur: \" +\n                    serverFormData.duration.value +\n                    \"\\n    aid: \" +\n                    serverFormData.agentId.value +\n                    \"\\n    rpt: \" +\n                    '\":' +\n                    serverFormData.remotePort.value +\n                    '\"' +\n                    \"\\n    rht: \" +\n                    serverFormData.remoteHost.value +\n                    \"\\n    hca: \" +\n                    '\":' +\n                    prepareData.hca +\n                    '\"';\n                }\n\n                if (serverFormData.allowPlugIn.value) {\n                  data =\n                    data +\n                    \"\\n    plg: \" +\n                    serverFormData.allowPlugIn.value +\n                    \"\\n    vln: \" +\n                    prepareData.vln +\n                    \"\\n    tls: \" +\n                    prepareData.tls;\n                }\n\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                this.setState({\n                  serverForm: serverForm,\n                  serverFormIsValid: false,\n                });\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"x:server\") {\n      let serverFormData = Object.assign({}, this.state.xserverForm);\n      prepareData.mod = serverFormData.mode.toLowerCase();\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.ecVersion = agentFormData.ecVersion.value;\n      prepareData.grp = serverFormData.group.value;\n      prepareData.cid = serverFormData.clientId.value;\n      prepareData.oa2 = serverFormData.OAuth2.value;\n      prepareData.hst = serverFormData.host.value;\n      prepareData.cps = 0;\n      prepareData.rht = serverFormData.remoteHost.value;\n      prepareData.parent = \"65c77c4f-fdf4-4c6d-a703-48b12cc21b2d\";\n      prepareData.name = \"server\";\n\n      fetch(this.props.baseUrl + \"generateXServerScript\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n        body: JSON.stringify(prepareData),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /* if(respData.errorStatus.status === 'ok'){ */\n              let commandData =\n                \" docker run -it -v $(pwd):/root/.ec enterpriseconnect/agent:v1 -cfg config.yml \\n ./agent -dec -cfg config.yml \";\n              sessionStorage.setItem(\n                \"XServerData\",\n                JSON.stringify(prepareData)\n              );\n              this.props.hideGlobalMessage();\n              this.props.showModal(modalHeading, commandData, buttons, true);\n              setTimeout(() => {\n                let selectedHost = \"\";\n                if (this.state.gateways.length > 0) {\n                  selectedHost = this.state.gateways[0].id;\n                }\n                let serverForm = {\n                  mode: \"X:SERVER\",\n                  group: {\n                    value: serverFormData.group.value,\n                    dirtyState: false,\n                  },\n                  clientId: {\n                    value: serverFormData.clientId.value,\n                    dirtyState: false,\n                  },\n                  OAuth2: {\n                    value: serverFormData.OAuth2.value,\n                    dirtyState: false,\n                  },\n                  host: { value: selectedHost, dirtyState: false },\n                  remoteHost: { value: \"\", dirtyState: false },\n                };\n\n                let filename = \"x:server.yml\";\n                let data = \"\";\n                if (agentFormData.ecVersion.value === \"v1.hokkaido.212\") {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    serverFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    serverFormData.group.value +\n                    \"\\n  hst: \" +\n                    serverFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    serverFormData.clientId.value +\n                    \"\\n   oa2: \" +\n                    serverFormData.OAuth2.value +\n                    \"\\n   rht: \" +\n                    serverFormData.remoteHost.value;\n                } else {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    serverFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    serverFormData.group.value +\n                    \"\\n    hst: \" +\n                    serverFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    serverFormData.clientId.value +\n                    \"\\n    oa2: \" +\n                    serverFormData.OAuth2.value +\n                    \"\\n  rht: \" +\n                    serverFormData.remoteHost.value;\n                }\n\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                this.setState({\n                  xserverForm: serverForm,\n                  xserverFormIsValid: false,\n                });\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"x:client\") {\n      let xClientFormData = Object.assign({}, this.state.xclientForm);\n      prepareData.mod = xClientFormData.mode.toLowerCase();\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.ecVersion = agentFormData.ecVersion.value;\n      prepareData.grp = xClientFormData.group.value;\n      prepareData.cid = xClientFormData.clientId.value;\n      prepareData.oa2 = xClientFormData.OAuth2.value;\n      prepareData.hst = xClientFormData.host.value;\n      prepareData.cps = 0;\n      prepareData.rht = xClientFormData.remoteHost.value;\n      prepareData.parent = \"65c77c4f-fdf4-4c6d-a703-48b12cc21b2d\";\n      prepareData.name = \"server\";\n\n      fetch(this.props.baseUrl + \"generateXClientScript\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n        body: JSON.stringify(prepareData),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /* if(respData.errorStatus.status === 'ok'){ */\n              let commandData =\n                \" docker run -it -v $(pwd):/root/.ec enterpriseconnect/agent:v1 -cfg config.yml \\n ./agent -dec -cfg config.yml \";\n              sessionStorage.setItem(\n                \"XClientData\",\n                JSON.stringify(prepareData)\n              );\n              this.props.hideGlobalMessage();\n              this.props.showModal(modalHeading, commandData, buttons, true);\n              setTimeout(() => {\n                let selectedHost = \"\";\n                if (this.state.gateways.length > 0) {\n                  selectedHost = this.state.gateways[0].id;\n                }\n                let XClientForm = {\n                  mode: \"X:CLIENT\",\n                  group: {\n                    value: xClientFormData.group.value,\n                    dirtyState: false,\n                  },\n                  clientId: {\n                    value: xClientFormData.clientId.value,\n                    dirtyState: false,\n                  },\n                  OAuth2: {\n                    value: xClientFormData.OAuth2.value,\n                    dirtyState: false,\n                  },\n                  host: { value: selectedHost, dirtyState: false },\n                  remoteHost: { value: \"\", dirtyState: false },\n                };\n\n                let filename = \"x:client.yml\";\n                let data = \"\";\n                if (agentFormData.ecVersion.value === \"v1.hokkaido.212\") {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    xClientFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    xClientFormData.group.value +\n                    \"\\n  hst: \" +\n                    xClientFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    xClientFormData.clientId.value +\n                    \"\\n   oa2: \" +\n                    xClientFormData.OAuth2.value +\n                    \"\\n   rht: \" +\n                    xClientFormData.remoteHost.value;\n                } else {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    xClientFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    xClientFormData.group.value +\n                    \"\\n    hst: \" +\n                    xClientFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    xClientFormData.clientId.value +\n                    \"\\n    oa2: \" +\n                    xClientFormData.OAuth2.value +\n                    \"\\n  rht: \" +\n                    xClientFormData.remoteHost.value;\n                }\n\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                this.setState({\n                  xClientFormData: XClientForm,\n                  xclientFormIsValid: false,\n                });\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"client\") {\n      let clientFormData = this.state.clientForm;\n      prepareData.mod = clientFormData.mode.toLowerCase();\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.ecVersion = agentFormData.ecVersion.value;\n      prepareData.aid = clientFormData.agentId.value;\n      prepareData.grp = clientFormData.group.value;\n      prepareData.cps = 0;\n      prepareData.cid = clientFormData.clientId.value;\n      prepareData.csc = clientFormData.clientSecret.value;\n      prepareData.dur = parseInt(clientFormData.duration.value);\n      prepareData.oa2 = clientFormData.OAuth2.value;\n      prepareData.hst = clientFormData.host.value;\n      prepareData.lpt = clientFormData.localPort.value;\n      prepareData.tid = clientFormData.targetId.value;\n      prepareData.pxy = clientFormData.proxy.value;\n      prepareData.nopxy = clientFormData.noproxy.value;\n      prepareData.plg = clientFormData.allowPlugIn.value;\n      prepareData.hca = clientFormData.hca.value;\n      prepareData.os = clientFormData.os.value;\n      prepareData.parent = \"65c77c4f-fdf4-4c6d-a703-48b12cc21b2d\";\n      prepareData.name = \"client\";\n      for (let statePlugIn of this.state.plugIns) {\n        if (clientFormData.plugIn.value.indexOf(statePlugIn.id) !== -1) {\n          prepareData[statePlugIn.id] = true;\n        } else {\n          prepareData[statePlugIn.id] = false;\n        }\n      }\n\n      fetch(this.props.baseUrl + \"generateClientScript\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.props.authToken,\n        },\n        body: JSON.stringify(prepareData),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /*  if(respData.errorStatus.status === 'ok'){ */\n              this.props.hideGlobalMessage();\n              let commandData =\n                \" docker run -it -v $(pwd):/root/.ec enterpriseconnect/agent:v1 -cfg config.yml \\n ./agent -cfg config.yml \";\n              sessionStorage.setItem(\"ClientData\", JSON.stringify(prepareData));\n              this.props.showModal(modalHeading, commandData, buttons, true);\n              setTimeout(() => {\n                let selectedOs = \"\";\n                let selectedHost = \"\";\n                if (this.state.operatingSystems.length > 0) {\n                  selectedOs = this.state.operatingSystems[0].id;\n                }\n                if (this.state.gateways.length > 0) {\n                  selectedHost = this.state.gateways[0].id;\n                }\n                let clientForm = {\n                  mode: \"CLIENT\",\n                  agentId: {\n                    value: clientFormData.agentId.value,\n                    dirtyState: false,\n                    type: clientFormData.agentId.type,\n                  },\n                  group: {\n                    value: clientFormData.group.value,\n                    dirtyState: false,\n                  },\n                  clientId: {\n                    value: clientFormData.agentId.value,\n                    dirtyState: false,\n                  },\n                  clientSecret: {\n                    value: clientFormData.clientSecret.value,\n                    dirtyState: false,\n                    type: clientFormData.clientSecret.type,\n                  },\n                  duration: { value: \"\", dirtyState: false },\n                  OAuth2: {\n                    value: clientFormData.OAuth2.value,\n                    dirtyState: false,\n                  },\n                  host: { value: selectedHost, dirtyState: false },\n                  localPort: { value: \"\", dirtyState: false },\n                  targetId: {\n                    value: clientFormData.targetId.value,\n                    dirtyState: false,\n                    type: clientFormData.targetId.type,\n                  },\n                  proxy: { value: \"\", dirtyState: false },\n                  noproxy: { value: \"\", dirtyState: false },\n                  allowPlugIn: { value: false, dirtyState: false },\n                  plugIn: { value: [], dirtyState: false },\n                  hca: { value: \"\", dirtyState: false },\n                  os: { value: selectedOs, dirtyState: false },\n                };\n\n                let filename = \"client.yml\";\n                let data = \"\";\n                if (agentFormData.ecVersion.value === \"v1.hokkaido.212\") {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    clientFormData.mode.toLowerCase() +\n                    \"\\n    aid: \" +\n                    clientFormData.agentId.value +\n                    \"\\n    tid: \" +\n                    clientFormData.targetId.value +\n                    \"\\n    hst: \" +\n                    clientFormData.host.value +\n                    \"\\n    cid: \" +\n                    clientFormData.clientId.value +\n                    \"\\n    csc: \" +\n                    clientFormData.clientSecret.value +\n                    \"\\n    oa2: \" +\n                    clientFormData.OAuth2.value +\n                    \"\\n    dur: \" +\n                    clientFormData.duration.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    grp: \" +\n                    clientFormData.group.value +\n                    \"\\n    lpt: \" +\n                    '\"' +\n                    clientFormData.localPort.value +\n                    '\"' +\n                    \"\\n    hca: \" +\n                    '\"' +\n                    prepareData.hca +\n                    '\"';\n                  if (clientFormData.proxy.value.trim() !== \"\") {\n                    data = data + \"\\n    pxy: \" + clientFormData.proxy.value;\n                  }\n                } else {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    clientFormData.mode.toLowerCase() +\n                    \"\\n    aid: \" +\n                    clientFormData.agentId.value +\n                    \"\\n    tid: \" +\n                    clientFormData.targetId.value +\n                    \"\\n    hst: \" +\n                    clientFormData.host.value +\n                    \"\\n    cid: \" +\n                    clientFormData.clientId.value +\n                    \"\\n    csc: \" +\n                    clientFormData.clientSecret.value +\n                    \"\\n    oa2: \" +\n                    clientFormData.OAuth2.value +\n                    \"\\n    dur: \" +\n                    clientFormData.duration.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    grp: \" +\n                    clientFormData.group.value +\n                    \"\\n    lpt: \" +\n                    '\":' +\n                    clientFormData.localPort.value +\n                    '\"' +\n                    \"\\n    hca: \" +\n                    '\":' +\n                    prepareData.hca +\n                    '\"';\n                }\n\n                if (clientFormData.allowPlugIn.value) {\n                  data =\n                    data +\n                    \"\\n    plg: \" +\n                    clientFormData.allowPlugIn.value +\n                    \"\\n    vln: \" +\n                    prepareData.vln +\n                    \"\\n    tls: \" +\n                    prepareData.tls;\n                }\n\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                this.setState({\n                  clientForm: clientForm,\n                  clientFormIsValid: false,\n                });\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  /* istanbul ignore next */\n  showHideField(e, formName, fieldName) {\n    let currentForm = {};\n    if (formName === \"serverForm\") {\n      currentForm = Object.assign({}, this.state.serverForm);\n    } else if (formName === \"clientForm\") {\n      currentForm = Object.assign({}, this.state.clientForm);\n    }\n\n    if (currentForm[fieldName].type === \"password\") {\n      currentForm[fieldName].type = \"text\";\n    } else {\n      currentForm[fieldName].type = \"password\";\n    }\n\n    if (formName === \"serverForm\") {\n      this.setState({\n        serverForm: currentForm,\n      });\n    } else if (formName === \"clientForm\") {\n      this.setState({\n        clientForm: currentForm,\n      });\n    }\n  }\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div className=\"row Maintainagentcreate\">\n        <div className=\"col-md-12 mt-2\">\n          <div className=\"row\">\n            <div className=\"text-left\">\n              <ul className=\"breadcrumb\">\n                <li className=\"breadcrumb-item active\">Maintain</li>\n                <li className=\"breadcrumb-item active\">Create Agent</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"centered-div\">\n            <div className=\"centered-div-header\">\n              <div className=\"row maintainagentcreate-header\">\n                <div className=\"col-md-12\">\n                  <h6 id=\"maintainagentcreate-title\">\n                    Create Agent <small>Creating parameters.</small>\n                  </h6>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"row form-body\">\n                <div className=\"col-sm-4\">\n                  <h6>Agent Mode</h6>\n                  <div className=\"col-sm-12 mb-2\">\n                    {this.state.agentModeButtons.map(\n                      (agentModeButton, buttonIndex) => {\n                        return (\n                          <button\n                            key={\"agentModeButton\" + buttonIndex}\n                            type=\"button\"\n                            id={\"agentModeButton\" + buttonIndex}\n                            name=\"agentMode\"\n                            className={\n                              agentModeButton.value ===\n                              this.state.agentForm.agentMode.value\n                                ? \"btn btn-sm mr-2 btn-selected\"\n                                : \"btn btn-sm mr-2 btn-deselected\"\n                            }\n                            onClick={this.handleChangeAgentMode.bind(\n                              this,\n                              agentModeButton.value\n                            )}\n                          >\n                            {agentModeButton.text}\n                          </button>\n                        );\n                      }\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-sm-2\">\n                  <h6>&nbsp;</h6>\n                  <div className=\"custom-control custom-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input custom-control-checkbox\"\n                      id=\"debugMode\"\n                      name=\"debugMode\"\n                      checked={this.state.agentForm.debugMode.value}\n                      onChange={(event) => {\n                        this.handleAgentFormData(event);\n                      }}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"debugMode\">\n                      <small className=\"theme-color\">\n                        <strong>DEBUG MODE ENABLED</strong>\n                      </small>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"col-sm-3\">\n                  <h6 className=\"ml-0\">Subscription</h6>\n                  <select\n                    className=\"form-control form-control-sm\"\n                    name=\"subscriptionId\"\n                    value={this.state.agentForm.subscriptionId.value}\n                    onChange={(event) => {\n                      this.handleAgentFormData(event);\n                    }}\n                  >\n                    {this.state.subscriptions.map(\n                      (subscription, subscriptionIndex) => {\n                        return (\n                          <option\n                            key={\"subscriptionOption\" + subscriptionIndex}\n                            value={subscription.licenseId}\n                          >\n                            {subscription.licenseId}\n                          </option>\n                        );\n                      }\n                    )}\n                  </select>\n                </div>\n                <div className=\"col-sm-3\">\n                  <h6 className=\"ml-0\">EC Version</h6>\n                  <select\n                    className=\"form-control form-control-sm\"\n                    name=\"ecVersion\"\n                    value={this.state.agentForm.ecVersion.value}\n                    onChange={(event) => {\n                      this.handleAgentFormData(event);\n                    }}\n                  >\n                    {this.state.ecVersions.map((ecVersion, ecVersionIndex) => {\n                      return (\n                        <option\n                          key={\"ecVersionOption\" + ecVersionIndex}\n                          value={ecVersion.ecVersionIndex}\n                        >\n                          {ecVersion.ecVersion}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </div>\n              <hr></hr>\n              {this.state.agentForm.agentMode.value === 2 ? (\n                <div className=\"changeable-form maintainagentcreate-body server-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.serverForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.serverForm.group.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        >\n                          {this.state.groups.map((group, groupIndex) => {\n                            return (\n                              <option\n                                key={\"groupOption\" + groupIndex}\n                                value={group.groupId}\n                              >\n                                {group.groupId}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Agent ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />{\" \"}\n                        {this.state.serverForm.agentId.type === \"password\" ? (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"serverForm\",\n                                \"agentId\"\n                              );\n                            }}\n                            className=\"fa fa-eye cursor-pointer\"\n                            title=\"Show\"\n                          ></i>\n                        ) : (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"serverForm\",\n                                \"agentId\"\n                              );\n                            }}\n                            className=\"fa fa-eye-slash cursor-pointer\"\n                            title=\"Hide\"\n                          ></i>\n                        )}\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type={this.state.serverForm.agentId.type}\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"agentId\"\n                          value={this.state.serverForm.agentId.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"agentId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.serverForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client Secret{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />{\" \"}\n                        {this.state.serverForm.clientSecret.type ===\n                        \"password\" ? (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"serverForm\",\n                                \"clientSecret\"\n                              );\n                            }}\n                            className=\"fa fa-eye cursor-pointer\"\n                            title=\"Show\"\n                          ></i>\n                        ) : (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"serverForm\",\n                                \"clientSecret\"\n                              );\n                            }}\n                            className=\"fa fa-eye-slash cursor-pointer\"\n                            title=\"Hide\"\n                          ></i>\n                        )}\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type={this.state.serverForm.clientSecret.type}\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientSecret\"\n                          value={this.state.serverForm.clientSecret.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"clientSecret\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Duration{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"duration\"\n                          value={this.state.serverForm.duration.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"duration\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.serverForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.serverForm.host.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        >\n                          {this.state.gateways.map((gateway, gatewayIndex) => {\n                            return (\n                              <option\n                                key={\"gatewayOption\" + gatewayIndex}\n                                value={gateway.id}\n                              >\n                                {gateway.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Zone <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"zone\"\n                          value={this.state.serverForm.zone.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"zone\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Service URL{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"serviceUrl\"\n                          value={this.state.serverForm.serviceUrl.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"serviceUrl\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.serverForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Port{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remotePort\"\n                          value={this.state.serverForm.remotePort.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"remotePort\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Health Port{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"hca\"\n                          value={this.state.serverForm.hca.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"hca\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Operating System{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"os\"\n                          value={this.state.serverForm.os.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        >\n                          {this.state.operatingSystems.map((os, osIndex) => {\n                            return (\n                              <option key={\"osOption\" + osIndex} value={os.id}>\n                                {os.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">Proxy</div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"proxy\"\n                          value={this.state.serverForm.proxy.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">No Proxy</div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"noproxy\"\n                          value={this.state.serverForm.noproxy.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Allow Plug-in{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <div className=\"custom-control custom-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input custom-control-checkbox\"\n                            id=\"allowPlugIn\"\n                            name=\"allowPlugIn\"\n                            checked={this.state.serverForm.allowPlugIn.value}\n                            onChange={(event) => {\n                              this.handleServerFormData(event);\n                            }}\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"allowPlugIn\"\n                          ></label>\n                        </div>\n                      </div>\n                    </div>\n                    {this.state.serverForm.allowPlugIn.value ? (\n                      <div className=\"col-sm-3\">\n                        <div className=\"col-sm-12 label\">\n                          Plug-in{\" \"}\n                          <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                        </div>\n                        <div className=\"col-sm-12 mb-2\">\n                          <select\n                            multiple\n                            className=\"form-control form-control-sm\"\n                            style={{ height: \"45px\" }}\n                            name=\"plugIn\"\n                            value={this.state.serverForm.plugIn.value}\n                            onChange={(event) => {\n                              this.handleServerFormData(event);\n                            }}\n                          >\n                            {this.state.plugIns.map((plugIn, plugInIndex) => {\n                              return (\n                                <option\n                                  key={\"plugInOption\" + plugInIndex}\n                                  value={plugIn.id}\n                                >\n                                  {plugIn.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                          <small className=\"text-danger\">\n                            {this.state.errorsServerForm[\"plugIn\"]}\n                          </small>\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      <img\n                        alt=\"copy\"\n                        src={CopyIcon}\n                        height=\"15px\"\n                      />\n                      <button\n                        onClick={this.copyFromClientToServer.bind(this)}\n                        href=\"#\"\n                        className=\"theme-color cursor-pointer ml-1 agent-create-btn\"\n                      >\n                        <small>Copy details from client</small>\n                      </button>\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        id=\"create-server-btn\"\n                        disabled={!this.state.serverFormIsValid}\n                        onClick={this.saveFile.bind(this, \"server\")}\n                        className=\"btn btn-sm customize-view-btn mr-2\"\n                      >\n                        SAVE SCRIPT\n                      </button>\n                      <button\n                        id=\"create-server-btn\"\n                        disabled={!this.state.serverFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"server\")}\n                        className=\"btn btn-sm customize-view-btn ml-2\"\n                      >\n                        DOWNLOAD SCRIPT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 3 ? (\n                <div className=\"changeable-form maintainagentcreate-body client-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.clientForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.clientForm.group.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        >\n                          {this.state.groups.map((group, groupIndex) => {\n                            return (\n                              <option\n                                key={\"groupOption\" + groupIndex}\n                                value={group.groupId}\n                              >\n                                {group.groupId}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Agent ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />{\" \"}\n                        {this.state.clientForm.agentId.type === \"password\" ? (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"clientForm\",\n                                \"agentId\"\n                              );\n                            }}\n                            className=\"fa fa-eye cursor-pointer\"\n                            title=\"Show\"\n                          ></i>\n                        ) : (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"clientForm\",\n                                \"agentId\"\n                              );\n                            }}\n                            className=\"fa fa-eye-slash cursor-pointer\"\n                            title=\"Hide\"\n                          ></i>\n                        )}\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type={this.state.clientForm.agentId.type}\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"agentId\"\n                          value={this.state.clientForm.agentId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"agentId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.clientForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client Secret{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />{\" \"}\n                        {this.state.clientForm.clientSecret.type ===\n                        \"password\" ? (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"clientForm\",\n                                \"clientSecret\"\n                              );\n                            }}\n                            className=\"fa fa-eye cursor-pointer\"\n                            title=\"Show\"\n                          ></i>\n                        ) : (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"clientForm\",\n                                \"clientSecret\"\n                              );\n                            }}\n                            className=\"fa fa-eye-slash cursor-pointer\"\n                            title=\"Hide\"\n                          ></i>\n                        )}\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type={this.state.clientForm.clientSecret.type}\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientSecret\"\n                          value={this.state.clientForm.clientSecret.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"clientSecret\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Duration{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"duration\"\n                          value={this.state.clientForm.duration.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"duration\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.clientForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.clientForm.host.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        >\n                          {this.state.gateways.map((gateway, gatewayIndex) => {\n                            return (\n                              <option\n                                key={\"gatewayOption\" + gatewayIndex}\n                                value={gateway.id}\n                              >\n                                {gateway.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Local Port{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"localPort\"\n                          value={this.state.clientForm.localPort.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"localPort\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Target ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />{\" \"}\n                        {this.state.clientForm.targetId.type === \"password\" ? (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"clientForm\",\n                                \"targetId\"\n                              );\n                            }}\n                            className=\"fa fa-eye cursor-pointer\"\n                            title=\"Show\"\n                          ></i>\n                        ) : (\n                          <i\n                            onClick={(event) => {\n                              this.showHideField(\n                                event,\n                                \"clientForm\",\n                                \"targetId\"\n                              );\n                            }}\n                            className=\"fa fa-eye-slash cursor-pointer\"\n                            title=\"Hide\"\n                          ></i>\n                        )}\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type={this.state.clientForm.targetId.type}\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"targetId\"\n                          value={this.state.clientForm.targetId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"targetId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">Proxy</div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"proxy\"\n                          value={this.state.clientForm.proxy.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">No Proxy</div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"noproxy\"\n                          value={this.state.clientForm.noproxy.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Health Port{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"hca\"\n                          value={this.state.clientForm.hca.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"hca\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Operating System{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"os\"\n                          value={this.state.clientForm.os.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        >\n                          {this.state.operatingSystems.map((os, osIndex) => {\n                            return (\n                              <option key={\"osOption\" + osIndex} value={os.id}>\n                                {os.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Allow Plug-in{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <div className=\"custom-control custom-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input custom-control-checkbox\"\n                            id=\"allowPlugIn\"\n                            name=\"allowPlugIn\"\n                            checked={this.state.clientForm.allowPlugIn.value}\n                            onChange={(event) => {\n                              this.handleClientFormData(event);\n                            }}\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"allowPlugIn\"\n                          ></label>\n                        </div>\n                      </div>\n                    </div>\n                    {this.state.clientForm.allowPlugIn.value ? (\n                      <div className=\"col-sm-3\">\n                        <div className=\"col-sm-12 label\">\n                          Plug-in{\" \"}\n                          <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                        </div>\n                        <div className=\"col-sm-12 mb-2\">\n                          <select\n                            multiple\n                            className=\"form-control form-control-sm\"\n                            style={{ height: \"45px\" }}\n                            name=\"plugIn\"\n                            value={this.state.clientForm.plugIn.value}\n                            onChange={(event) => {\n                              this.handleClientFormData(event);\n                            }}\n                          >\n                            {this.state.plugIns.map((plugIn, plugInIndex) => {\n                              return (\n                                <option\n                                  key={\"plugInOption\" + plugInIndex}\n                                  value={plugIn.id}\n                                >\n                                  {plugIn.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                          <small className=\"text-danger\">\n                            {this.state.errorsClientForm[\"plugIn\"]}\n                          </small>\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      <img\n                        alt=\"copy\"\n                        src={CopyIcon}\n                        height=\"15px\"\n                      />\n                      <button\n                        onClick={this.copyFromServerToClient.bind(this)}\n                        href=\"#\"\n                        className=\"theme-color cursor-pointer ml-1 agent-create-btn\"\n                      >\n                        <small>Copy details from server</small>\n                      </button>\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        id=\"create-client-btn\"\n                        disabled={!this.state.clientFormIsValid}\n                        onClick={this.saveFile.bind(this, \"client\")}\n                        className=\"btn btn-sm customize-view-btn mr-2\"\n                      >\n                        SAVE SCRIPT\n                      </button>\n                      <button\n                        id=\"create-client-btn\"\n                        disabled={!this.state.clientFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"client\")}\n                        className=\"btn btn-sm customize-view-btn ml-2\"\n                      >\n                        DOWNLOAD SCRIPT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 4 ? (\n                <div className=\"changeable-form maintainagentcreate-body x-server-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.xserverForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.xserverForm.group.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        >\n                          {this.state.groups.map((group, groupIndex) => {\n                            return (\n                              <option\n                                key={\"groupOption\" + groupIndex}\n                                value={group.groupId}\n                              >\n                                {group.groupId}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.xserverForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.xserverForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.xserverForm.host.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        >\n                          {this.state.gateways.map((gateway, gatewayIndex) => {\n                            return (\n                              <option\n                                key={\"gatewayOption\" + gatewayIndex}\n                                value={gateway.id}\n                              >\n                                {gateway.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.xserverForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      <img\n                        alt=\"copy\"\n                        src={CopyIcon}\n                        height=\"15px\"\n                      />\n                      <button\n                        onClick={this.copyFromXClientToXServer.bind(this)}\n                        href=\"#\"\n                        className=\"theme-color cursor-pointer ml-1 agent-create-btn\"\n                      >\n                        <small>Copy details from x:client</small>\n                      </button>\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        id=\"create-server-btn\"\n                        disabled={!this.state.xserverFormIsValid}\n                        onClick={this.saveFile.bind(this, \"x:server\")}\n                        className=\"btn btn-sm customize-view-btn mr-2\"\n                      >\n                        SAVE SCRIPT\n                      </button>\n\n                      <button\n                        id=\"create-server-btn\"\n                        disabled={!this.state.xserverFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"x:server\")}\n                        className=\"btn btn-sm customize-view-btn ml-2\"\n                      >\n                        DOWNLOAD SCRIPT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 5 ? (\n                <div className=\"changeable-form maintainagentcreate-body x-client-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.xclientForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.xclientForm.group.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        >\n                          {this.state.groups.map((group, groupIndex) => {\n                            return (\n                              <option\n                                key={\"groupOption\" + groupIndex}\n                                value={group.groupId}\n                              >\n                                {group.groupId}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.xclientForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.xclientForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.xclientForm.host.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        >\n                          {this.state.gateways.map((gateway, gatewayIndex) => {\n                            return (\n                              <option\n                                key={\"gatewayOption\" + gatewayIndex}\n                                value={gateway.id}\n                              >\n                                {gateway.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.xclientForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      <img\n                        alt=\"copy\"\n                        src={CopyIcon}\n                        height=\"15px\"\n                      />\n                      <button\n                        onClick={this.copyFromXServerToXClient.bind(this)}\n                        href=\"#\"\n                        className=\"theme-color cursor-pointer ml-1 agent-create-btn\"\n                      >\n                        <small>Copy details from x:server</small>\n                      </button>\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        id=\"create-client-btn\"\n                        disabled={!this.state.xclientFormIsValid}\n                        onClick={this.saveFile.bind(this, \"x:client\")}\n                        className=\"btn btn-sm customize-view-btn mr-2\"\n                      >\n                        SAVE SCRIPT\n                      </button>\n\n                      <button\n                        id=\"create-client-btn\"\n                        /*  disabled = {!this.state.xclientFormIsValid}  */\n                        onClick={this.downloadFile.bind(this, \"x:client\")}\n                        className=\"btn btn-sm customize-view-btn ml-2\"\n                      >\n                        DOWNLOAD SCRIPT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["Maintainagentcreate","props","state","agentForm","agentMode","value","dirtyState","gateway","businessId","businessName","requestor","requestedDate","customerEmail","bucAnd","vpc","debugMode","subscriptionId","ecVersion","errorsAgentForm","agentFormIsValid","serverForm","mode","agentId","type","group","clientId","clientSecret","duration","OAuth2","host","zone","serviceUrl","remoteHost","remotePort","proxy","noproxy","allowPlugIn","plugIn","hca","os","errorsServerForm","serverFormIsValid","clientForm","localPort","targetId","errorsClientForm","clientFormIsValid","xclientForm","errorsXClientForm","xclientFormIsValid","xserverForm","errorsXServerForm","xserverFormIsValid","subscriptions","agentModeButtons","text","gateways","name","id","businesses","ecVersions","ecVersionIndex","groups","ecSubVersions","ecVersionId","osTypes","plugIns","environments","operatingSystems","isTesting","keyName","setTimeout","$","popover","this","enableToolTip","Object","assign","length","setState","selectedOs","showGlobalMessage","sessionStorage","getItem","respData","JSON","parse","allData","subscriptionData","groupData","keys","forEach","key","push","individualData","parent","hideGlobalMessage","newAgentMode","currentAgentForm","selectedSubscriptionId","selectedSubscription","filter","o","serviceUri","clientSc","uaaUrl","fetch","baseUrl","method","headers","Accept","Authorization","authToken","then","response","status","json","errorStatus","data","selectedGroupId","groupId","changeAidForServer","changeAidTidForClient","glist","modifiedGateways","gatewayKey","selectedGateway","indexGateway","cfURL","modifiedCfUrlObj","cfURLSplit","split","search","newCfURL","join","selectedGroup","ids","tid","aid","e","fieldName","target","updatedValue","checked","handleAgentFormValidation","currentFormData","businessIdValue","businessNameValue","businessNameDirtyState","requestorValue","requestorDirtyState","requestedDateValue","requestedDateDirtyState","customerEmailValue","customerEmailDirtyState","bucAndValue","bucAndDirtyState","formIsValid","errors","trim","currentServerForm","durationAfterValidityCheck","validity","valid","remotePortAfterValidityCheck","options","i","l","selected","hcaAfterValidityCheck","handleServerFormValidation","handleXServerFormValidation","groupValue","groupDirtyState","clientIdValue","clientIdDirtyState","OAuth2Value","OAuth2DirtyState","remoteHostValue","remoteHostDirtyState","test","handleXClientFormValidation","agentIdValue","agentIdDirtyState","clientSecretValue","clientSecretDirtyState","durationValue","durationDirtyState","zoneValue","zoneDirtyState","serviceUrlValue","serviceUrlDirtyState","remotePortValue","remotePortDirtyState","allowPlugInValue","plugInValue","plugInDirtyState","hcaValue","hcaDirtyState","urlRegExp","currentClientForm","localPortAfterValidityCheck","handleClientFormValidation","localPortValue","localPortDirtyState","targetIdValue","targetIdDirtyState","commandData","showModal","className","action","prepareData","agentFormData","modalHeading","buttons","serverFormData","mod","toLowerCase","dbg","grp","cid","csc","dur","parseInt","oa2","hst","zon","cps","sst","rht","rpt","pxy","nopxy","plg","statePlugIn","indexOf","body","stringify","setItem","selectedHost","filename","vln","tls","blob","Blob","window","navigator","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","catch","err","console","log","xClientFormData","XClientForm","clientFormData","lpt","formName","currentForm","map","agentModeButton","buttonIndex","onClick","handleChangeAgentMode","bind","onChange","event","handleAgentFormData","htmlFor","subscription","subscriptionIndex","licenseId","alt","src","IconGreenSortingDown","disabled","defaultValue","handleServerFormData","groupIndex","showHideField","title","autoComplete","pattern","gatewayIndex","osIndex","multiple","style","height","plugInIndex","CopyIcon","copyFromClientToServer","saveFile","downloadFile","handleClientFormData","copyFromServerToClient","handleXServerFormData","copyFromXClientToXServer","handleXClientFormData","copyFromXServerToXClient","React","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","_e","f","TypeError","normalCompletion","didErr","call","step","next","_e2","_toConsumableArray","arrayLikeToArray","iter","from","unsupportedIterableToArray","_unsupportedIterableToArray","minLen","prototype","toString","slice","constructor"],"sourceRoot":""}