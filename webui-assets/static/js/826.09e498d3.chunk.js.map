{"version":3,"file":"static/js/826.09e498d3.chunk.js","mappings":"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","sources":["assets/images/copy.svg","assets/images/icon_arrowmore.svg","assets/images/icon_greensortingdown.svg","assets/images/icondelete_tablemaintainmonitor.svg","assets/images/iconedit_tablemaintainmonitor.svg","Maintain/Maintainagentedit.js","Maintain/Maintainagentupgrade.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../javascript/esm|C:/Users/s.shamsundar.chandak/Documents/ec-ui code/github-ec-ui/web-ui/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"20pt\",\n    height: \"20pt\",\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(0%,36.862745%,72.156863%)\",\n      fillOpacity: 1\n    },\n    d: \"M 13.527344 20 L 3.113281 20 C 1.847656 20 0.820312 18.972656 0.820312 17.707031 L 0.820312 6.457031 C 0.820312 5.195312 1.847656 4.167969 3.113281 4.167969 L 3.527344 4.167969 C 3.875 4.167969 4.152344 4.445312 4.152344 4.792969 C 4.152344 5.136719 3.875 5.417969 3.527344 5.417969 L 3.113281 5.417969 C 2.539062 5.417969 2.070312 5.882812 2.070312 6.457031 L 2.070312 17.707031 C 2.070312 18.28125 2.539062 18.75 3.113281 18.75 L 13.527344 18.75 C 14.101562 18.75 14.570312 18.28125 14.570312 17.707031 L 14.570312 17.292969 C 14.570312 16.945312 14.851562 16.667969 15.195312 16.667969 C 15.539062 16.667969 15.820312 16.945312 15.820312 17.292969 L 15.820312 17.707031 C 15.820312 18.972656 14.792969 20 13.527344 20 Z M 13.527344 20 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(0%,36.862745%,72.156863%)\",\n      fillOpacity: 1\n    },\n    d: \"M 16.863281 15 L 8.113281 15 C 6.847656 15 5.820312 13.972656 5.820312 12.707031 L 5.820312 2.292969 C 5.820312 1.027344 6.847656 0 8.113281 0 L 16.863281 0 C 18.125 0 19.152344 1.027344 19.152344 2.292969 L 19.152344 12.707031 C 19.152344 13.972656 18.125 15 16.863281 15 Z M 8.113281 1.25 C 7.539062 1.25 7.070312 1.71875 7.070312 2.292969 L 7.070312 12.707031 C 7.070312 13.28125 7.539062 13.75 8.113281 13.75 L 16.863281 13.75 C 17.4375 13.75 17.902344 13.28125 17.902344 12.707031 L 17.902344 2.292969 C 17.902344 1.71875 17.4375 1.25 16.863281 1.25 Z M 8.113281 1.25 \"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.d51832c167b1247f777ec70f6836e2d8.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconArrowmore(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"6px\",\n    height: \"10px\",\n    viewBox: \"0 0 6 10\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"ic_arrow_right_24px\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"path-1\",\n    points: \"0 10 5.1048951 5 0 0\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Welcome\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Dashboard-Ops\",\n    transform: \"translate(-182.000000, -264.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-45\",\n    transform: \"translate(64.000000, 172.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-4\",\n    transform: \"translate(23.000000, 56.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ic_arrow_right_24px\",\n    transform: \"translate(95.000000, 36.000000)\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask-2\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#path-1\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Path\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"\\\\uD83C\\\\uDFA8-Color\",\n    mask: \"url(#mask-2)\",\n    fill: \"#3B73B9\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-10.000000, -7.000000)\",\n    id: \"Shape\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 25,\n    height: 24\n  }))))))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconArrowmore);\nexport default __webpack_public_path__ + \"static/media/icon_arrowmore.7bff65e9afad56dab17d2d39fe214905.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconGreensortingdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"10px\",\n    height: \"5px\",\n    viewBox: \"0 0 10 5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"ic_arrow_drop_down_24px\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"path-1\",\n    points: \"0 0 5 5 10 0\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Welcome\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Dashboard-Ops\",\n    transform: \"translate(-306.000000, -453.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-26\",\n    transform: \"translate(242.000000, 445.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-18\",\n    transform: \"translate(1.000000, 0.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ic_arrow_drop_down_24px\",\n    transform: \"translate(68.000000, 10.500000) rotate(-360.000000) translate(-68.000000, -10.500000) translate(63.000000, 8.000000)\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask-2\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#path-1\"\n  })), /*#__PURE__*/React.createElement(\"use\", {\n    id: \"Path\",\n    fill: \"#47B881\",\n    fillRule: \"nonzero\",\n    xlinkHref: \"#path-1\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"\\\\uD83C\\\\uDFA8-Color\",\n    mask: \"url(#mask-2)\",\n    fill: \"#47B881\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-7.000000, -10.000000)\",\n    id: \"Shape\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24\n  }))))))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconGreensortingdown);\nexport default __webpack_public_path__ + \"static/media/icon_greensortingdown.31d2161218970ff2041dbc045ec6fafd.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIcondeleteTablemaintainmonitor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"13px\",\n    height: \"15px\",\n    viewBox: \"0 0 13 15\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"noun_Delete_2899273\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Welcome\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Maintain---hover-agent---create\",\n    transform: \"translate(-1372.000000, -310.000000)\",\n    fill: \"#9EA0A5\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-17\",\n    transform: \"translate(1276.000000, 253.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-16\",\n    transform: \"translate(1.000000, 56.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"noun_Delete_2899273\",\n    transform: \"translate(95.000000, 1.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.84,1.28 L8.96,1.28 C9.31346224,1.28 9.6,0.99346224 9.6,0.64 C9.6,0.28653776 9.31346224,0 8.96,0 L3.84,0 C3.48653776,0 3.2,0.28653776 3.2,0.64 C3.2,0.99346224 3.48653776,1.28 3.84,1.28 Z\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.16,2.56 L0.64,2.56 C0.28653776,2.56 0,2.84653776 0,3.2 C0,3.55346224 0.28653776,3.84 0.64,3.84 L1.28,3.84 L1.28,12.16 C1.28,13.2203867 2.13961328,14.08 3.2,14.08 L9.6,14.08 C10.6603867,14.08 11.52,13.2203867 11.52,12.16 L11.52,3.84 L12.16,3.84 C12.5134622,3.84 12.8,3.55346224 12.8,3.2 C12.8,2.84653776 12.5134622,2.56 12.16,2.56 Z M4.48,10.88 C4.48,11.2334622 4.19346224,11.52 3.84,11.52 C3.48653776,11.52 3.2,11.2334622 3.2,10.88 L3.2,5.76 C3.2,5.40653776 3.48653776,5.12 3.84,5.12 C4.19346224,5.12 4.48,5.40653776 4.48,5.76 L4.48,10.88 Z M7.04,10.88 C7.04,11.2334622 6.75346224,11.52 6.4,11.52 C6.04653776,11.52 5.76,11.2334622 5.76,10.88 L5.76,5.76 C5.76,5.40653776 6.04653776,5.12 6.4,5.12 C6.75346224,5.12 7.04,5.40653776 7.04,5.76 L7.04,10.88 Z M9.6,10.88 C9.6,11.2334622 9.31346224,11.52 8.96,11.52 C8.60653776,11.52 8.32,11.2334622 8.32,10.88 L8.32,5.76 C8.32,5.40653776 8.60653776,5.12 8.96,5.12 C9.31346224,5.12 9.6,5.40653776 9.6,5.76 L9.6,10.88 Z\",\n    id: \"Shape\"\n  })))))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcondeleteTablemaintainmonitor);\nexport default __webpack_public_path__ + \"static/media/icondelete_tablemaintainmonitor.f14bffdc09e994cbbe0753461f3d9d2c.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconeditTablemaintainmonitor(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"13px\",\n    height: \"13px\",\n    viewBox: \"0 0 13 13\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"ic_mode_edit_24px\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0,10.256921 L0,13 L2.743079,13 L10.8333333,4.90974567 L8.09025433,2.16666667 L0,10.256921 Z M12.7841635,2.98297148 C13.0719455,2.69518944 13.0719455,2.23031077 12.7841635,1.94252874 L11.0574713,0.215836526 C10.7696892,-0.0719455087 10.3048106,-0.0719455087 10.0170285,0.215836526 L8.66666667,1.56619838 L11.4338016,4.33333333 L12.7841635,2.98297148 Z\",\n    id: \"path-1\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Welcome\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Maintain---hover-agent---create\",\n    transform: \"translate(-1306.000000, -310.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-17\",\n    transform: \"translate(1276.000000, 253.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-16\",\n    transform: \"translate(1.000000, 56.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ic_mode_edit_24px\",\n    transform: \"translate(29.000000, 1.000000)\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask-2\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#path-1\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Shape\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"\\\\uD83C\\\\uDFA8-Color\",\n    mask: \"url(#mask-2)\",\n    fill: \"#9EA0A5\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-2.000000, -2.000000)\",\n    id: \"Shape\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 17,\n    height: 17\n  }))))))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconeditTablemaintainmonitor);\nexport default __webpack_public_path__ + \"static/media/iconedit_tablemaintainmonitor.26856b96228dda93f7ced9a4c5284404.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport IconGreenSortingDown from \"../assets/images/icon_greensortingdown.svg\";\nimport CopyImg from \"../assets/images/copy.svg\";\nexport default class Maintainagentedit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      agentForm: {\n        agentMode: { value: 2, dirtyState: false },\n        gateway: { value: \"\", dirtyState: false },\n        businessId: { value: 0, dirtyState: false },\n        businessName: { value: \"\", dirtyState: false },\n        requestor: { value: \"\", dirtyState: false },\n        requestedDate: { value: \"\", dirtyState: false },\n        customerEmail: { value: \"\", dirtyState: false },\n        bucAnd: { value: \"\", dirtyState: false },\n        vpc: { value: \"\", dirtyState: false },\n        debugMode: { value: true, dirtyState: false },\n      },\n      errorsAgentForm: {},\n      agentFormIsValid: false,\n\n      serverForm: {\n        mode: \"SERVER\",\n        agentId: { value: \"\", dirtyState: false },\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        clientSecret: { value: \"\", dirtyState: false },\n        duration: { value: \"\", dirtyState: false },\n        /* istanbul ignore next */\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        zone: { value: \"\", dirtyState: false },\n        serviceUrl: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n        remotePort: { value: \"\", dirtyState: false },\n        proxy: { value: \"\", dirtyState: false },\n        allowPlugIn: { value: false, dirtyState: false },\n        plugIn: { value: [], dirtyState: false },\n      },\n      errorsServerForm: {},\n      serverFormIsValid: false,\n      clientForm: {\n        mode: \"CLIENT\",\n        agentId: { value: \"\", dirtyState: false },\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        uaaClientId: { value: \"\", dirtyState: false },\n        clientSecret: { value: \"\", dirtyState: false },\n        duration: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        localPort: { value: \"\", dirtyState: false },\n        targetId: { value: \"\", dirtyState: false },\n        proxy: { value: \"\", dirtyState: false },\n        allowPlugIn: { value: false, dirtyState: false },\n        plugIn: { value: [], dirtyState: false },\n      },\n      errorsClientForm: {},\n      clientFormIsValid: false,\n      xclientForm: {\n        mode: \"X:CLIENT\",\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n      },\n      errorsXClientForm: {},\n      xclientFormIsValid: false,\n      xserverForm: {\n        mode: \"X:SERVER\",\n        group: { value: \"\", dirtyState: false },\n        clientId: { value: \"\", dirtyState: false },\n        OAuth2: { value: \"\", dirtyState: false },\n        host: { value: \"\", dirtyState: false },\n        remoteHost: { value: \"\", dirtyState: false },\n      },\n      errorsXServerForm: {},\n      xserverFormIsValid: false,\n      executeScriptForm: {\n        ecVersion: \"\",\n        ecSubVersion: \"\",\n        osType: \"1\",\n        username: \"\",\n        password: \"\",\n        scriptPath: \"\",\n      },\n      // API will provide this agentModeButtons\n      agentModeButtons: [\n        { text: \"SERVER\", value: 2 },\n        { text: \"CLIENT\", value: 3 },\n        { text: \"X:SERVER\", value: 4 },\n        { text: \"X:CLIENT\", value: 5 },\n      ],\n      // API will provide this gateways\n      gateways: [\n        { name: \"Choose Gateway...\", id: 100 },\n        { name: \"gateway-03123012\", id: 101 },\n        { name: \"gateway-31034216\", id: 102 },\n        { name: \"gateway-03130357\", id: 103 },\n      ],\n      // API will provide this businesses\n      businesses: [\n        { name: \"Aviation\", id: \"1\" },\n        { name: \"Power\", id: \"2\" },\n        { name: \"Capital\", id: \"3\" },\n        { name: \"External\", id: \"4\" },\n      ],\n      // API will provide this ecVersions\n      ecVersions: [\n        { name: \"v 212 stable\", id: \"1\" },\n        { name: \"v 1724 beta\", id: \"2\" },\n      ],\n      // API will provide this ecSubVersions\n      ecSubVersions: [\n        { name: \"v1.hokkaido.212 stable\", id: \"1\", ecVersionId: \"1\" },\n        { name: \"v1beta.fukuoka.1724\", id: \"2\", ecVersionId: \"2\" },\n      ],\n      // API will provide this osTypes\n      osTypes: [\n        { name: \"Linux\", id: \"1\" },\n        { name: \"Windows\", id: \"2\" },\n        { name: \"Solaris\", id: \"3\" },\n        { name: \"MAC\", id: \"4\" },\n      ],\n      // API will provide this plugIns\n      plugIns: [\n        { name: \"VLN\", id: \"vln\" },\n        { name: \"TLS\", id: \"tls\" },\n      ],\n      apiEndPoints: {\n        baseUrl: \"https://jsonplaceholder.typicode.com/todos/1\",\n      },\n      environments: [\n        { name: \"CF\", id: \"cf\" },\n        { name: \"AWS\", id: \"aws\" },\n      ],\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    let formData = Object.assign({}, this.props.editItemData);\n    let agentForm = {\n      agentMode: { value: parseInt(formData.agentMode), dirtyState: false },\n      gateway: { value: formData.gatewayId, dirtyState: false },\n      businessId: { value: 0, dirtyState: false },\n      businessName: { value: \"\", dirtyState: false },\n      requestor: { value: \"\", dirtyState: false },\n      requestedDate: { value: \"\", dirtyState: false },\n      customerEmail: { value: \"\", dirtyState: false },\n      bucAnd: { value: \"\", dirtyState: false },\n      vpc: { value: \"\", dirtyState: false },\n      debugMode: { value: true, dirtyState: false },\n    };\n\n    let clientForm = {\n      mode: \"CLIENT\",\n      agentId: { value: formData.agent_id, dirtyState: false },\n      group: { value: formData.group, dirtyState: false },\n      clientId: { value: formData.clientId, dirtyState: false },\n      uaaClientId: { value: formData.uaaClientId, dirtyState: false },\n      clientSecret: { value: formData.uaaClientSecret, dirtyState: false },\n      duration: { value: formData.duration, dirtyState: false },\n      OAuth2: { value: formData.oauth_provider, dirtyState: false },\n      host: { value: formData.hostUrl, dirtyState: false },\n      localPort: { value: formData.localPort, dirtyState: false },\n      targetId: { value: formData.targetId, dirtyState: false },\n      proxy: { value: \"\", dirtyState: false },\n      allowPlugIn: { value: false, dirtyState: false },\n      plugIn: { value: [], dirtyState: false },\n    };\n\n    let serverForm = {\n      mode: \"SERVER\",\n      agentId: { value: formData.agent_id, dirtyState: false },\n      group: { value: formData.group, dirtyState: false },\n      clientId: { value: formData.uaaClientId, dirtyState: false },\n      serverId: { value: formData.serverId, dirtyState: false },\n      userId: { value: formData.userId, dirtyState: false },\n      clientSecret: { value: formData.uaaClientSecret, dirtyState: false },\n      duration: { value: formData.duration, dirtyState: false },\n      OAuth2: { value: formData.oauth_provider, dirtyState: false },\n      host: { value: formData.hostUrl, dirtyState: false },\n      zone: { value: formData.zone, dirtyState: false },\n      serviceUrl: { value: formData.serviceUrl, dirtyState: false },\n      remoteHost: { value: formData.remote_host, dirtyState: false },\n      remotePort: { value: formData.remote_port, dirtyState: false },\n      proxy: { value: \"\", dirtyState: false },\n      allowPlugIn: { value: false, dirtyState: false },\n      plugIn: { value: [], dirtyState: false },\n    };\n\n    let xclientForm = {\n      mode: \"X:CLIENT\",\n      group: { value: formData.group, dirtyState: false },\n      clientId: { value: formData.uaaClientId, dirtyState: false },\n      OAuth2: { value: formData.oauth_provider, dirtyState: false },\n      host: { value: formData.hostUrl, dirtyState: false },\n      remoteHost: { value: formData.remote_host, dirtyState: false },\n    };\n\n    let xserverForm = {\n      mode: \"X:SERVER\",\n      group: { value: formData.group, dirtyState: false },\n      clientId: { value: formData.uaaClientId, dirtyState: false },\n      OAuth2: { value: formData.oauth_provider, dirtyState: false },\n      host: { value: formData.hostUrl, dirtyState: false },\n      remoteHost: { value: formData.remote_host, dirtyState: false },\n    };\n\n    this.setState({\n      agentForm: agentForm,\n      clientForm: clientForm,\n      serverForm: serverForm,\n      xclientForm: xclientForm,\n      xserverForm: xserverForm,\n    });\n\n    let that = this;\n    setTimeout(function () {\n      that.handleServerFormValidation();\n      that.handleClientFormValidation();\n      that.handleXClientFormValidation();\n      that.handleXServerFormValidation();\n    }, 1000);\n  }\n\n  /* istanbul ignore next */\n  handleChangeAgentMode(newAgentMode) {\n    let currentAgentForm = Object.assign({}, this.state.agentForm);\n    currentAgentForm.agentMode.value = newAgentMode;\n\n    this.setState({\n      agentForm: currentAgentForm,\n    });\n  }\n\n  /* istanbul ignore next */\n  copyFromServerToClient() {\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n\n    currentClientForm.agentId.value = currentServerForm.agentId.value;\n    currentClientForm.group.value = currentServerForm.group.value;\n    currentClientForm.clientId.value = currentServerForm.clientId.value;\n    currentClientForm.clientSecret.value = currentServerForm.clientSecret.value;\n    currentClientForm.duration.value = currentServerForm.duration.value;\n    currentClientForm.OAuth2.value = currentServerForm.OAuth2.value;\n    currentClientForm.host.value = currentServerForm.host.value;\n    currentClientForm.allowPlugIn.value = currentServerForm.allowPlugIn.value;\n    currentClientForm.plugIn.value = currentServerForm.plugIn.value;\n\n    this.setState({\n      clientForm: currentClientForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from server\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  copyFromClientToServer() {\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n\n    currentServerForm.agentId.value = currentClientForm.agentId.value;\n    currentServerForm.group.value = currentClientForm.group.value;\n    currentServerForm.clientId.value = currentClientForm.clientId.value;\n    currentServerForm.clientSecret.value = currentClientForm.clientSecret.value;\n    currentServerForm.duration.value = currentClientForm.duration.value;\n    currentServerForm.OAuth2.value = currentClientForm.OAuth2.value;\n    currentServerForm.host.value = currentClientForm.host.value;\n    currentServerForm.allowPlugIn.value = currentClientForm.allowPlugIn.value;\n    currentServerForm.plugIn.value = currentClientForm.plugIn.value;\n\n    this.setState({\n      serverForm: currentServerForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from client\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  downloadFile(type) {\n    let prepareData = {};\n    let agentFormData = this.state.agentForm;\n    if (type === \"server\") {\n      let serverFormData = this.state.serverForm;\n      prepareData.mod = serverFormData.mode;\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.gatewayId = agentFormData.gateway.value;\n      prepareData.aid = serverFormData.agentId.value;\n      prepareData.serverId = serverFormData.serverId.value;\n      prepareData.userId = serverFormData.userId.value;\n      prepareData.grp = serverFormData.group.value;\n      prepareData.cid = serverFormData.clientId.value;\n      prepareData.csc = serverFormData.clientSecret.value;\n      prepareData.dur = parseInt(serverFormData.duration.value);\n      prepareData.oa2 = serverFormData.OAuth2.value;\n      prepareData.hst = serverFormData.host.value;\n      prepareData.zon = serverFormData.zone.value;\n      prepareData.cps = 0;\n      prepareData.sst = serverFormData.serviceUrl.value;\n      prepareData.rht = serverFormData.remoteHost.value;\n      prepareData.rpt = serverFormData.remotePort.value;\n      prepareData.proxy = serverFormData.proxy.value;\n      prepareData.plg = serverFormData.allowPlugIn.value;\n      prepareData.hostUrl = serverFormData.host.value;\n      for (let statePlugIn of this.state.plugIns) {\n        if (serverFormData.plugIn.value.indexOf(statePlugIn.id) !== -1) {\n          prepareData[statePlugIn.id] = true;\n        } else {\n          prepareData[statePlugIn.id] = false;\n        }\n      }\n\n      fetch(\n        this.props.baseUrl +\n          \"/updateServer?gateway_id=\" +\n          prepareData.gatewayId +\n          \"&user_id=\" +\n          this.props.userId +\n          \"&server_id=\" +\n          prepareData.serverId,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: this.props.authToken,\n          },\n          body: JSON.stringify(prepareData),\n        }\n      )\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              if (respData.errorStatus.status === \"ok\") {\n                this.props.handleDataTable(true);\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  \"Record updated successfully\",\n                  \"custom-success\"\n                );\n\n                let filename = \"server.yml\";\n                let data =\n                  \"ec-config: \\n\\tconf: \\n\\t\\tmod: \" +\n                  serverFormData.mode.toLowerCase() +\n                  \"\\n\\t\\tzon: \" +\n                  serverFormData.zone.value +\n                  \" \\n\\t\\tgrp: \" +\n                  serverFormData.group.value +\n                  \" \\n\\t\\tsst: \" +\n                  serverFormData.serviceUrl.value +\n                  \" \\n\\t\\thst: \" +\n                  serverFormData.host.value +\n                  \" \\n\\t\\tdbg: \" +\n                  agentFormData.debugMode.value +\n                  \" \\n\\t\\tcid: \" +\n                  serverFormData.clientId.value +\n                  \" \\n\\t\\tcsc: \" +\n                  serverFormData.clientSecret.value +\n                  \" \\n\\t\\toa2: \" +\n                  serverFormData.OAuth2.value +\n                  \" \\n\\t\\tdur: \" +\n                  serverFormData.duration.value +\n                  \" \\n\\t\\taid: \" +\n                  serverFormData.agentId.value +\n                  \" \\n\\t\\trpt: \" +\n                  serverFormData.remotePort.value +\n                  \" \\n\\t\\trht: \" +\n                  serverFormData.remoteHost.value +\n                  \" \\n\\t\\tcps: \" +\n                  0 +\n                  \" \\n\\t\\tplg: \" +\n                  serverFormData.allowPlugIn.value +\n                  \" \\n\\t\\tvln: \" +\n                  prepareData.vln +\n                  \" \\n\\t\\ttls: \" +\n                  prepareData.tls;\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              } else {\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  respData.errorStatus.statusMsg,\n                  \"custom-danger\"\n                );\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              }\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Ooops! There is some error\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"x:server\") {\n      let serverFormData = Object.assign({}, this.state.xserverForm);\n      prepareData.mod = serverFormData.mode.toLowerCase();\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.ecVersion = agentFormData.ecVersion.value;\n      prepareData.grp = serverFormData.group.value;\n      prepareData.cid = serverFormData.clientId.value;\n      prepareData.oa2 = serverFormData.OAuth2.value;\n      prepareData.hst = serverFormData.host.value;\n      prepareData.cps = 0;\n      prepareData.rht = serverFormData.remoteHost.value;\n      prepareData.parent = \"65c77c4f-fdf4-4c6d-a703-48b12cc21b2d\";\n      prepareData.name = \"server\";\n\n      fetch(this.props.baseUrl + \"generateXServerScript\", {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: this.props.authToken,\n        },\n        body: JSON.stringify(prepareData),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /* if(respData.errorStatus.status == 'ok'){ */\n              sessionStorage.setItem(\"ServerData\", JSON.stringify(prepareData));\n              this.props.hideGlobalMessage();\n              // this.props.showModal(modalHeading, respData.data, buttons);\n              setTimeout(() => {\n                let selectedHost = \"\";\n                if (this.state.gateways.length > 0) {\n                  selectedHost = this.state.gateways[0].id;\n                }\n                let serverForm = {\n                  mode: \"X:SERVER\",\n                  group: {\n                    value: serverFormData.group.value,\n                    dirtyState: false,\n                  },\n                  clientId: {\n                    value: serverFormData.clientId.value,\n                    dirtyState: false,\n                  },\n                  OAuth2: {\n                    value: serverFormData.OAuth2.value,\n                    dirtyState: false,\n                  },\n                  host: { value: selectedHost, dirtyState: false },\n                  remoteHost: { value: \"\", dirtyState: false },\n                };\n\n                let filename = \"x:server.yml\";\n                let data = \"\";\n                if (agentFormData.ecVersion.value === \"v1.hokkaido.212\") {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    serverFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    serverFormData.group.value +\n                    \"\\n  hst: \" +\n                    serverFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    serverFormData.clientId.value +\n                    \"\\n   oa2: \" +\n                    serverFormData.OAuth2.value +\n                    \"\\n   rht: \" +\n                    serverFormData.remoteHost.value;\n                } else {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    serverFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    serverFormData.group.value +\n                    \"\\n    hst: \" +\n                    serverFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    serverFormData.clientId.value +\n                    \"\\n    oa2: \" +\n                    serverFormData.OAuth2.value +\n                    \"\\n  rht: \" +\n                    serverFormData.remoteHost.value;\n                }\n\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                this.setState({\n                  xserverForm: serverForm,\n                  xserverFormIsValid: false,\n                });\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"x:client\") {\n      let xClientFormData = Object.assign({}, this.state.xclientForm);\n      prepareData.mod = xClientFormData.mode.toLowerCase();\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.ecVersion = agentFormData.ecVersion.value;\n      prepareData.grp = xClientFormData.group.value;\n      prepareData.cid = xClientFormData.clientId.value;\n      prepareData.oa2 = xClientFormData.OAuth2.value;\n      prepareData.hst = xClientFormData.host.value;\n      prepareData.cps = 0;\n      prepareData.rht = xClientFormData.remoteHost.value;\n      prepareData.parent = \"65c77c4f-fdf4-4c6d-a703-48b12cc21b2d\";\n      prepareData.name = \"server\";\n\n      fetch(this.props.baseUrl + \"generateXCLIENTScript\", {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: this.props.authToken,\n        },\n        body: JSON.stringify(prepareData),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              /* if(respData.errorStatus.status == 'ok'){ */\n              sessionStorage.setItem(\"ServerData\", JSON.stringify(prepareData));\n              this.props.hideGlobalMessage();\n              // this.props.showModal(modalHeading, respData.data, buttons);\n              setTimeout(() => {\n                let selectedHost = \"\";\n                if (this.state.gateways.length > 0) {\n                  selectedHost = this.state.gateways[0].id;\n                }\n                let XClientForm = {\n                  mode: \"X:CLIENT\",\n                  group: {\n                    value: xClientFormData.group.value,\n                    dirtyState: false,\n                  },\n                  clientId: {\n                    value: xClientFormData.clientId.value,\n                    dirtyState: false,\n                  },\n                  OAuth2: {\n                    value: xClientFormData.OAuth2.value,\n                    dirtyState: false,\n                  },\n                  host: { value: selectedHost, dirtyState: false },\n                  remoteHost: { value: \"\", dirtyState: false },\n                };\n\n                let filename = \"x:client.yml\";\n                let data = \"\";\n                if (agentFormData.ecVersion.value === \"v1.hokkaido.212\") {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    xClientFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    xClientFormData.group.value +\n                    \"\\n  hst: \" +\n                    xClientFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    xClientFormData.clientId.value +\n                    \"\\n   oa2: \" +\n                    xClientFormData.OAuth2.value +\n                    \"\\n   rht: \" +\n                    xClientFormData.remoteHost.value;\n                } else {\n                  data =\n                    \"ec-config:\\n  conf:\\n    mod: \" +\n                    xClientFormData.mode.toLowerCase() +\n                    \"\\n    grp: \" +\n                    xClientFormData.group.value +\n                    \"\\n    hst: \" +\n                    xClientFormData.host.value +\n                    \"\\n    dbg: \" +\n                    agentFormData.debugMode.value +\n                    \"\\n    cid: \" +\n                    xClientFormData.clientId.value +\n                    \"\\n    oa2: \" +\n                    xClientFormData.OAuth2.value +\n                    \"\\n  rht: \" +\n                    xClientFormData.remoteHost.value;\n                }\n\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                this.setState({\n                  xClientFormData: XClientForm,\n                  xclientFormIsValid: false,\n                });\n              }, 2000);\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    } else if (type === \"client\") {\n      let clientFormData = this.state.clientForm;\n      prepareData.mod = clientFormData.mode;\n      prepareData.dbg = agentFormData.debugMode.value;\n      prepareData.gatewayId = agentFormData.gateway.value;\n      prepareData.aid = clientFormData.agentId.value;\n      prepareData.cid = clientFormData.clientId.value;\n      prepareData.tid = clientFormData.targetId.value;\n      prepareData.grp = clientFormData.group.value;\n      //prepareData.cid = clientFormData.uaaClientId.value;\n      prepareData.csc = clientFormData.clientSecret.value;\n      prepareData.dur = parseInt(clientFormData.duration.value);\n      prepareData.cps = 0;\n      prepareData.oa2 = clientFormData.OAuth2.value;\n      prepareData.hst = clientFormData.host.value;\n      prepareData.lpt = clientFormData.localPort.value;\n      prepareData.tid = clientFormData.targetId.value;\n      prepareData.proxy = clientFormData.proxy.value;\n      prepareData.plg = clientFormData.allowPlugIn.value;\n      for (let statePlugIn of this.state.plugIns) {\n        if (clientFormData.plugIn.value.indexOf(statePlugIn.id) !== -1) {\n          prepareData[statePlugIn.id] = true;\n        } else {\n          prepareData[statePlugIn.id] = false;\n        }\n      }\n      console.log(prepareData);\n\n      fetch(\n        this.props.baseUrl +\n          \"/updateClient?gateway_id=\" +\n          prepareData.gatewayId +\n          \"&user_id=\" +\n          this.props.userId +\n          \"&client_id=\" +\n          prepareData.cid,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: this.props.authToken,\n          },\n          body: JSON.stringify(prepareData),\n        }\n      )\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              if (respData.errorStatus.status === \"ok\") {\n                this.props.handleDataTable(true);\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  \"Record updated successfully\",\n                  \"custom-success\"\n                );\n\n                let filename = \"client.yml\";\n                let data =\n                  \"ec-config: \\n\\tconf: \\n\\t\\tmod: \" +\n                  clientFormData.mode.toLowerCase() +\n                  \"\\n\\t\\taid: \" +\n                  clientFormData.agentId.value +\n                  \" \\n\\t\\ttid: \" +\n                  clientFormData.targetId.value +\n                  \" \\n\\t\\tsst: \" +\n                  \" \\n\\t\\thst: \" +\n                  clientFormData.host.value +\n                  \" \\n\\t\\tcid: \" +\n                  clientFormData.clientId.value +\n                  \" \\n\\t\\tcsc: \" +\n                  clientFormData.clientSecret.value +\n                  \" \\n\\t\\toa2: \" +\n                  clientFormData.OAuth2.value +\n                  \" \\n\\t\\tdur: \" +\n                  clientFormData.duration.value +\n                  \" \\n\\t\\tdbg: \" +\n                  agentFormData.debugMode.value +\n                  \" \\n\\t\\tgrp: \" +\n                  clientFormData.group.value +\n                  \" \\n\\t\\tlpt: \" +\n                  clientFormData.localPort.value +\n                  \" \\n\\t\\tfup: \" +\n                  \"\" +\n                  \" \\n\\t\\tfdw: \" +\n                  \"\" +\n                  \" \\n\\t\\tcps: \" +\n                  0 +\n                  \" \\n\\t\\tplg: \" +\n                  clientFormData.allowPlugIn.value +\n                  \" \\n\\t\\tvln: \" +\n                  prepareData.vln +\n                  \" \\n\\t\\ttls: \" +\n                  prepareData.tls;\n                let blob = new Blob([data], { type: \"text/yml\" });\n                if (window.navigator.msSaveOrOpenBlob) {\n                  window.navigator.msSaveBlob(blob, filename);\n                } else {\n                  let elem = window.document.createElement(\"a\");\n                  elem.href = window.URL.createObjectURL(blob);\n                  elem.download = filename;\n                  document.body.appendChild(elem);\n                  elem.click();\n                  document.body.removeChild(elem);\n                }\n\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              } else {\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  respData.errorStatus.statusMsg,\n                  \"custom-danger\"\n                );\n                setTimeout(() => {\n                  this.props.hideGlobalMessage();\n                }, 2000);\n              }\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Ooops! there is some error\",\n              \"custom-danger\"\n            );\n            setTimeout(() => {\n              this.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  /* istanbul ignore next */\n  handleAgentFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentAgentForm = Object.assign({}, this.state.agentForm);\n\n    if (fieldName === \"gateway\") {\n      currentAgentForm.gateway.value = updatedValue;\n      currentAgentForm.gateway.dirtyState = true;\n    } else if (fieldName === \"debugMode\") {\n      currentAgentForm.debugMode.value = updatedValue;\n      currentAgentForm.debugMode.dirtyState = true;\n    }\n\n    this.setState({\n      agentForm: currentAgentForm,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleClientFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentClientForm = Object.assign({}, this.state.clientForm);\n\n    if (fieldName === \"agentId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentClientForm.agentId.value;\n      }\n      currentClientForm.agentId.value = updatedValue;\n      currentClientForm.agentId.dirtyState = true;\n    } else if (fieldName === \"group\") {\n      currentClientForm.group.value = updatedValue;\n      currentClientForm.group.dirtyState = true;\n    } else if (fieldName === \"clientId\") {\n      currentClientForm.clientId.value = updatedValue;\n      currentClientForm.clientId.dirtyState = true;\n    } else if (fieldName === \"clientSecret\") {\n      currentClientForm.clientSecret.value = updatedValue;\n      currentClientForm.clientSecret.dirtyState = true;\n    } else if (fieldName === \"duration\") {\n      let durationAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentClientForm.duration.value;\n      if (durationAfterValidityCheck.length > 4) {\n        durationAfterValidityCheck = currentClientForm.duration.value;\n      }\n      currentClientForm.duration.value = durationAfterValidityCheck;\n      currentClientForm.duration.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentClientForm.OAuth2.value = updatedValue;\n      currentClientForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentClientForm.host.value = updatedValue;\n      currentClientForm.host.dirtyState = true;\n    } else if (fieldName === \"localPort\") {\n      let localPortAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentClientForm.localPort.value;\n      if (localPortAfterValidityCheck.length > 4) {\n        localPortAfterValidityCheck = currentClientForm.localPort.value;\n      }\n      currentClientForm.localPort.value = localPortAfterValidityCheck;\n      currentClientForm.localPort.dirtyState = true;\n    } else if (fieldName === \"targetId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentClientForm.targetId.value;\n      }\n      currentClientForm.targetId.value = updatedValue;\n      currentClientForm.targetId.dirtyState = true;\n    } else if (fieldName === \"proxy\") {\n      currentClientForm.proxy.value = updatedValue;\n      currentClientForm.proxy.dirtyState = true;\n    } else if (fieldName === \"allowPlugIn\") {\n      currentClientForm.allowPlugIn.value = updatedValue;\n      currentClientForm.allowPlugIn.dirtyState = true;\n    } else if (fieldName === \"plugIn\") {\n      let options = e.target.options;\n      let value = [];\n      for (let i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n      currentClientForm.plugIn.value = value;\n      currentClientForm.plugIn.dirtyState = true;\n    }\n\n    this.setState({\n      clientForm: currentClientForm,\n    });\n\n    this.handleClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleClientFormValidation() {\n    let currentFormData = this.state.clientForm;\n    let agentIdValue = currentFormData.agentId.value;\n    let agentIdDirtyState = currentFormData.agentId.dirtyState;\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let clientSecretValue = currentFormData.clientSecret.value;\n    let clientSecretDirtyState = currentFormData.clientSecret.dirtyState;\n    let durationValue = currentFormData.duration.value;\n    let durationDirtyState = currentFormData.duration.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    let hostValue = currentFormData.host.value;\n    let hostDirtyState = currentFormData.host.dirtyState;\n    let localPortValue = currentFormData.localPort.value;\n    let localPortDirtyState = currentFormData.localPort.dirtyState;\n    let targetIdValue = currentFormData.targetId.value;\n    let targetIdDirtyState = currentFormData.targetId.dirtyState;\n    let allowPlugInValue = currentFormData.allowPlugIn.value;\n    let plugInValue = currentFormData.plugIn.value;\n    let plugInDirtyState = currentFormData.plugIn.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (agentIdValue.trim() === \"\") {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Please enter Agent Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientSecretValue.trim() === \"\") {\n      if (clientSecretDirtyState) {\n        errors.clientSecret = \"Please enter Client Secret\";\n      }\n      formIsValid = false;\n    }\n\n    if (durationValue === \"\") {\n      if (durationDirtyState) {\n        errors.duration = \"Please enter Duration in digit\";\n      }\n      formIsValid = false;\n    } else if (durationValue < 1200) {\n      if (durationDirtyState) {\n        errors.duration = \"Duration at least 1200\";\n      }\n      formIsValid = false;\n    }\n\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    if (hostValue.trim() === \"\") {\n      if (hostDirtyState) {\n        errors.host = \"Please enter Host\";\n      }\n      formIsValid = false;\n    } else if (\n      hostValue.substr(0, 6) !== \"wss://\" &&\n      hostValue.substr(0, 5) !== \"ws://\"\n    ) {\n      if (hostDirtyState) {\n        errors.host = \"Host starts with wss:// or ws://\";\n      }\n      formIsValid = false;\n    } else if (hostValue.substr(hostValue.length - 6, 6) !== \"/agent\") {\n      if (hostDirtyState) {\n        errors.host = \"Host ends with /agent\";\n      }\n      formIsValid = false;\n    }\n\n    if (localPortValue.trim() === \"\") {\n      if (localPortDirtyState) {\n        errors.localPort = \"Please enter Local Port in digit\";\n      }\n      formIsValid = false;\n    } else if (localPortValue.length !== 4) {\n      if (localPortDirtyState) {\n        errors.localPort = \"Local Port must have 4 digit\";\n      }\n      formIsValid = false;\n    }\n\n    if (targetIdValue.trim() === \"\") {\n      if (targetIdDirtyState) {\n        errors.targetId = \"Please enter Target Id\";\n      }\n      formIsValid = false;\n    } else if (targetIdValue.length < 6) {\n      if (targetIdDirtyState) {\n        errors.targetId = \"Target Id must have 6 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (allowPlugInValue) {\n      if (plugInValue.length === 0) {\n        if (plugInDirtyState) {\n          errors.plugIn = \"Please select Plug-In\";\n        }\n        formIsValid = false;\n      }\n    }\n\n    this.setState({\n      clientFormIsValid: formIsValid,\n      errorsClientForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleServerFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.serverForm);\n\n    if (fieldName === \"agentId\") {\n      if (updatedValue.length > 6) {\n        updatedValue = currentServerForm.agentId.value;\n      }\n      currentServerForm.agentId.value = updatedValue;\n      currentServerForm.agentId.dirtyState = true;\n    } else if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"clientSecret\") {\n      currentServerForm.clientSecret.value = updatedValue;\n      currentServerForm.clientSecret.dirtyState = true;\n    } else if (fieldName === \"duration\") {\n      let durationAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentServerForm.duration.value;\n      if (durationAfterValidityCheck.length > 4) {\n        durationAfterValidityCheck = currentServerForm.duration.value;\n      }\n      currentServerForm.duration.value = durationAfterValidityCheck;\n      currentServerForm.duration.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"zone\") {\n      if (updatedValue.length > 36) {\n        updatedValue = currentServerForm.zone.value;\n      }\n      currentServerForm.zone.value = updatedValue;\n      currentServerForm.zone.dirtyState = true;\n    } else if (fieldName === \"serviceUrl\") {\n      currentServerForm.serviceUrl.value = updatedValue;\n      currentServerForm.serviceUrl.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    } else if (fieldName === \"remotePort\") {\n      let remotePortAfterValidityCheck = e.target.validity.valid\n        ? updatedValue\n        : currentServerForm.remotePort.value;\n      if (remotePortAfterValidityCheck.length > 4) {\n        remotePortAfterValidityCheck = currentServerForm.remotePort.value;\n      }\n      currentServerForm.remotePort.value = remotePortAfterValidityCheck;\n      currentServerForm.remotePort.dirtyState = true;\n    } else if (fieldName === \"proxy\") {\n      currentServerForm.proxy.value = updatedValue;\n      currentServerForm.proxy.dirtyState = true;\n    } else if (fieldName === \"allowPlugIn\") {\n      currentServerForm.allowPlugIn.value = updatedValue;\n      currentServerForm.allowPlugIn.dirtyState = true;\n    } else if (fieldName === \"plugIn\") {\n      let options = e.target.options;\n      let value = [];\n      for (let i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n      currentServerForm.plugIn.value = value;\n      currentServerForm.plugIn.dirtyState = true;\n    }\n\n    this.setState({\n      serverForm: currentServerForm,\n    });\n\n    this.handleServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleServerFormValidation() {\n    let currentFormData = this.state.serverForm;\n    let agentIdValue = currentFormData.agentId.value;\n    let agentIdDirtyState = currentFormData.agentId.dirtyState;\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let clientSecretValue = currentFormData.clientSecret.value;\n    let clientSecretDirtyState = currentFormData.clientSecret.dirtyState;\n    let durationValue = currentFormData.duration.value;\n    let durationDirtyState = currentFormData.duration.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    let hostValue = currentFormData.host.value;\n    let hostDirtyState = currentFormData.host.dirtyState;\n    let zoneValue = currentFormData.zone.value;\n    let zoneDirtyState = currentFormData.zone.dirtyState;\n    let serviceUrlValue = currentFormData.serviceUrl.value;\n    let serviceUrlDirtyState = currentFormData.serviceUrl.dirtyState;\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let remotePortValue = currentFormData.remotePort.value;\n    let remotePortDirtyState = currentFormData.remotePort.dirtyState;\n    let allowPlugInValue = currentFormData.allowPlugIn.value;\n    \n    let plugInValue = currentFormData.plugIn.value;\n    let plugInDirtyState = currentFormData.plugIn.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (agentIdValue.trim() === \"\") {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Please enter Agent Id\";\n      }\n      formIsValid = false;\n    } else if (agentIdValue.length < 6) {\n      if (agentIdDirtyState) {\n        errors.agentId = \"Agent Id must have 6 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientSecretValue.trim() === \"\") {\n      if (clientSecretDirtyState) {\n        errors.clientSecret = \"Please enter Client Secret\";\n      }\n      formIsValid = false;\n    }\n\n    if (durationValue === \"\") {\n      if (durationDirtyState) {\n        errors.duration = \"Please enter Duration in digit\";\n      }\n      formIsValid = false;\n    } else if (durationValue < 1200) {\n      if (durationDirtyState) {\n        errors.duration = \"Duration at least 1200\";\n      }\n      formIsValid = false;\n    }\n\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    if (hostValue.trim() === \"\") {\n      if (hostDirtyState) {\n        errors.host = \"Please enter Host\";\n      }\n      formIsValid = false;\n    } else if (\n      hostValue.substr(0, 6) !== \"wss://\" &&\n      hostValue.substr(0, 5) !== \"ws://\"\n    ) {\n      if (hostDirtyState) {\n        errors.host = \"Host starts with wss:// or ws://\";\n      }\n      formIsValid = false;\n    } else if (hostValue.substr(hostValue.length - 6, 6) !== \"/agent\") {\n      if (hostDirtyState) {\n        errors.host = \"Host ends with /agent\";\n      }\n      formIsValid = false;\n    }\n\n    if (zoneValue.trim() === \"\") {\n      if (zoneDirtyState) {\n        errors.zone = \"Please enter Zone\";\n      }\n      formIsValid = false;\n    } else if (zoneValue.length < 36) {\n      if (zoneDirtyState) {\n        errors.zone = \"Zone must have 36 character\";\n      }\n      formIsValid = false;\n    }\n\n    if (serviceUrlValue.trim() === \"\") {\n      if (serviceUrlDirtyState) {\n        errors.serviceUrl = \"Please enter Service-Url\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(serviceUrlValue)) {\n      if (serviceUrlDirtyState) {\n        errors.serviceUrl = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n\n    if (remotePortValue.trim() === \"\") {\n      if (remotePortDirtyState) {\n        errors.remotePort = \"Please enter Remote Port in digit\";\n      }\n      formIsValid = false;\n    } else if (remotePortValue.length !== 4) {\n      if (remotePortDirtyState) {\n        errors.remotePort = \"Remote Port must have 4 digit\";\n      }\n      formIsValid = false;\n    }\n\n    if (allowPlugInValue) {\n      if (plugInValue.length === 0) {\n        if (plugInDirtyState) {\n          errors.plugIn = \"Please select Plug-In\";\n        }\n        formIsValid = false;\n      }\n    }\n\n    this.setState({\n      serverFormIsValid: formIsValid,\n      errorsServerForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  copyFromXServerToXClient() {\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n    let currentClientForm = Object.assign({}, this.state.xclientForm);\n\n    currentClientForm.group.value = currentServerForm.group.value;\n    currentClientForm.clientId.value = currentServerForm.clientId.value;\n    currentClientForm.OAuth2.value = currentServerForm.OAuth2.value;\n    currentClientForm.host.value = currentServerForm.host.value;\n\n    this.setState({\n      xclientForm: currentClientForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from x:server\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleXClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  copyFromXClientToXServer() {\n    let currentClientForm = Object.assign({}, this.state.xclientForm);\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n\n    currentServerForm.group.value = currentClientForm.group.value;\n    currentServerForm.clientId.value = currentClientForm.clientId.value;\n    currentServerForm.OAuth2.value = currentClientForm.OAuth2.value;\n    currentServerForm.host.value = currentClientForm.host.value;\n\n    this.setState({\n      xserverForm: currentServerForm,\n    });\n\n    this.props.showGlobalMessage(\n      false,\n      true,\n      \"Data copied from x:client\",\n      \"custom-success\"\n    );\n    setTimeout(() => {\n      this.props.hideGlobalMessage();\n    }, 2000);\n    this.handleXServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXServerFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.xserverForm);\n\n    if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n      //  this.changeAidForServer(updatedValue);\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    }\n\n    this.setState({\n      xserverForm: currentServerForm,\n    });\n\n    this.handleXServerFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXServerFormValidation() {\n    let currentFormData = this.state.xserverForm;\n\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    /* let hostValue = currentFormData.host.value;\n    let hostDirtyState = currentFormData.host.dirtyState; */\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      xserverFormIsValid: formIsValid,\n      errorsXServerForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  handleXClientFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentServerForm = Object.assign({}, this.state.xclientForm);\n\n    if (fieldName === \"group\") {\n      currentServerForm.group.value = updatedValue;\n      currentServerForm.group.dirtyState = true;\n      //  this.changeAidForServer(updatedValue);\n    } else if (fieldName === \"clientId\") {\n      currentServerForm.clientId.value = updatedValue;\n      currentServerForm.clientId.dirtyState = true;\n    } else if (fieldName === \"OAuth2\") {\n      currentServerForm.OAuth2.value = updatedValue;\n      currentServerForm.OAuth2.dirtyState = true;\n    } else if (fieldName === \"host\") {\n      currentServerForm.host.value = updatedValue;\n      currentServerForm.host.dirtyState = true;\n    } else if (fieldName === \"remoteHost\") {\n      currentServerForm.remoteHost.value = updatedValue;\n      currentServerForm.remoteHost.dirtyState = true;\n    }\n\n    this.setState({\n      xclientForm: currentServerForm,\n    });\n\n    this.handleXClientFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleXClientFormValidation() {\n    let currentFormData = this.state.xclientForm;\n\n    let groupValue = currentFormData.group.value;\n    let groupDirtyState = currentFormData.group.dirtyState;\n    let clientIdValue = currentFormData.clientId.value;\n    let clientIdDirtyState = currentFormData.clientId.dirtyState;\n    let OAuth2Value = currentFormData.OAuth2.value;\n    let OAuth2DirtyState = currentFormData.OAuth2.dirtyState;\n    let hostValue = currentFormData.host.value;\n    let hostDirtyState = currentFormData.host.dirtyState;\n    let remoteHostValue = currentFormData.remoteHost.value;\n    let remoteHostDirtyState = currentFormData.remoteHost.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n    let urlRegExp =\n      /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (groupValue.trim() === \"\") {\n      if (groupDirtyState) {\n        errors.group = \"Please enter Group\";\n      }\n      formIsValid = false;\n    }\n\n    if (clientIdValue.trim() === \"\") {\n      if (clientIdDirtyState) {\n        errors.clientId = \"Please enter Client Id\";\n      }\n      formIsValid = false;\n    }\n\n    if (remoteHostValue.trim() === \"\") {\n      if (remoteHostDirtyState) {\n        errors.remoteHost = \"Please enter Remote Host\";\n      }\n      formIsValid = false;\n    }\n    if (OAuth2Value.trim() === \"\") {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter OAuth2\";\n      }\n      formIsValid = false;\n    } else if (!urlRegExp.test(OAuth2Value)) {\n      if (OAuth2DirtyState) {\n        errors.OAuth2 = \"Please enter valid URL\";\n      }\n      formIsValid = false;\n    }\n\n    this.setState({\n      xclientFormIsValid: formIsValid,\n      errorsXClientForm: errors,\n    });\n  }\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div className=\"row Maintainagentcreate\">\n        <div className=\"col-md-12 mt-2\">\n          <div className=\"row\">\n            <div className=\"text-left\">\n              <ul className=\"breadcrumb\">\n                <li className=\"breadcrumb-item active\">Maintain</li>\n                <li className=\"breadcrumb-item active\">Edit Agent</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"centered-div\">\n            <div className=\"centered-div-header\">\n              <div className=\"row maintainagentcreate-header\">\n                <div className=\"col-md-12\">\n                  <h6>\n                    Edit Agent <small>Creating parameters.</small>\n                  </h6>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"row form-body\">\n                <div className=\"col-sm-4\">\n                  <h6>Agent Mode</h6>\n                  <div className=\"col-sm-12 mb-2\">\n                    {this.state.agentModeButtons.map(\n                      (agentModeButton, buttonIndex) => {\n                        return agentModeButton.value ==\n                          this.state.agentForm.agentMode.value ? (\n                          <button\n                            key={\"agentModeButton\" + buttonIndex}\n                            type=\"button\"\n                            name=\"agentMode\"\n                            className={\n                              agentModeButton.value ==\n                              this.state.agentForm.agentMode.value\n                                ? \"btn btn-sm mr-2 btn-selected\"\n                                : \"btn btn-sm mr-2 btn-deselected\"\n                            }\n                            onClick={this.handleChangeAgentMode.bind(\n                              this,\n                              agentModeButton.value\n                            )}\n                            disabled={\n                              agentModeButton.value !=\n                              this.state.agentForm.agentMode.value\n                            }\n                          >\n                            {agentModeButton.text}\n                          </button>\n                        ) : null;\n                      }\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-sm-4\">\n                  <h6>&nbsp;</h6>\n                  <div className=\"custom-control custom-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input custom-control-checkbox\"\n                      id=\"debugMode\"\n                      name=\"debugMode\"\n                      checked={this.state.agentForm.debugMode.value}\n                      onChange={(event) => {\n                        this.handleAgentFormData(event);\n                      }}\n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"debugMode\">\n                      <small className=\"theme-color\">\n                        <strong>DEBUG MODE ENABLED</strong>\n                      </small>\n                    </label>\n                  </div>\n                </div>\n                {this.state.agentForm.agentMode.value !== 1 ? (\n                  <div className=\"col-sm-3\">\n                    <h6>&nbsp;</h6>\n                    <select\n                      className=\"form-control form-control-sm\"\n                      name=\"gateway\"\n                      value={this.state.agentForm.gateway.value}\n                      onChange={(event) => {\n                        this.handleAgentFormData(event);\n                      }}\n                    >\n                      {this.state.gateways.map((gateway, gatewayIndex) => {\n                        return (\n                          <option\n                            key={\"gatewayOption\" + gatewayIndex}\n                            value={gateway.gatewayId}\n                          >\n                            {gateway.gatewayId}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                ) : null}\n              </div>\n              <hr></hr>\n              {this.state.agentForm.agentMode.value === 2 ? (\n                <div className=\"changeable-form server-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.serverForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Agent ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"agentId\"\n                          value={this.state.serverForm.agentId.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"agentId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.serverForm.group.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.serverForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client Secret{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientSecret\"\n                          value={this.state.serverForm.clientSecret.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"clientSecret\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Duration{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"duration\"\n                          value={this.state.serverForm.duration.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"duration\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.serverForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.serverForm.host.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Zone <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"zone\"\n                          value={this.state.serverForm.zone.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"zone\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Service URL{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"serviceUrl\"\n                          value={this.state.serverForm.serviceUrl.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"serviceUrl\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.serverForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Port{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remotePort\"\n                          value={this.state.serverForm.remotePort.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsServerForm[\"remotePort\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">Proxy</div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"proxy\"\n                          value={this.state.serverForm.proxy.value}\n                          onChange={(event) => {\n                            this.handleServerFormData(event);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Allow Plug-in{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <div className=\"custom-control custom-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input custom-control-checkbox\"\n                            id=\"allowPlugIn\"\n                            name=\"allowPlugIn\"\n                            checked={this.state.serverForm.allowPlugIn.value}\n                            onChange={(event) => {\n                              this.handleServerFormData(event);\n                            }}\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"allowPlugIn\"\n                          ></label>\n                        </div>\n                      </div>\n                    </div>\n                    {this.state.serverForm.allowPlugIn.value ? (\n                      <div className=\"col-sm-3\">\n                        <div className=\"col-sm-12 label\">\n                          Plug-in{\" \"}\n                          <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                        </div>\n                        <div className=\"col-sm-12 mb-2\">\n                          <select\n                            multiple\n                            className=\"form-control form-control-sm\"\n                            style={{ height: \"45px\" }}\n                            name=\"plugIn\"\n                            value={this.state.serverForm.plugIn.value}\n                            onChange={(event) => {\n                              this.handleServerFormData(event);\n                            }}\n                          >\n                            {this.state.plugIns.map((plugIn, plugInIndex) => {\n                              return (\n                                <option\n                                  key={\"plugInOption\" + plugInIndex}\n                                  value={plugIn.id}\n                                >\n                                  {plugIn.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                          <small className=\"text-danger\">\n                            {this.state.errorsServerForm[\"plugIn\"]}\n                          </small>\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      {/*<img alt=\"copy\" src=\"assets/static/images/copy.svg\" height=\"15px\" />\n                                            <a onClick={this.copyFromClientToServer.bind(this)} href=\"#\" className=\"theme-color cursor-pointer ml-1\"><small>Copy details from client</small></a>*/}\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        disabled={!this.state.serverFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"server\")}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        CREATE SCRIPT\n                      </button>\n                      <button\n                        onClick={this.props.changeView.bind(this)}\n                        className=\"btn btn-sm customize-view-btn ml-2\"\n                      >\n                        BACK\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 3 ? (\n                <div className=\"changeable-form client-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.clientForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Agent ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"agentId\"\n                          value={this.state.clientForm.agentId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"agentId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.clientForm.group.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.clientForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Client Secret{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientSecret\"\n                          value={this.state.clientForm.clientSecret.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"clientSecret\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Duration{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"duration\"\n                          value={this.state.clientForm.duration.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"duration\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.clientForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.clientForm.host.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Local Port{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          pattern=\"^[1-9][0-9]*\"\n                          className=\"form-control form-control-sm\"\n                          name=\"localPort\"\n                          value={this.state.clientForm.localPort.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"localPort\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Target ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"targetId\"\n                          value={this.state.clientForm.targetId.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsClientForm[\"targetId\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">Proxy</div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"proxy\"\n                          value={this.state.clientForm.proxy.value}\n                          onChange={(event) => {\n                            this.handleClientFormData(event);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <div className=\"col-sm-12 label required\">\n                        Allow Plug-in{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <div className=\"custom-control custom-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input custom-control-checkbox\"\n                            id=\"allowPlugIn\"\n                            name=\"allowPlugIn\"\n                            checked={this.state.clientForm.allowPlugIn.value}\n                            onChange={(event) => {\n                              this.handleClientFormData(event);\n                            }}\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor=\"allowPlugIn\"\n                          ></label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    {this.state.clientForm.allowPlugIn.value ? (\n                      <div className=\"col-sm-3\">\n                        <div className=\"col-sm-12 label\">\n                          Plug-in\n                          <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                        </div>\n                        <div className=\"col-sm-12 mb-2\">\n                          <select\n                            multiple\n                            className=\"form-control form-control-sm\"\n                            style={{ height: \"45px\" }}\n                            name=\"plugIn\"\n                            value={this.state.clientForm.plugIn.value}\n                            onChange={(event) => {\n                              this.handleClientFormData(event);\n                            }}\n                          >\n                            {this.state.plugIns.map((plugIn, plugInIndex) => {\n                              return (\n                                <option\n                                  key={\"plugInOption\" + plugInIndex}\n                                  value={plugIn.id}\n                                >\n                                  {plugIn.name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                          <small className=\"text-danger\">\n                            {this.state.errorsClientForm[\"plugIn\"]}\n                          </small>\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      {/*<img alt=\"copy\" src=\"assets/static/images/copy.svg\" height=\"15px\" />\n                                            <a onClick={this.copyFromServerToClient.bind(this)} href=\"#\" className=\"theme-color cursor-pointer ml-1\"><small>Copy details from server</small></a>*/}\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        disabled={!this.state.clientFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"client\")}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        CREATE SCRIPT\n                      </button>\n                      <button\n                        onClick={this.props.changeView.bind(this)}\n                        className=\"btn btn-sm customize-view-btn ml-2\"\n                      >\n                        BACK\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 4 ? (\n                <div className=\"changeable-form x-server-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.xserverForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.xserverForm.group.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        >\n                          {this.state.groups.map((group, groupIndex) => {\n                            return (\n                              <option\n                                key={\"groupOption\" + groupIndex}\n                                value={group.groupId}\n                              >\n                                {group.groupId}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.xserverForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.xserverForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.xserverForm.host.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        >\n                          {this.state.gateways.map((gateway, gatewayIndex) => {\n                            return (\n                              <option\n                                key={\"gatewayOption\" + gatewayIndex}\n                                value={gateway.id}\n                              >\n                                {gateway.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.xserverForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleXServerFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXServerForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      <img alt=\"copy\" src={CopyImg} height=\"15px\" />\n                      <a\n                        onClick={this.copyFromXClientToXServer.bind(this)}\n                        href=\"#\"\n                        className=\"theme-color cursor-pointer ml-1\"\n                      >\n                        <small>Copy details from x:client</small>\n                      </a>\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        id=\"create-client-btn\"\n                        disabled={!this.state.xserverFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"x:server\")}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        CREATE SCRIPT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n\n              {this.state.agentForm.agentMode.value === 5 ? (\n                <div className=\"changeable-form x-client-form\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Mode <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-sm\"\n                          name=\"mode\"\n                          disabled={true}\n                          defaultValue={this.state.xclientForm.mode}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Group{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"group\"\n                          value={this.state.xclientForm.group.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        >\n                          {this.state.groups.map((group, groupIndex) => {\n                            return (\n                              <option\n                                key={\"groupOption\" + groupIndex}\n                                value={group.groupId}\n                              >\n                                {group.groupId}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"group\"]}\n                        </small>\n                      </div>\n                    </div>\n\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Client ID{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"clientId\"\n                          value={this.state.xclientForm.clientId.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"clientId\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        OAUTH2{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"OAuth2\"\n                          value={this.state.xclientForm.OAuth2.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"OAuth2\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Host <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <select\n                          className=\"form-control form-control-sm\"\n                          name=\"host\"\n                          value={this.state.xclientForm.host.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        >\n                          {this.state.gateways.map((gateway, gatewayIndex) => {\n                            return (\n                              <option\n                                key={\"gatewayOption\" + gatewayIndex}\n                                value={gateway.id}\n                              >\n                                {gateway.name}\n                              </option>\n                            );\n                          })}\n                        </select>\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"host\"]}\n                        </small>\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"col-sm-12 label required\">\n                        Remote Host{\" \"}\n                        <img alt=\"down-arrow\" src={IconGreenSortingDown} />\n                      </div>\n                      <div className=\"col-sm-12 mb-2\">\n                        <input\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          className=\"form-control form-control-sm\"\n                          name=\"remoteHost\"\n                          value={this.state.xclientForm.remoteHost.value}\n                          onChange={(event) => {\n                            this.handleXClientFormData(event);\n                          }}\n                        />\n                        <small className=\"text-danger\">\n                          {this.state.errorsXClientForm[\"remoteHost\"]}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-12 mb-2\">\n                    <hr></hr>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-5 mb-2\">\n                      <img alt=\"copy\" src={CopyImg} height=\"15px\" />\n                      <a\n                        onClick={this.copyFromXServerToXClient.bind(this)}\n                        href=\"#\"\n                        className=\"theme-color cursor-pointer ml-1\"\n                      >\n                        <small>Copy details from x:server</small>\n                      </a>\n                    </div>\n                    <div className=\"col-sm-7 mb-2\">\n                      <button\n                        id=\"create-client-btn\"\n                        disabled={!this.state.xclientFormIsValid}\n                        onClick={this.downloadFile.bind(this, \"x:client\")}\n                        className=\"btn btn-sm customize-view-btn\"\n                      >\n                        CREATE SCRIPT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n","import React from \"react\";\nimport $ from \"jquery\";\nimport Maintainagentedit from \"./Maintainagentedit.js\";\n\n//assets/static/images/icon_arrowmore.svg\nimport IconArrowMore from \"../assets/images/icon_arrowmore.svg\";\nimport IconEdit from \"../assets/images/iconedit_tablemaintainmonitor.svg\";\nimport IconDelete from \"../assets/images/icondelete_tablemaintainmonitor.svg\";\nimport Rolling from \"../assets/images/rolling.svg\";\n\nexport default class Maintainagentupgrade extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableData: [],\n      newTableData: [],\n      viewTable: true,\n      editItemData: {},\n      searchString: \"\",\n      showTableInit: false,\n    };\n  }\n\n  /* istanbul ignore next */\n  componentDidMount() {\n    this.handleDataTable(false);\n  }\n\n  /* istanbul ignore next */\n  handleDataTable(preserveState) {\n    let technicalTableData = [];\n    fetch(\"https://reqres.in/api/users/2\", {\n      //this.props.baseUrl + '/listGateways?user_id=' + this.props.userId, { // Get gateways this.props.baseUrl+'/listGateways?user_id='+this.props.userId\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.authToken,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        response.json().then((respData) => {\n          let gateways = respData.data;\n          if (gateways === null) {\n            gateways = [];\n          }\n\n          if (gateways.length > 0) {\n            /* istanbul ignore next */\n            for (let gateway of gateways) {\n              /* istanbul ignore next */\n              let prepareData = {};\n              prepareData.agent_id = \"\";\n              prepareData.serverId = \"\";\n              prepareData.clientId = \"\";\n              prepareData.gatewayId = gateway.gatewayId;\n              prepareData.targetId = \"\";\n              prepareData.userId = gateway.userId;\n              prepareData.uaaClientId = \"\";\n              prepareData.uaaClientSecret = \"\";\n              prepareData.duration = \"\";\n              prepareData.gateway = gateway.hostUrl;\n              prepareData.hostUrl = gateway.hostUrl;\n              prepareData.localPort = \"\";\n              prepareData.group = \"\";\n              prepareData.oauth_provider = \"\";\n              prepareData.zone = gateway.zone;\n              prepareData.subscription = gateway.gatewayId;\n              prepareData.remote_port = \"\";\n              prepareData.remote_host = \"\";\n              prepareData.agentMode = \"1\";\n              prepareData.environment = gateway.env;\n              prepareData.gatewayPort = gateway.gatewayPort;\n              prepareData.serviceUrl = gateway.serviceUrl;\n              prepareData.admToken = gateway.admToken;\n              technicalTableData.push(prepareData);\n            }\n          }\n\n          fetch(\"https://reqres.in/api/users/2\", {\n            //this.props.baseUrl + '/listServers?user_id=' + this.props.userId, { // Get gateways this.props.baseUrl+'/listGateways?user_id='+this.props.userId\n            method: \"GET\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: this.props.authToken,\n            },\n          }).then((response) => {\n            if (response.status === 200) {\n              response.json().then((respData) => {\n                let servers = respData.data;\n                if (servers === null) {\n                  servers = [];\n                }\n\n                if (servers.length > 0) {\n                  for (let server of servers) {\n                    let prepareData = {};\n                    prepareData.agent_id = server.agentId;\n                    prepareData.serverId = server.serverId;\n                    prepareData.gatewayId = server.gatewayId;\n                    prepareData.clientId = \"\";\n                    prepareData.userId = server.userId;\n                    prepareData.targetId = \"\";\n                    prepareData.uaaClientId = server.uaaClientId;\n                    prepareData.uaaClientSecret = server.uaaClientSecret;\n                    prepareData.duration = server.duration.toString();\n                    prepareData.gateway = server.hostUrl;\n                    prepareData.hostUrl = server.hostUrl;\n                    prepareData.localPort = \"\";\n                    prepareData.group = server.groupId;\n                    prepareData.oauth_provider = server.uaaUrl;\n                    prepareData.zone = server.zone;\n                    prepareData.subscription = server.serverId;\n                    prepareData.remote_port = server.remotePort;\n                    prepareData.remote_host = server.remoteHost;\n                    prepareData.agentMode = \"2\";\n                    prepareData.environment = \"\";\n                    prepareData.gatewayPort = \"\";\n                    prepareData.serviceUrl = server.serviceUrl;\n                    prepareData.admToken = \"\";\n                    technicalTableData.push(prepareData);\n                  }\n                }\n\n                fetch(\"https://reqres.in/api/users/2\", {\n                  //this.props.baseUrl + '/listClients?user_id=' + this.props.userId, { // Get gateways this.props.baseUrl+'/listGateways?user_id='+this.props.userId\n                  method: \"GET\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization: this.props.authToken,\n                  },\n                }).then((response) => {\n                  if (response.status === 200) {\n                    response.json().then((respData) => {\n                      let clients = [\n                        {\n                          agent_id: \"OicLas512\",\n                          serverId: \"\",\n                          clientId: \"PiLsac12a\",\n                          userId: \"Qasorse\",\n                          gatewayId: \"gateway-312312a21\",\n                          targetId: \"targetId\",\n                          uaaClientId: \"uaaClientId\",\n                          uaaClientSecret: \"uaaClientSecret\",\n                          duration: \"duration\",\n                          gateway: \"hostUrl\",\n                          hostUrl: \"wss://gateway-uri/agent\",\n                          localPort: \"localPort\",\n                          group: \"groupId\",\n                          oauth_provider: \"uaaUrl\",\n                          zone: \"licenseid\",\n                          subscription: \"clientId\",\n                          remote_port: \"8080\",\n                          remote_host: \"wss://gateway-uri/agent\",\n                          agentMode: \"3\",\n                          environment: \"AWS\",\n                          gatewayPort: \"CF\",\n                          serviceUrl: \"\",\n                          admToken: \"adwqiwqeqwkasdqw\",\n                        },\n                        {\n                          agent_id: \"FicLas51qw\",\n                          serverId: \"\",\n                          clientId: \"LsiLsac12a\",\n                          userId: \"Qasorse\",\n                          gatewayId: \"gateway-312312a21\",\n                          targetId: \"targetId2\",\n                          uaaClientId: \"uaaClientId2\",\n                          uaaClientSecret: \"uaaClientSecret2\",\n                          duration: \"duration\",\n                          gateway: \"hostUrl\",\n                          hostUrl: \"wss://gateway-uri/agent2\",\n                          localPort: \"localPort2\",\n                          group: \"groupId2\",\n                          oauth_provider: \"uaaUrl2\",\n                          zone: \"licenseid\",\n                          subscription: \"clientId\",\n                          remote_port: \"8080\",\n                          remote_host: \"wss://gateway-uri/agent2\",\n                          agentMode: \"3\",\n                          environment: \"AWS\",\n                          gatewayPort: \"CF\",\n                          serviceUrl: \"\",\n                          admToken: \"adwqiwqeqwkasdqw\",\n                        },\n                      ];\n                      if (clients === null) {\n                        clients = [];\n                      }\n\n                      for (let client of clients) {\n                        let prepareData = {};\n                        prepareData.agent_id = client.agentId;\n                        prepareData.serverId = \"\";\n                        prepareData.clientId = client.clientId;\n                        prepareData.userId = client.userId;\n                        prepareData.gatewayId = client.gatewayId;\n                        prepareData.targetId = client.targetId;\n                        prepareData.uaaClientId = client.uaaClientId;\n                        prepareData.uaaClientSecret = client.uaaClientSecret;\n                        prepareData.duration = client.duration.toString();\n                        prepareData.gateway = client.hostUrl;\n                        prepareData.hostUrl = client.hostUrl;\n                        prepareData.localPort = client.localPort;\n                        prepareData.group = client.groupId;\n                        prepareData.oauth_provider = client.oauth_provider;\n                        prepareData.zone = client.zone;\n                        prepareData.subscription = client.subscription;\n                        prepareData.remote_port = client.remote_port;\n                        prepareData.remote_host = client.remote_host;\n                        prepareData.agentMode = \"3\";\n                        prepareData.environment = client.environment;\n                        prepareData.gatewayPort = client.gatewayPort;\n                        prepareData.serviceUrl = client.serviceUrl;\n                        prepareData.admToken = \"\";\n                        technicalTableData.push(prepareData);\n                      }\n                      this.generateTableStructure(\n                        technicalTableData,\n                        preserveState\n                      );\n                      this.setState({\n                        tableData: technicalTableData,\n                      });\n                    });\n                  } else {\n                    //this.showGlobalMessage('Oops! There is an error', 'alert-danger');\n                    //console.log('Looks like there was a problem. Status Code: ' + response.status);\n                    //this.showAjaxBusy(false);\n                  }\n                });\n              });\n            } else {\n              //this.showGlobalMessage('Oops! There is an error', 'alert-danger');\n              //console.log('Looks like there was a problem. Status Code: ' + response.status);\n              //this.showAjaxBusy(false);\n            }\n          });\n        });\n      } else {\n        //this.showGlobalMessage('Oops! There is an error', 'alert-danger');\n        //console.log('Looks like there was a problem. Status Code: ' + response.status);\n        //this.showAjaxBusy(false);\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  initTable(tableId, preserveState) {\n    var pageLength = 5;\n    let tableWidth = 0;\n    tableWidth = $(\"#maintainagentupgradeTableDiv\")[0].offsetWidth - 200;\n    $(\"#\" + tableId).DataTable({\n      dom: 'rt<\"bottom\"lp>',\n      bSort: true,\n      scrollX: true,\n      language: {\n        paginate: {\n          previous: \"<\",\n          next: \">\",\n        },\n      },\n      createdRow: function (row, data, dataIndex) {\n        for (let i = 0; i < data.length; i++) {\n          $(\"td:eq(\" + i + \")\", row).css(\n            \"min-width\",\n            tableWidth / data.length + \"px\"\n          );\n        }\n      },\n      pageLength: pageLength,\n      stateSave: preserveState,\n      destroy: true,\n      fnDrawCallback: function (oSettings) {\n        if (oSettings.aiDisplay.length <= pageLength) {\n          $(\".dataTables_paginate\").hide();\n        } else {\n          $(\".dataTables_paginate\").show();\n        }\n      },\n    });\n    $(\".bottom\").addClass(\"row\");\n    $(\".dataTables_length\").addClass(\"col-sm-6\");\n    $(\".dataTables_paginate\").addClass(\"col-sm-6\");\n  }\n\n  /* istanbul ignore next */\n  generateTableStructure(technicalTableData, preserveState) {\n    let tableData = technicalTableData;\n    let newTableData = [];\n    for (let dataObj of tableData) {\n      let newDataObj = {};\n      newDataObj.agent_id = dataObj.agent_id;\n      newDataObj.serverId = dataObj.serverId;\n      newDataObj.clientId = dataObj.clientId;\n      newDataObj.userId = dataObj.userId;\n      newDataObj.gatewayId = dataObj.gatewayId;\n      newDataObj.targetId = dataObj.targetId;\n      newDataObj.agentMode = dataObj.agentMode;\n      newDataObj.uaaClientId = dataObj.uaaClientId;\n      newDataObj.uaaClientSecret = dataObj.uaaClientSecret;\n      newDataObj.localPort = dataObj.localPort;\n      newDataObj.duration = dataObj.duration;\n      newDataObj.group = dataObj.group;\n      newDataObj.environment = dataObj.environment;\n      newDataObj.gatewayPort = dataObj.gatewayPort;\n      newDataObj.serviceUrl = dataObj.serviceUrl;\n      newDataObj.admToken = dataObj.admToken;\n      newDataObj.hostUrl = dataObj.hostUrl;\n      if (dataObj.gateway.length > 10) {\n        newDataObj.gateway = dataObj.gateway.substr(0, 10);\n        newDataObj.gatewayHidden = dataObj.gateway;\n        newDataObj.gatewayHiddenFlag = true;\n      } else {\n        newDataObj.gateway = dataObj.gateway;\n        newDataObj.gatewayHiddenFlag = false;\n      }\n\n      if (dataObj.oauth_provider.length > 10) {\n        newDataObj.oauth_provider = dataObj.oauth_provider.substr(0, 10);\n        newDataObj.oauth_providerHidden = dataObj.oauth_provider;\n        newDataObj.oauth_providerHiddenFlag = true;\n      } else {\n        newDataObj.oauth_provider = dataObj.oauth_provider;\n        newDataObj.oauth_providerHiddenFlag = false;\n      }\n\n      if (dataObj.zone.length > 10) {\n        newDataObj.zone = dataObj.zone.substr(0, 10);\n        newDataObj.zoneHidden = dataObj.zone;\n        newDataObj.zoneHiddenFlag = true;\n      } else {\n        newDataObj.zone = dataObj.zone;\n        newDataObj.zoneHiddenFlag = false;\n      }\n\n      if (dataObj.subscription.length > 10) {\n        newDataObj.subscription = dataObj.subscription.substr(0, 10);\n        newDataObj.subscriptionHidden = dataObj.subscription;\n        newDataObj.subscriptionHiddenFlag = true;\n      } else {\n        newDataObj.subscription = dataObj.subscription;\n        newDataObj.subscriptionHiddenFlag = false;\n      }\n\n      if (dataObj.remote_host.length > 10) {\n        newDataObj.remote_host = dataObj.remote_host.substr(0, 10);\n        newDataObj.remote_hostHidden = dataObj.remote_host;\n        newDataObj.remote_hostHiddenFlag = true;\n      } else {\n        newDataObj.remote_host = dataObj.remote_host;\n        newDataObj.remote_hostHiddenFlag = false;\n      }\n\n      if (dataObj.remote_port.length > 10) {\n        newDataObj.remote_port = dataObj.remote_port.substr(0, 10);\n        newDataObj.remote_portHidden = dataObj.remote_port;\n        newDataObj.remote_portHiddenFlag = true;\n      } else {\n        newDataObj.remote_port = dataObj.remote_port;\n        newDataObj.remote_portHiddenFlag = false;\n      }\n\n      newTableData.push(newDataObj);\n    }\n\n    this.setState({\n      newTableData: newTableData,\n      showTableInit: true,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"maintainagentupgradeTable\", preserveState);\n    }, 100);\n  }\n\n  /* istanbul ignore next */\n  componentDidUpdate() {\n    //this.initTable('maintainagentupgradeTable');\n  }\n\n  /* istanbul ignore next */\n  showHideTableTdData(objectIndex, fieldName) {\n    let newTableData = [...this.state.newTableData];\n    let copiedObjectToChange = Object.assign({}, newTableData[objectIndex]);\n    if (fieldName === \"gateway\") {\n      let tempValue = copiedObjectToChange.gateway;\n      copiedObjectToChange.gateway = copiedObjectToChange.gatewayHidden;\n      copiedObjectToChange.gatewayHidden = tempValue;\n      copiedObjectToChange.gatewayHiddenFlag =\n        !copiedObjectToChange.gatewayHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"oauth_provider\") {\n      let tempValue = copiedObjectToChange.oauth_provider;\n      copiedObjectToChange.oauth_provider =\n        copiedObjectToChange.oauth_providerHidden;\n      copiedObjectToChange.oauth_providerHidden = tempValue;\n      copiedObjectToChange.oauth_providerHiddenFlag =\n        !copiedObjectToChange.oauth_providerHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"zone\") {\n      let tempValue = copiedObjectToChange.zone;\n      copiedObjectToChange.zone = copiedObjectToChange.zoneHidden;\n      copiedObjectToChange.zoneHidden = tempValue;\n      copiedObjectToChange.zoneHiddenFlag =\n        !copiedObjectToChange.zoneHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"subscription\") {\n      let tempValue = copiedObjectToChange.subscription;\n      copiedObjectToChange.subscription =\n        copiedObjectToChange.subscriptionHidden;\n      copiedObjectToChange.subscriptionHidden = tempValue;\n      copiedObjectToChange.subscriptionHiddenFlag =\n        !copiedObjectToChange.subscriptionHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"remote_host\") {\n      let tempValue = copiedObjectToChange.remote_host;\n      copiedObjectToChange.remote_host = copiedObjectToChange.remote_hostHidden;\n      copiedObjectToChange.remote_hostHidden = tempValue;\n      copiedObjectToChange.remote_hostHiddenFlag =\n        !copiedObjectToChange.remote_hostHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    } else if (fieldName === \"remote_port\") {\n      let tempValue = copiedObjectToChange.remote_port;\n      copiedObjectToChange.remote_port = copiedObjectToChange.remote_portHidden;\n      copiedObjectToChange.remote_portHidden = tempValue;\n      copiedObjectToChange.remote_portHiddenFlag =\n        !copiedObjectToChange.remote_portHiddenFlag;\n      newTableData[objectIndex] = copiedObjectToChange;\n    }\n\n    this.setState({\n      newTableData: newTableData,\n    });\n  }\n\n  /* istanbul ignore next */\n  filterByValue(array, string) {\n    return array.filter((o) =>\n      Object.keys(o).some((k) => {\n        if (o[k] !== undefined) {\n          return o[k].toLowerCase().includes(string.toLowerCase());\n        }\n        return null;\n      })\n    );\n  }\n\n  /* istanbul ignore next */\n  destroyDataTable(tableId) {\n    var table = $(\"#\" + tableId).DataTable();\n    table.destroy();\n  }\n\n  /* istanbul ignore next */\n  filterData(e) {\n    this.destroyDataTable(\"maintainagentupgradeTable\");\n    let searchStr = e.target.value.trim();\n    let searchStrWithSp = e.target.value;\n    let wholeData = [...this.state.tableData];\n    let filteredData = [];\n    let newTableData = [];\n    if (searchStr !== \"\") {\n      filteredData = this.filterByValue(wholeData, searchStr);\n      console.log(filteredData);\n    } else {\n      filteredData = wholeData;\n    }\n\n    console.log(filteredData);\n\n    for (let dataObj of filteredData) {\n      let newDataObj = {};\n      newDataObj.agent_id = dataObj.agent_id;\n      newDataObj.serverId = dataObj.serverId;\n      newDataObj.clientId = dataObj.clientId;\n      newDataObj.userId = dataObj.userId;\n      newDataObj.gatewayId = dataObj.gatewayId;\n      newDataObj.targetId = dataObj.targetId;\n      newDataObj.agentMode = dataObj.agentMode;\n      newDataObj.uaaClientId = dataObj.uaaClientId;\n      newDataObj.uaaClientSecret = dataObj.uaaClientSecret;\n      newDataObj.localPort = dataObj.localPort;\n      newDataObj.duration = dataObj.duration.toString();\n      newDataObj.group = dataObj.group;\n      newDataObj.environment = dataObj.environment;\n      newDataObj.gatewayPort = dataObj.gatewayPort;\n      newDataObj.serviceUrl = dataObj.serviceUrl;\n      newDataObj.admToken = dataObj.admToken;\n      newDataObj.hostUrl = dataObj.hostUrl;\n      if (dataObj.gateway.length > 10) {\n        newDataObj.gateway = dataObj.gateway.substr(0, 10);\n        newDataObj.gatewayHidden = dataObj.gateway;\n        newDataObj.gatewayHiddenFlag = true;\n      } else {\n        newDataObj.gateway = dataObj.gateway;\n        newDataObj.gatewayHiddenFlag = false;\n      }\n\n      if (dataObj.oauth_provider.length > 10) {\n        newDataObj.oauth_provider = dataObj.oauth_provider.substr(0, 10);\n        newDataObj.oauth_providerHidden = dataObj.oauth_provider;\n        newDataObj.oauth_providerHiddenFlag = true;\n      } else {\n        newDataObj.oauth_provider = dataObj.oauth_provider;\n        newDataObj.oauth_providerHiddenFlag = false;\n      }\n\n      if (dataObj.zone.length > 10) {\n        newDataObj.zone = dataObj.zone.substr(0, 10);\n        newDataObj.zoneHidden = dataObj.zone;\n        newDataObj.zoneHiddenFlag = true;\n      } else {\n        newDataObj.zone = dataObj.zone;\n        newDataObj.zoneHiddenFlag = false;\n      }\n\n      if (dataObj.subscription.length > 10) {\n        newDataObj.subscription = dataObj.subscription.substr(0, 10);\n        newDataObj.subscriptionHidden = dataObj.subscription;\n        newDataObj.subscriptionHiddenFlag = true;\n      } else {\n        newDataObj.subscription = dataObj.subscription;\n        newDataObj.subscriptionHiddenFlag = false;\n      }\n\n      if (dataObj.remote_host.length > 10) {\n        newDataObj.remote_host = dataObj.remote_host.substr(0, 10);\n        newDataObj.remote_hostHidden = dataObj.remote_host;\n        newDataObj.remote_hostHiddenFlag = true;\n      } else {\n        newDataObj.remote_host = dataObj.remote_host;\n        newDataObj.remote_hostHiddenFlag = false;\n      }\n\n      if (dataObj.remote_port.length > 10) {\n        newDataObj.remote_port = dataObj.remote_port.substr(0, 10);\n        newDataObj.remote_portHidden = dataObj.remote_port;\n        newDataObj.remote_portHiddenFlag = true;\n      } else {\n        newDataObj.remote_port = dataObj.remote_port;\n        newDataObj.remote_portHiddenFlag = false;\n      }\n\n      newTableData.push(newDataObj);\n    }\n\n    this.setState({\n      newTableData: newTableData,\n      searchString: searchStrWithSp,\n    });\n\n    setTimeout(() => {\n      this.initTable(\"maintainagentupgradeTable\", false);\n    }, 0);\n  }\n\n  /* istanbul ignore next */\n  edit(item) {\n    //console.log(item);\n    let editItem = Object.assign({}, item);\n    if (editItem.zoneHiddenFlag) {\n      editItem.zone = editItem.zoneHidden;\n    }\n    if (editItem.oauth_providerHiddenFlag) {\n      editItem.oauth_provider = editItem.oauth_providerHidden;\n    }\n    this.destroyDataTable(\"maintainagentupgradeTable\");\n    this.setState({\n      editItemData: editItem,\n      viewTable: false,\n    });\n  }\n\n  /* istanbul ignore next */\n  removeDataTableRow(tableId, rowIndex) {\n    var table = $(\"#\" + tableId).DataTable();\n    table\n      .row(\"#\" + tableId + \"TbodyTr_\" + rowIndex)\n      .remove()\n      .draw(false);\n  }\n  /* istanbul ignore next */\n  deleteData(tbodyVal, rowIndex) {\n    let cnf = window.confirm(\"Are you sure you want to delete\");\n    let rowdata = tbodyVal;\n    let deletePath = \"\";\n    let deleteId = \"\";\n    if (cnf) {\n      this.props.showGlobalMessage(\n        true,\n        true,\n        \"Please Wait....\",\n        \"custom-success\"\n      );\n\n      if (rowdata.agentMode === \"1\") {\n        deleteId = rowdata.gatewayId;\n        deletePath = \"/deleteGateway?gateway_id=\";\n      } else if (rowdata.agentMode === \"2\") {\n        deleteId = rowdata.serverId;\n        deletePath = \"/deleteServer?server_id=\";\n      } else if (rowdata.agentMode === \"3\") {\n        deleteId = rowdata.clientId;\n        deletePath = \"/deleteClient?client_id=\";\n      }\n\n      fetch(this.props.baseUrl + deletePath + deleteId, {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: this.props.authToken,\n        },\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            response.json().then((respData) => {\n              if (respData.errorStatus.status === \"ok\") {\n                this.props.showGlobalMessage(\n                  false,\n                  true,\n                  \"Record deleted successfuly\",\n                  \"custom-success\"\n                );\n                this.removeDataTableRow(\"maintainagentupgradeTable\", rowIndex);\n                let that = this;\n                setTimeout(function () {\n                  that.props.hideGlobalMessage();\n                }, 2000);\n              } else {\n                this.props.showGlobalMessage(\n                  true,\n                  true,\n                  respData.errorStatus.statusMsg,\n                  \"custom-danger\"\n                );\n                let that = this;\n                setTimeout(function () {\n                  that.props.hideGlobalMessage();\n                }, 2000);\n              }\n            });\n          } else {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Please try after sometime\",\n              \"custom-danger\"\n            );\n            let that = this;\n            setTimeout(function () {\n              that.props.hideGlobalMessage();\n            }, 2000);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          this.props.showGlobalMessage(\n            true,\n            true,\n            \"Please try after sometime\",\n            \"custom-danger\"\n          );\n          setTimeout(() => {\n            this.props.hideGlobalMessage();\n          }, 2000);\n        });\n    }\n  }\n\n  /* istanbul ignore next */\n  disbableData(tbodyIndex) {\n    let cnf = window.confirm(\"Are you sure you want to disable\");\n    if (cnf) {\n      fetch(this.state.apiEndPoints.baseUrl).then((response) => {\n        if (response.status === 200) {\n          response.json().then((zones) => {\n            this.props.showGlobalMessage(\n              true,\n              true,\n              \"Record disabled successfuly\",\n              \"custom-success\"\n            );\n            let that = this;\n            setTimeout(function () {\n              that.props.hideGlobalMessage();\n            }, 2000);\n            this.generateTableStructure();\n          });\n        }\n      });\n    }\n  }\n\n  /* istanbul ignore next */\n  changeView() {\n    this.setState({\n      viewTable: true,\n    });\n    setTimeout(() => {\n      this.initTable(\"maintainagentupgradeTable\", true);\n    }, 0);\n  } // jshint ignore:line\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div>\n        {this.state.viewTable ? (\n          <div className=\"row Maintainagentupgrade\">\n            <div className=\"col-md-12\">\n              <div className=\"row mt-2\">\n                <div className=\"col-sm-6 text-left\">\n                  <div className=\"d-inline\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-sm btn-outline-secondary disabled\"\n                    >\n                      <i className=\"fa fa-filter\"></i>\n                      FILTER\n                    </button>\n                  </div>\n                  <div className=\"d-inline p-2\">\n                    <input\n                      type=\"text\"\n                      value={this.state.searchString}\n                      className=\"d-inline form-control form-control-sm search-field\"\n                      onChange={(event) => {\n                        this.filterData(event);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"centered-div\">\n                <div id=\"maintainagentupgradeTableDiv\">\n                  {this.state.showTableInit ? (\n                    <table\n                      id=\"maintainagentupgradeTable\"\n                      className=\"table text-center\"\n                    >\n                      <thead>\n                        <tr>\n                          <th>Subscription</th>\n                          <th>Agent ID</th>\n                          <th>Gateway</th>\n                          <th>Group</th>\n                          <th>OAuth Provider</th>\n                          <th>Zone</th>\n                          <th>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.newTableData.map((tbodyVal, tbodyIndex) => {\n                          return (\n                            <tr\n                              id={\n                                \"maintainagentupgradeTableTbodyTr_\" + tbodyIndex\n                              }\n                              key={\n                                \"maintainagentupgradeTableTbodyTr_\" + tbodyIndex\n                              }\n                            >\n                              <td>\n                                {tbodyVal.subscription}&nbsp;&nbsp;\n                                {tbodyVal.subscriptionHiddenFlag ? (\n                                  <img\n                                    onClick={this.showHideTableTdData.bind(\n                                      this,\n                                      tbodyIndex,\n                                      \"subscription\"\n                                    )}\n                                    className=\"icon-arrowmore\"\n                                    alt=\"td-detail\"\n                                    src={IconArrowMore}\n                                  />\n                                ) : null}\n                              </td>\n                              <td>{tbodyVal.agent_id}</td>\n                              <td>\n                                {tbodyVal.gateway}&nbsp;&nbsp;\n                                {tbodyVal.gatewayHiddenFlag ? (\n                                  <img\n                                    onClick={this.showHideTableTdData.bind(\n                                      this,\n                                      tbodyIndex,\n                                      \"gateway\"\n                                    )}\n                                    className=\"icon-arrowmore\"\n                                    alt=\"td-detail\"\n                                    src={IconArrowMore}\n                                  />\n                                ) : null}\n                              </td>\n                              <td>{tbodyVal.group}</td>\n                              <td>\n                                {tbodyVal.oauth_provider}&nbsp;&nbsp;\n                                {tbodyVal.oauth_providerHiddenFlag ? (\n                                  <img\n                                    onClick={this.showHideTableTdData.bind(\n                                      this,\n                                      tbodyIndex,\n                                      \"oauth_provider\"\n                                    )}\n                                    className=\"icon-arrowmore\"\n                                    alt=\"td-detail\"\n                                    src={IconArrowMore}\n                                  />\n                                ) : null}\n                              </td>\n                              <td>\n                                {tbodyVal.zone}&nbsp;&nbsp;\n                                {tbodyVal.zoneHiddenFlag ? (\n                                  <img\n                                    onClick={this.showHideTableTdData.bind(\n                                      this,\n                                      tbodyIndex,\n                                      \"zone\"\n                                    )}\n                                    className=\"icon-arrowmore\"\n                                    alt=\"td-detail\"\n                                    src={IconArrowMore}\n                                  />\n                                ) : null}\n                              </td>\n                              <td>\n                                <span className=\"action-img\">\n                                  <img\n                                    onClick={this.edit.bind(this, tbodyVal)}\n                                    alt=\"edit-icon\"\n                                    title=\"Edit\"\n                                    src={IconEdit}\n                                  />\n                                  <img\n                                    alt=\"delete-icon\"\n                                    onClick={this.deleteData.bind(\n                                      this,\n                                      tbodyVal,\n                                      tbodyIndex\n                                    )}\n                                    title=\"Delete\"\n                                    src={IconDelete}\n                                  />\n                                </span>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <p className=\"text-center loader-icon\">\n                      <img alt=\"loading\" src={Rolling} />\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <Maintainagentedit\n            handleDataTable={this.handleDataTable.bind(this)}\n            baseUrl={this.props.baseUrl}\n            userId={this.props.userId}\n            showGlobalMessage={this.props.showGlobalMessage.bind(this)}\n            hideGlobalMessage={this.props.hideGlobalMessage.bind(this)}\n            changeView={this.changeView.bind(this)}\n            editItemData={this.state.editItemData}\n          ></Maintainagentedit>\n        )}\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["Maintainagentedit","props","state","agentForm","agentMode","value","dirtyState","gateway","businessId","businessName","requestor","requestedDate","customerEmail","bucAnd","vpc","debugMode","errorsAgentForm","agentFormIsValid","serverForm","mode","agentId","group","clientId","clientSecret","duration","OAuth2","host","zone","serviceUrl","remoteHost","remotePort","proxy","allowPlugIn","plugIn","errorsServerForm","serverFormIsValid","clientForm","uaaClientId","localPort","targetId","errorsClientForm","clientFormIsValid","xclientForm","errorsXClientForm","xclientFormIsValid","xserverForm","errorsXServerForm","xserverFormIsValid","executeScriptForm","ecVersion","ecSubVersion","osType","username","password","scriptPath","agentModeButtons","text","gateways","name","id","businesses","ecVersions","ecSubVersions","ecVersionId","osTypes","plugIns","apiEndPoints","baseUrl","environments","formData","Object","assign","this","editItemData","parseInt","gatewayId","agent_id","uaaClientSecret","oauth_provider","hostUrl","serverId","userId","remote_host","remote_port","setState","that","setTimeout","handleServerFormValidation","handleClientFormValidation","handleXClientFormValidation","handleXServerFormValidation","newAgentMode","currentAgentForm","currentServerForm","currentClientForm","showGlobalMessage","hideGlobalMessage","type","prepareData","agentFormData","serverFormData","mod","dbg","aid","grp","cid","csc","dur","oa2","hst","zon","cps","sst","rht","rpt","plg","statePlugIn","indexOf","fetch","method","headers","Accept","Authorization","authToken","body","JSON","stringify","then","response","status","json","respData","errorStatus","handleDataTable","filename","data","toLowerCase","vln","tls","blob","Blob","window","navigator","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","statusMsg","catch","err","console","log","parent","sessionStorage","setItem","selectedHost","length","xClientFormData","XClientForm","clientFormData","tid","lpt","e","fieldName","target","updatedValue","checked","durationAfterValidityCheck","validity","valid","localPortAfterValidityCheck","options","i","l","selected","push","currentFormData","agentIdValue","agentIdDirtyState","groupValue","groupDirtyState","clientIdValue","clientIdDirtyState","clientSecretValue","clientSecretDirtyState","durationValue","durationDirtyState","OAuth2Value","OAuth2DirtyState","hostValue","hostDirtyState","localPortValue","localPortDirtyState","targetIdValue","targetIdDirtyState","allowPlugInValue","plugInValue","plugInDirtyState","formIsValid","errors","trim","test","substr","remotePortAfterValidityCheck","zoneValue","zoneDirtyState","serviceUrlValue","serviceUrlDirtyState","remoteHostValue","remoteHostDirtyState","remotePortValue","remotePortDirtyState","urlRegExp","className","map","agentModeButton","buttonIndex","onClick","handleChangeAgentMode","bind","disabled","onChange","event","handleAgentFormData","htmlFor","gatewayIndex","alt","src","IconGreenSortingDown","defaultValue","handleServerFormData","pattern","multiple","style","height","plugInIndex","downloadFile","changeView","handleClientFormData","handleXServerFormData","groups","groupIndex","groupId","autoComplete","CopyImg","copyFromXClientToXServer","handleXClientFormData","copyFromXServerToXClient","React","Maintainagentupgrade","tableData","newTableData","viewTable","searchString","showTableInit","preserveState","technicalTableData","subscription","environment","env","gatewayPort","admToken","servers","server","toString","uaaUrl","clients","client","generateTableStructure","tableId","tableWidth","$","offsetWidth","DataTable","dom","bSort","scrollX","language","paginate","previous","next","createdRow","row","dataIndex","css","pageLength","stateSave","destroy","fnDrawCallback","oSettings","aiDisplay","hide","show","addClass","dataObj","newDataObj","gatewayHidden","gatewayHiddenFlag","oauth_providerHidden","oauth_providerHiddenFlag","zoneHidden","zoneHiddenFlag","subscriptionHidden","subscriptionHiddenFlag","remote_hostHidden","remote_hostHiddenFlag","remote_portHidden","remote_portHiddenFlag","initTable","objectIndex","copiedObjectToChange","tempValue","array","string","filter","o","keys","some","k","undefined","includes","destroyDataTable","searchStr","searchStrWithSp","wholeData","filteredData","filterByValue","item","editItem","rowIndex","remove","draw","tbodyVal","rowdata","deletePath","deleteId","confirm","removeDataTableRow","tbodyIndex","zones","filterData","showHideTableTdData","IconArrowMore","edit","title","IconEdit","deleteData","IconDelete","Rolling","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","_e","f","TypeError","normalCompletion","didErr","call","step","_e2","_toConsumableArray","arrayLikeToArray","iter","from","unsupportedIterableToArray","_unsupportedIterableToArray","minLen","prototype","slice","constructor"],"sourceRoot":""}