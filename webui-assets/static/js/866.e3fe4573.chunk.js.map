{"version":3,"file":"static/js/866.e3fe4573.chunk.js","mappings":"6HA4EA,IAAe,IAA0B,2E,8JCxEpBA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAGnB,WAAYC,GAAQ,IAAD,yBACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,CACRC,YAAa,CAAEC,MAAO,GAAIC,YAAY,IAExCC,WAAY,GACZC,aAAa,GAPE,EA+HlB,OApHyB,EAA1B,mCACA,WACEC,YAAW,WACTC,GAAAA,CAAE,2BAA2BC,YAC5B,OAEL,+BACA,WACEC,KAAKC,kBAIP,4BACA,SAAeC,GACb,IAAIC,EAAYD,EAAEE,OAAOC,KACrBC,EACgB,aAAlBJ,EAAEE,OAAOG,KAAsBL,EAAEE,OAAOI,QAAUN,EAAEE,OAAOX,MACzDgB,EAAcC,OAAOC,OAAO,GAAIX,KAAKV,MAAMC,UAE7B,gBAAdY,IACFM,EAAYjB,YAAYC,MAAQa,EAChCG,EAAYjB,YAAYE,YAAa,GAGvCM,KAAKY,SAAS,CACZrB,SAAUkB,IAEZT,KAAKa,yBAGP,kCACA,WACE,IAAIC,EAAkBd,KAAKV,MAAMC,SAC7BwB,EAAmBD,EAAgBtB,YAAYC,MAC/CuB,EAAwBF,EAAgBtB,YAAYE,WACpDE,GAAc,EACdqB,EAAS,GAEY,KAArBF,IACEC,IACFC,EAAOzB,YAAc,mCACvBI,GAAc,GAGhBI,KAAKY,SAAS,CACZhB,YAAaA,EACbD,WAAYsB,MAIhB,2BACA,cAIC,oBAED,WAAU,IAAD,OAGP,OACE,gBAAKC,UAAU,oBAAf,UACE,gBAAKA,UAAU,iBAAf,UACE,gBAAKA,UAAU,eAAf,UACE,iBAAKA,UAAU,sBAAf,WACE,gBAAKA,UAAU,2BAAf,UACE,gBAAKA,UAAU,YAAf,UACE,gBAAIC,GAAG,sBAAP,6BACiB,6DAIrB,mBACA,gBAAKD,UAAU,6BAAf,UACE,iBAAKA,UAAU,MAAf,WACE,iBAAKA,UAAU,WAAf,WACE,iBAAKA,UAAU,2BAAf,4BAEE,gBACEE,IAAI,aACJC,IAAKC,EAAAA,QAGT,iBAAKJ,UAAU,iBAAf,WACE,kBACEX,KAAK,OACLW,UAAU,+BACVb,KAAK,cACLZ,MAAOO,KAAKV,MAAMC,SAASC,YAAYC,MACvC8B,SAAU,SAACC,GACT,EAAKC,eAAeD,OAGxB,kBAAON,UAAU,cAAjB,SACGlB,KAAKV,MAAMK,WAAX,qBAIP,gBAAKuB,UAAU,4BAAf,UACE,mBACEC,GAAG,mBACHO,UAAW1B,KAAKV,MAAMM,YACtB+B,QAAS3B,KAAK4B,cAAcC,KAAK7B,MACjCkB,UAAU,gCAJZ,gDAiBjB,EAlIkB9B,CAAsB0C,EAAAA","sources":["assets/images/icon_greensortingdown.svg","Maintain/RequestCreate.js"],"sourcesContent":["var _desc, _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconGreensortingdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"10px\",\n    height: \"5px\",\n    viewBox: \"0 0 10 5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"ic_arrow_drop_down_24px\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: \"path-1\",\n    points: \"0 0 5 5 10 0\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Welcome\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Dashboard-Ops\",\n    transform: \"translate(-306.000000, -453.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-26\",\n    transform: \"translate(242.000000, 445.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group-18\",\n    transform: \"translate(1.000000, 0.000000)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"ic_arrow_drop_down_24px\",\n    transform: \"translate(68.000000, 10.500000) rotate(-360.000000) translate(-68.000000, -10.500000) translate(63.000000, 8.000000)\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask-2\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    xlinkHref: \"#path-1\"\n  })), /*#__PURE__*/React.createElement(\"use\", {\n    id: \"Path\",\n    fill: \"#47B881\",\n    fillRule: \"nonzero\",\n    xlinkHref: \"#path-1\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"\\\\uD83C\\\\uDFA8-Color\",\n    mask: \"url(#mask-2)\",\n    fill: \"#47B881\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-7.000000, -10.000000)\",\n    id: \"Shape\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 24,\n    height: 24\n  }))))))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconGreensortingdown);\nexport default __webpack_public_path__ + \"static/media/icon_greensortingdown.31d2161218970ff2041dbc045ec6fafd.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport $ from 'jquery';\nimport  IconGreenSortingDown from '../assets/images/icon_greensortingdown.svg';\n\nexport default class RequestCreate extends React.Component {\n  \n  /* istanbul ignore next */\n  constructor(props) {\n    super(props);\n    this.state = {\n      FormData: {\n        noOfGateway: { value: \"\", dirtyState: false },\n      },\n      errorsForm: {},\n      formIsValid: false,\n    };\n  }\n\n  /* istanbul ignore next */\n  enableToolTip() {\n    setTimeout(() => {\n      $('[data-toggle=\"popover\"]').popover(); // For tooltips\n    }, 1000);\n  }\n  /* istanbul ignore next */\n  componentDidMount() {\n    this.enableToolTip();\n    // this.props.showGlobalMessage(true, true, 'Please wait...', 'custom-success');\n  }\n\n  /* istanbul ignore next */\n  handleFormData(e) {\n    let fieldName = e.target.name;\n    let updatedValue =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let currentForm = Object.assign({}, this.state.FormData);\n\n    if (fieldName === \"noOfGateway\") {\n      currentForm.noOfGateway.value = updatedValue;\n      currentForm.noOfGateway.dirtyState = true;\n    }\n\n    this.setState({\n      FormData: currentForm,\n    });\n    this.handleFormValidation();\n  }\n\n  /* istanbul ignore next */\n  handleFormValidation() {\n    let currentFormData = this.state.FormData;\n    let noOfGatewayValue = currentFormData.noOfGateway.value;\n    let noOfGatewayDirtyState = currentFormData.noOfGateway.dirtyState;\n    let formIsValid = true;\n    let errors = {};\n\n    if (noOfGatewayValue === \"\") {\n      if (noOfGatewayDirtyState)\n        errors.noOfGateway = \"Please select Number of Gateway\";\n      formIsValid = false;\n    }\n\n    this.setState({\n      formIsValid: formIsValid,\n      errorsForm: errors,\n    });\n  }\n\n  /* istanbul ignore next */\n  createRequest() {\n    // this.props.showGlobalMessage(false, true, 'Record saving initiated. Please check after some time.', 'custom-success');\n    //let currentForm = Object.assign({}, this.state.groupForm);\n    //let prepareData = {};\n  }\n\n  render() {\n    /* jshint ignore:start */\n    /* istanbul ignore next */\n    return (\n      <div className=\"row Requestcreate\">\n        <div className=\"col-md-12 mt-2\">\n          <div className=\"centered-div\">\n            <div className=\"centered-div-header\">\n              <div className=\"row Requestcreate-header\">\n                <div className=\"col-md-12\">\n                  <h6 id=\"Requestcreate-title\">\n                    Create Request <small> Creating parameters.</small>\n                  </h6>\n                </div>\n              </div>\n              <hr></hr>\n              <div className=\"changeable-form group-form\">\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <div className=\"col-sm-12 label required\">\n                      No. of Gateway\n                      <img\n                        alt=\"down-arrow\"\n                        src={IconGreenSortingDown}\n                      />\n                    </div>\n                    <div className=\"col-sm-12 mb-2\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control form-control-sm\"\n                        name=\"noOfGateway\"\n                        value={this.state.FormData.noOfGateway.value}\n                        onChange={(event) => {\n                          this.handleFormData(event);\n                        }}\n                      />\n                      <small className=\"text-danger\">\n                        {this.state.errorsForm[\"noOfGateway\"]}\n                      </small>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 mt-3 text-center\">\n                    <button\n                      id=\"create-group-btn\"\n                      disabled={!this.state.formIsValid}\n                      onClick={this.createRequest.bind(this)}\n                      className=\"btn btn-sm customize-view-btn\"\n                    >\n                      Create Request\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    /* jshint ignore:end */\n  }\n}\n"],"names":["RequestCreate","props","state","FormData","noOfGateway","value","dirtyState","errorsForm","formIsValid","setTimeout","$","popover","this","enableToolTip","e","fieldName","target","name","updatedValue","type","checked","currentForm","Object","assign","setState","handleFormValidation","currentFormData","noOfGatewayValue","noOfGatewayDirtyState","errors","className","id","alt","src","IconGreenSortingDown","onChange","event","handleFormData","disabled","onClick","createRequest","bind","React"],"sourceRoot":""}